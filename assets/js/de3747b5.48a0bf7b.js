"use strict";(self.webpackChunkwebsitev_2=self.webpackChunkwebsitev_2||[]).push([[11412],{25495:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>r,toc:()=>u});var a=n(87462),l=(n(67294),n(3905));const o={title:"How to Implement Feature Flags in React"},i=void 0,r={unversionedId:"feature-flag-tutorials/react/implementing-feature-flags",id:"feature-flag-tutorials/react/implementing-feature-flags",title:"How to Implement Feature Flags in React",description:"Leveraging feature flags allows you to toggle on and off new features you\u2019re developing, whether you\u2019re experimenting in your local environment, testing for QA purposes, or rolling out to users in production. With Unleash, you can use our tooling to implement feature flags into your application and release new features faster, strategically, and safely. But how can you do this in React?",source:"@site/docs/feature-flag-tutorials/react/implementing-feature-flags.md",sourceDirName:"feature-flag-tutorials/react",slug:"/feature-flag-tutorials/react/implementing-feature-flags",permalink:"/feature-flag-tutorials/react/implementing-feature-flags",draft:!1,editUrl:"https://github.com/Unleash/unleash/edit/main/website/docs/feature-flag-tutorials/react/implementing-feature-flags.md",tags:[],version:"current",frontMatter:{title:"How to Implement Feature Flags in React"},sidebar:"documentation",previous:{title:"Feature Flag Tutorials",permalink:"/feature-flag-tutorials"},next:{title:"A/B Testing in Flutter using Unleash and Mixpanel",permalink:"/feature-flag-tutorials/flutter/a-b-testing"}},s={},u=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Install and run Unleash on your local machine",id:"install-and-run-unleash-on-your-local-machine",level:3},{value:"Create and enable a feature flag",id:"create-and-enable-a-feature-flag",level:3},{value:"Generate an API token",id:"generate-an-api-token",level:3},{value:"Create a React app",id:"create-a-react-app",level:3},{value:"Set up Unleash in your app",id:"set-up-unleash-in-your-app",level:3},{value:"Set up components to toggle",id:"set-up-components-to-toggle",level:3},{value:"Verify the toggle experience",id:"verify-the-toggle-experience",level:3},{value:"Conclusion",id:"conclusion",level:3}],p={toc:u};function c(e){let{components:t,...o}=e;return(0,l.kt)("wrapper",(0,a.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Leveraging feature flags allows you to toggle on and off new features you\u2019re developing, whether you\u2019re experimenting in your local environment, testing for QA purposes, or rolling out to users in production. With Unleash, you can use our tooling to implement feature flags into your application and release new features faster, strategically, and safely. But how can you do this in React?"),(0,l.kt)("p",null,"In this tutorial, you will learn how to set up and use feature flags in a React application. Along the way, you will:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Spin up a local instance of Unleash"),(0,l.kt)("li",{parentName:"ul"},"Create a feature flag"),(0,l.kt)("li",{parentName:"ul"},"Create a React app and pull in your feature flag for use")),(0,l.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,l.kt)("p",null,"In this tutorial, you will need the following:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"A web browser like Chrome or Firefox"),(0,l.kt)("li",{parentName:"ul"},"Git"),(0,l.kt)("li",{parentName:"ul"},"Docker"),(0,l.kt)("li",{parentName:"ul"},"NPM or Yarn to create a React app"),(0,l.kt)("li",{parentName:"ul"},"(Optional) A code editor like Visual Studio Code")),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"React Feature Flag Architecture Diagram",src:n(96473).Z,width:"2585",height:"1376"})),(0,l.kt)("h3",{id:"install-and-run-unleash-on-your-local-machine"},"Install and run Unleash on your local machine"),(0,l.kt)("p",null,"In this section, you will install Unleash in order to run it, log in, and create a feature flag. You will use Git to clone the Unleash repository and Docker to build and run it."),(0,l.kt)("p",null,"Open a terminal window and run the following commands:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"git clone git@github.com:Unleash/unleash.git\ncd unleash\ndocker compose up -d\n")),(0,l.kt)("p",null,"You will now have Unleash installed onto your machine and running in the background.\nYou can access this instance in your web browser at ",(0,l.kt)("a",{parentName:"p",href:"http://localhost:4242/"},"http://localhost:4242")),(0,l.kt)("p",null,"Log in to the platform using these credentials:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Username: admin\nPassword: unleash4all\n")),(0,l.kt)("p",null,"The unleash platform shows a list of feature flags that you\u2019ve generated. Click on the \u2018New Feature Toggle\u2019 button to create a new feature flag."),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Create a new feature flag",src:n(55384).Z,width:"1600",height:"906"})),(0,l.kt)("h3",{id:"create-and-enable-a-feature-flag"},"Create and enable a feature flag"),(0,l.kt)("p",null,"In this section, you will create a feature flag on the platform and turn it on for your React app."),(0,l.kt)("p",null,"In the ",(0,l.kt)("a",{parentName:"p",href:"http://localhost:4242/projects/default/create-toggle/"},"Create Toggle view"),", give your feature flag a unique name and click \u2018Create toggle feature\u2019."),(0,l.kt)("p",null,"For the purpose of this tutorial, you won\u2019t need to change the default values in the rest of the feature flag form."),(0,l.kt)("p",null,"Your new feature flag is created and ready to be used. Enable the flag for your development environment, which makes it accessible to be used in the React app we will generate from your local environment."),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Create feature flag form",src:n(68598).Z,width:"2328",height:"1544"})),(0,l.kt)("p",null,"Your new feature flag is created and ready to be used. Enable the flag for your development environment, which makes it accessible to be used in the React app we will generate from your local environment."),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Enable flag for development environment",src:n(41398).Z,width:"1246",height:"1290"})),(0,l.kt)("h3",{id:"generate-an-api-token"},"Generate an API token"),(0,l.kt)("p",null,"In this section, you will generate an API token to authenticate calls made to Unleash servers to access and use the feature flag in your project. This API token will eventually be pulled into a configuration object within your React application to toggle features."),(0,l.kt)("p",null,"From your project view on the platform, click on ",(0,l.kt)("a",{parentName:"p",href:"http://localhost:4242/projects/default/settings/environments"},"Project Settings")," and then ",(0,l.kt)("a",{parentName:"p",href:"http://localhost:4242/projects/default/settings/api-access"},"API Access"),"."),(0,l.kt)("p",null,"Click on the \u2018New API token\u2019 button."),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Create new API token",src:n(53205).Z,width:"2296",height:"1142"})),(0,l.kt)("p",null,"Name the API token and connect to the Client-side SDK. "),(0,l.kt)("p",null,"The token should have access to the \u201cdevelopment\u201d environment, as shown in the platform screenshot below."),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Create new projet API token",src:n(41917).Z,width:"1404",height:"716"})),(0,l.kt)("p",null,"The API token you have generated can be managed in the API Access view in your project settings. This token will come in handy in Step 5."),(0,l.kt)("h3",{id:"create-a-react-app"},"Create a React app"),(0,l.kt)("p",null,"In this section, you will generate a React app from ",(0,l.kt)("a",{parentName:"p",href:"https://vitejs.dev/guide/"},"Vite"),", which helps developers to quickly generate React projects using only one command. The repo you will install is composed of all the components needed for a basic React app to build, run, and modify."),(0,l.kt)("p",null,"In your terminal window, navigate out of the unleash directory and into a directory in which you aim to keep your React repository."),(0,l.kt)("p",null,"Run the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"# npm 7+, extra double-dash is needed:\nnpm create vite@latest my-unleash-react-app -- --template react\n\n# yarn\nyarn create vite my-unleash-react-app --template react\n")),(0,l.kt)("p",null,"Navigate to your project and run it:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"cd my-unleash-react-app\n\n# npm\nnpm install\nnpm run dev\n\n# yarn\nyarn\nyarn dev\n")),(0,l.kt)("h3",{id:"set-up-unleash-in-your-app"},"Set up Unleash in your app"),(0,l.kt)("p",null,"It\u2019s time to pull in your newly created feature flag in your app. Run either of the following commands, depending on the package manager you are using, into your project:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"# npm\nnpm install @unleash/proxy-client-react unleash-proxy-client\n\n# yarn\nyarn add @unleash/proxy-client-react unleash-proxy-client\n")),(0,l.kt)("p",null,"Once unleash has been installed, open up a code editor like VSCode to view your React repo."),(0,l.kt)("p",null,"In ",(0,l.kt)("inlineCode",{parentName:"p"},"index.js"),", replace the code with this code snippet:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { FlagProvider } from '@unleash/proxy-client-react';\n\nconst config = {\n url: 'http://localhost:4242/api/frontend', // Your local instance Unleash API URL\n clientKey: '<client_key>', // Your client-side API token\n refreshInterval: 15, // How often (in seconds) the client should poll the proxy for updates\n appName: 'app-name', // The name of your application. It's only used for identifying your application\n};\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n <React.StrictMode>\n   <FlagProvider config={config}>\n     <App />\n   </FlagProviders>\n </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n")),(0,l.kt)("p",null,"Now, replace the ",(0,l.kt)("inlineCode",{parentName:"p"},"<client_key>")," string in the config object with the API token you generated. You can do this by copying the API token into your clipboard from the API Access view table and pasting it into the code. "),(0,l.kt)("p",null,"Name your app by replacing the ",(0,l.kt)("inlineCode",{parentName:"p"},"app-name")," string."),(0,l.kt)("p",null,"This configuration object is used to populate the ",(0,l.kt)("inlineCode",{parentName:"p"},"FlagProvider")," component that comes from Unleash and wraps around the application, using the credentials to target the specific feature flag you created for the project."),(0,l.kt)("p",null,"You can find more documentation on Unleash API tokens and client keys ",(0,l.kt)("a",{parentName:"p",href:"https://docs.getunleash.io/reference/api-tokens-and-client-keys#front-end-tokens"},"here"),"."),(0,l.kt)("p",null,"Additionally, we have documentation on using the ",(0,l.kt)("a",{parentName:"p",href:"https://docs.getunleash.io/reference/sdks/react"},"Client-Side SDK with React")," for advanced use cases."),(0,l.kt)("h3",{id:"set-up-components-to-toggle"},"Set up components to toggle"),(0,l.kt)("p",null,"In this section, you will create components that will render based on whether or not the feature flag is enabled. The components render an example navigation menu in which one is styled with Tailwind CSS and one is without any CSS. If the flag is enabled, the styled navigation bar will display. If it is not enabled, the unstyled navigation text will display in the browser."),(0,l.kt)("p",null,"This toggle experience is meant to be a much smaller, simplistic example of a CSS migration plan that a team of developers and designers could be assigned in a real setting. There is a process for switching out styling frameworks if developer teams aim to find the latest framework that suits their teams more. Feature flags can be useful for these types of projects, as pushing code doesn\u2019t have to be so binary, even though the toggling of a flag is. It is intended to represent a safe course of action that is reversible if need be as something like a brand transition begins to take place for a company or team."),(0,l.kt)("p",null,"To install Tailwind into the app, follow the steps below. You can also read into Tailwind and React more by reviewing the ",(0,l.kt)("a",{parentName:"p",href:"https://tailwindcss.com/docs/guides/vite"},"Tailwind CSS and React documentation"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"# npm\nnpm install -D tailwindcss postcss autoprefixer\nnpx tailwindcss init -p\n")),(0,l.kt)("p",null,"Add the following paths to the newly generated file ",(0,l.kt)("inlineCode",{parentName:"p"},"tailwind.config.js"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},' content: [\n   "./src/**/*.{js,jsx,ts,tsx}",\n ],\n')),(0,l.kt)("p",null,"Add directives to the file ",(0,l.kt)("inlineCode",{parentName:"p"},"index.css"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-css"},"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n")),(0,l.kt)("p",null,"Run the following command to start up the app again, this time with fast-loading updates from changes you make in the CSS."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"# npm\nnpm run start\n\n# yarn\nyarn dev\n")),(0,l.kt)("p",null,"Now, adding Tailwind CSS utility classes to HTML tags in React will automatically result in some styling changes in the UI."),(0,l.kt)("p",null,"To create the two components that will represent the feature flag being on and off, respectively, create a file called ",(0,l.kt)("inlineCode",{parentName:"p"},"Menu.js")," in the ",(0,l.kt)("inlineCode",{parentName:"p"},"/src")," directory."),(0,l.kt)("p",null,"Use this code snippet to paste into ",(0,l.kt)("inlineCode",{parentName:"p"},"src/Menu.js"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'import { useFlag } from \'@unleash/proxy-client-react\';\n\n\nconst TailWindCSSMenu = () => {\n   const menuHoverStyle = \'md:p-4 py-2 block hover:text-purple-400\';\n   return (\n   <div\n   className="\n       antialiased\n       bg-gradient-to-r\n       from-pink-300\n       via-purple-300\n       to-indigo-400\n   "\n >\n   <header>\n   <nav\n      className="\n        flex flex-wrap\n        items-center\n        justify-between\n        w-full\n        py-4\n        md:py-0\n        px-4\n        text-lg text-gray-700\n        bg-white\n      "\n    >\n     <div>\n     <div className="hidden w-full md:flex md:items-center md:w-auto" id="menu">\n        <ul\n          className="\n            pt-4\n            text-base text-gray-700\n            md:flex\n            md:justify-between\n            md:pt-0"\n        >\n          <li>\n            <a className={menuHoverStyle} href="#">\n               Features\n           </a>\n          </li>\n          <li>\n            <a className={menuHoverStyle} href="#">\n               Pricing\n           </a>\n          </li>\n          <li>\n            <a className={menuHoverStyle} href="#">\n               Customers\n           </a>\n          </li>\n          <li>\n            <a className={menuHoverStyle} href="#">\n               Blog\n           </a>\n          </li>\n          <li>\n            <a\n              className={menuHoverStyle}\n              href="#">\n               Sign Up\n           </a>\n          </li>\n        </ul>\n      </div>\n      </div>\n  </nav>\n</header>\n<div className="px-4">\n    <div\n      className="\n        flex\n        justify-center\n        items-center\n        bg-white\n        mx-auto\n        max-w-2xl\n        rounded-lg\n        my-16\n        p-16\n      "\n    >\n      <h1 className="text-2xl font-medium">Navbar with TailwindCSS</h1>\n    </div>\n  </div>\n  </div>\n  )\n};\n\nconst BarebonesNav = () => {\n   return (\n       <div>\n           <ul>\n               <li>Features</li>\n               <li>Pricing</li>\n               <li>Customers</li>\n               <li>Blog</li>\n               <li>Sign Up</li>\n           </ul>\n       </div>\n   )\n}\n\nconst Menu = () => {\n const enabled = useFlag(\'ReactCaseFlag\');\n\n return enabled ? <TailWindCSSMenu /> : <BarebonesNav />;\n\n};\n\nexport default Menu;\n\n')),(0,l.kt)("p",null,"In this file, there is:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"a styled menu component ",(0,l.kt)("inlineCode",{parentName:"li"},"TailWindCSSMenu")),(0,l.kt)("li",{parentName:"ul"},"an unstyled menu component ",(0,l.kt)("inlineCode",{parentName:"li"},"BarebonesNav")),(0,l.kt)("li",{parentName:"ul"},"a reference pointing to the feature flag ",(0,l.kt)("inlineCode",{parentName:"li"},"ReactCaseFlag")),(0,l.kt)("li",{parentName:"ul"},"a conditional rendering of the menus based upon the feature toggle")),(0,l.kt)("p",null,"Loading localhost:3000/ should show this view after the code above has been added to the repo:"),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"UI with Tailwind CSS",src:n(51750).Z,width:"2636",height:"762"})),(0,l.kt)("p",null,"If your UI resembles this, your code has correctly targeted the feature flag!"),(0,l.kt)("h3",{id:"verify-the-toggle-experience"},"Verify the toggle experience"),(0,l.kt)("p",null,"In the Unleash instance, you can toggle your feature flag on or off to verify that the different UI experiences load accordingly. "),(0,l.kt)("p",null,"Disabling the flag in the development environment results in a view of a navigation menu without any particular styling."),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Unstyled disabled flag navigation UI",src:n(59510).Z,width:"526",height:"490"})),(0,l.kt)("h3",{id:"conclusion"},"Conclusion"),(0,l.kt)("p",null,"In this tutorial, you learned how to install Unleash onto your machine, create a new feature flag, install Unleash into a new React project, and toggle a feature flag to show CSS differences in the UI between two components."))}c.isMDXComponent=!0},96473:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/react-tutorial-architecture-diagram-498a5b016f3de3ef3f5ee82090a63bbd.png"},41917:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/react-tutorial-create-api-token-form-2d5f76781a1f677acaee4fd3a65f3504.png"},53205:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/react-tutorial-create-api-token-fa3353bc3677108c20ddced621613d18.png"},68598:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/react-tutorial-create-flag-form-00b51c642a8a2131fd63443f76fc83d0.png"},55384:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/react-tutorial-create-new-flag-060d32fe7cb7c6e4e7f557b401cc4b55.png"},41398:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/react-tutorial-enable-dev-env-8952af95d3f73594df56e27d72b517fd.png"},51750:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/react-tutorial-tailwind-css-23ec8384f0b6c248bbe8d844622135ff.png"},59510:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/react-tutorial-unstyled-nav-5c4f2bd2ee490043f3ca9d4dbc870456.png"}}]);