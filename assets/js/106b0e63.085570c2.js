"use strict";(self.webpackChunkwebsitev_2=self.webpackChunkwebsitev_2||[]).push([[4206],{38309:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>u,default:()=>v,frontMatter:()=>d,metadata:()=>c,toc:()=>y});var s=a(87462),i=(a(67294),a(3905)),n=a(60961),r=a(48165),o=(a(23380),a(58475)),l=a(5428),p=a(80487),m=(a(54881),a(11666));const d={id:"get-playground",title:"Evaluate an Unleash context against a set of environments and projects.",description:"Use the provided `context`, `environment`, and `projects` to evaluate toggles on this Unleash instance. Returns a list of all toggles that match the parameters and what they evaluate to. The response also contains the input parameters that were provided.",sidebar_label:"Evaluate an Unleash context against a set of environments and projects.",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"getPlayground",tags:["Playground"],responses:{200:{description:"playgroundResponseSchema",content:{"application/json":{schema:{description:"The state of all features given the provided input.",type:"object",additionalProperties:!1,required:["features","input"],properties:{input:{description:"The given input used to evaluate the features.",type:"object",required:["environment","context"],properties:{environment:{type:"string",example:"development",description:"The environment to evaluate toggles in."},projects:{oneOf:[{type:"array",items:{type:"string"},example:["my-project"],description:"A list of projects to check for toggles in."},{type:"string",enum:["*"],description:"Check toggles in all projects."}]},context:{description:"The context to use when evaluating toggles",type:"object",additionalProperties:{type:"string",example:"top-level custom context value"},required:["appName"],properties:{appName:{type:"string",minLength:1,example:"My cool application."},currentTime:{type:"string",format:"date-time",example:"2022-07-05T12:56:41+02:00"},environment:{type:"string",deprecated:!0},properties:{type:"object",additionalProperties:{type:"string"},example:{customContextField:"this is one!",otherCustomField:"3"}},remoteAddress:{type:"string",example:"192.168.1.1"},sessionId:{type:"string",example:"b65e7b23-fec0-4814-a129-0e9861ef18fc"},userId:{type:"string",example:"username@provider.com"}}}}},features:{type:"array",description:"The list of features that have been evaluated.",items:{description:"A simplified feature toggle model intended for the Unleash playground.",type:"object",additionalProperties:!1,required:["name","projectId","isEnabled","isEnabledInCurrentEnvironment","variant","variants","strategies"],properties:{name:{type:"string",example:"my-feature",description:"The feature's name."},projectId:{type:"string",example:"my-project",description:"The ID of the project that contains this feature."},strategies:{type:"object",additionalProperties:!1,required:["result","data"],properties:{result:{description:"The cumulative results of all the feature's strategies. Can be `true`,\n                                  `false`, or `unknown`.\n                                  This property will only be `unknown`\n                                  if one or more of the strategies can't be fully evaluated and the rest of the strategies\n                                  all resolve to `false`.",anyOf:[{type:"boolean"},{type:"string",enum:["unknown"]}]},data:{description:"The strategies that apply to this feature.",type:"array",items:{type:"object",additionalProperties:!1,required:["id","name","result","segments","constraints","parameters"],properties:{name:{description:"The strategy's name.",type:"string"},id:{description:"The strategy's id.",type:"string"},result:{description:"The strategy's evaluation result. If the strategy is a custom strategy that Unleash can't evaluate, `evaluationStatus` will be `unknown`. Otherwise, it will be `true` or `false`",anyOf:[{type:"object",additionalProperties:!1,required:["evaluationStatus","enabled"],properties:{evaluationStatus:{type:"string",description:"Signals that this strategy could not be evaluated. This is most likely because you're using a custom strategy that Unleash doesn't know about.",enum:["incomplete"]},enabled:{description:"Whether this strategy resolves to `false` or if it might resolve to `true`. Because Unleash can't evaluate the strategy, it can't say for certain whether it will be `true`, but if you have failing constraints or segments, it _can_ determine that your strategy would be `false`.",anyOf:[{type:"boolean",enum:[!1]},{type:"string",enum:["unknown"]}]}}},{type:"object",additionalProperties:!1,required:["evaluationStatus","enabled"],properties:{evaluationStatus:{description:"Signals that this strategy was evaluated successfully.",type:"string",enum:["complete"]},enabled:{type:"boolean",description:"Whether this strategy evaluates to true or not."}}}]},segments:{type:"array",description:"The strategy's segments and their evaluation results.",items:{type:"object",additionalProperties:!1,required:["name","id","constraints","result"],properties:{id:{description:"The segment's id.",type:"integer"},name:{description:"The name of the segment.",example:"segment A",type:"string"},result:{description:"Whether this was evaluated as true or false.",type:"boolean"},constraints:{type:"array",description:"The list of constraints in this segment.",items:{additionalProperties:!1,type:"object",required:["contextName","operator","result"],description:"A strategy constraint. For more information, refer to [the strategy constraint reference documentation](https://docs.getunleash.io/advanced/strategy_constraints)",properties:{contextName:{description:"The name of the context field that this constraint should apply to.",example:"appName",type:"string"},operator:{description:"The operator to use when evaluating this constraint. For more information about the various operators, refer to [the strategy constraint operator documentation](https://docs.getunleash.io/advanced/strategy_constraints#strategy-constraint-operators).",type:"string",enum:["NOT_IN","IN","STR_ENDS_WITH","STR_STARTS_WITH","STR_CONTAINS","NUM_EQ","NUM_GT","NUM_GTE","NUM_LT","NUM_LTE","DATE_AFTER","DATE_BEFORE","SEMVER_EQ","SEMVER_GT","SEMVER_LT"]},caseInsensitive:{description:"Whether the operator should be case sensitive or not. Defaults to `false` (being case sensitive).",type:"boolean",default:!1},inverted:{description:"Whether the result should be negated or not. If `true`, will turn a `true` result into a `false` result and vice versa.",type:"boolean",default:!1},values:{type:"array",description:"The context values that should be used for constraint evaluation. Use this property instead of `value` for properties that accept multiple values.",items:{type:"string"}},value:{description:"The context value that should be used for constraint evaluation. Use this property instead of `values` for properties that only accept single values.",type:"string"},result:{description:"Whether this was evaluated as true or false.",type:"boolean"}}}}}}},constraints:{type:"array",description:"The strategy's constraints and their evaluation results.",items:{additionalProperties:!1,type:"object",required:["contextName","operator","result"],description:"A strategy constraint. For more information, refer to [the strategy constraint reference documentation](https://docs.getunleash.io/advanced/strategy_constraints)",properties:{contextName:{description:"The name of the context field that this constraint should apply to.",example:"appName",type:"string"},operator:{description:"The operator to use when evaluating this constraint. For more information about the various operators, refer to [the strategy constraint operator documentation](https://docs.getunleash.io/advanced/strategy_constraints#strategy-constraint-operators).",type:"string",enum:["NOT_IN","IN","STR_ENDS_WITH","STR_STARTS_WITH","STR_CONTAINS","NUM_EQ","NUM_GT","NUM_GTE","NUM_LT","NUM_LTE","DATE_AFTER","DATE_BEFORE","SEMVER_EQ","SEMVER_GT","SEMVER_LT"]},caseInsensitive:{description:"Whether the operator should be case sensitive or not. Defaults to `false` (being case sensitive).",type:"boolean",default:!1},inverted:{description:"Whether the result should be negated or not. If `true`, will turn a `true` result into a `false` result and vice versa.",type:"boolean",default:!1},values:{type:"array",description:"The context values that should be used for constraint evaluation. Use this property instead of `value` for properties that accept multiple values.",items:{type:"string"}},value:{description:"The context value that should be used for constraint evaluation. Use this property instead of `values` for properties that only accept single values.",type:"string"},result:{description:"Whether this was evaluated as true or false.",type:"boolean"}}}},parameters:{type:"object",additionalProperties:{type:"string"},description:"The strategy's constraints and their evaluation results.",example:{myParam1:"param value"}}}}}}},isEnabledInCurrentEnvironment:{type:"boolean",description:"Whether the feature is active and would be evaluated in the provided environment in a normal SDK context."},isEnabled:{description:"Whether this feature is enabled or not in the current environment.\n                          If a feature can't be fully evaluated (that is, `strategies.result` is `unknown`),\n                          this will be `false` to align with how client SDKs treat unresolved feature states.",type:"boolean",example:!0},variant:{description:"The feature variant you receive based on the provided context or the _disabled\n                          variant_. If a feature is disabled or doesn't have any\n                          variants, you would get the _disabled variant_.\n                          Otherwise, you'll get one of thefeature's defined variants.",type:"object",additionalProperties:!1,required:["name","enabled"],properties:{name:{type:"string",description:"The variant's name. If there is no variant or if the toggle is disabled, this will be `disabled`",example:"red-variant"},enabled:{type:"boolean",description:"Whether the variant is enabled or not. If the feature is disabled or if it doesn't have variants, this property will be `false`"},payload:{type:"object",additionalProperties:!1,required:["type","value"],description:"An optional payload attached to the variant.",properties:{type:{description:"The format of the payload.",type:"string",enum:["json","csv","string"]},value:{type:"string",description:"The payload value stringified.",example:'{"property": "value"}'}}}},nullable:!0,example:{name:"green",enabled:!0}},variants:{type:"array",items:{type:"object",additionalProperties:!1,required:["name","weight"],properties:{name:{type:"string"},weight:{type:"number"},weightType:{type:"string"},stickiness:{type:"string"},payload:{type:"object",required:["type","value"],properties:{type:{type:"string"},value:{type:"string"}}},overrides:{type:"array",items:{type:"object",additionalProperties:!1,required:["contextName","values"],properties:{contextName:{type:"string"},values:{type:"array",items:{type:"string"}}}}}}}}}}}}}}}},400:{description:"The request data does not match what we expect."},401:{description:"Authorization information is missing or invalid. Provide a valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."}},requestBody:{description:"playgroundRequestSchema",required:!0,content:{"application/json":{schema:{description:"Data for the playground API to evaluate toggles",type:"object",required:["environment","context"],properties:{environment:{type:"string",example:"development",description:"The environment to evaluate toggles in."},projects:{oneOf:[{type:"array",items:{type:"string"},example:["my-project"],description:"A list of projects to check for toggles in."},{type:"string",enum:["*"],description:"Check toggles in all projects."}]},context:{description:"The context to use when evaluating toggles",type:"object",additionalProperties:{type:"string",example:"top-level custom context value"},required:["appName"],properties:{appName:{type:"string",minLength:1,example:"My cool application."},currentTime:{type:"string",format:"date-time",example:"2022-07-05T12:56:41+02:00"},environment:{type:"string",deprecated:!0},properties:{type:"object",additionalProperties:{type:"string"},example:{customContextField:"this is one!",otherCustomField:"3"}},remoteAddress:{type:"string",example:"192.168.1.1"},sessionId:{type:"string",example:"b65e7b23-fec0-4814-a129-0e9861ef18fc"},userId:{type:"string",example:"username@provider.com"}}}}}}}},description:"Use the provided `context`, `environment`, and `projects` to evaluate toggles on this Unleash instance. Returns a list of all toggles that match the parameters and what they evaluate to. The response also contains the input parameters that were provided.",method:"post",path:"/api/admin/playground",servers:[{url:"<your-unleash-url>"}],security:[{apiKey:[]}],securitySchemes:{apiKey:{type:"apiKey",in:"header",name:"Authorization"}},jsonRequestBodyExample:{environment:"development",projects:["my-project"],context:{appName:"My cool application.",currentTime:"2022-07-05T12:56:41+02:00",properties:{customContextField:"this is one!",otherCustomField:"3"},remoteAddress:"192.168.1.1",sessionId:"b65e7b23-fec0-4814-a129-0e9861ef18fc",userId:"username@provider.com"}},info:{title:"Unleash API",version:"4.18.0-beta.7"},postman:{name:"Evaluate an Unleash context against a set of environments and projects.",description:{content:"Use the provided `context`, `environment`, and `projects` to evaluate toggles on this Unleash instance. Returns a list of all toggles that match the parameters and what they evaluate to. The response also contains the input parameters that were provided.",type:"text/plain"},url:{path:["api","admin","playground"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"reference/api/unleash/unleash-api"},u=void 0,c={unversionedId:"reference/api/unleash/get-playground",id:"reference/api/unleash/get-playground",title:"Evaluate an Unleash context against a set of environments and projects.",description:"Use the provided `context`, `environment`, and `projects` to evaluate toggles on this Unleash instance. Returns a list of all toggles that match the parameters and what they evaluate to. The response also contains the input parameters that were provided.",source:"@site/docs/reference/api/unleash/get-playground.api.mdx",sourceDirName:"reference/api/unleash",slug:"/reference/api/unleash/get-playground",permalink:"/reference/api/unleash/get-playground",draft:!1,editUrl:"https://github.com/Unleash/unleash/edit/main/website/docs/reference/api/unleash/get-playground.api.mdx",tags:[],version:"current",frontMatter:{id:"get-playground",title:"Evaluate an Unleash context against a set of environments and projects.",description:"Use the provided `context`, `environment`, and `projects` to evaluate toggles on this Unleash instance. Returns a list of all toggles that match the parameters and what they evaluate to. The response also contains the input parameters that were provided.",sidebar_label:"Evaluate an Unleash context against a set of environments and projects.",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"getPlayground",tags:["Playground"],responses:{200:{description:"playgroundResponseSchema",content:{"application/json":{schema:{description:"The state of all features given the provided input.",type:"object",additionalProperties:!1,required:["features","input"],properties:{input:{description:"The given input used to evaluate the features.",type:"object",required:["environment","context"],properties:{environment:{type:"string",example:"development",description:"The environment to evaluate toggles in."},projects:{oneOf:[{type:"array",items:{type:"string"},example:["my-project"],description:"A list of projects to check for toggles in."},{type:"string",enum:["*"],description:"Check toggles in all projects."}]},context:{description:"The context to use when evaluating toggles",type:"object",additionalProperties:{type:"string",example:"top-level custom context value"},required:["appName"],properties:{appName:{type:"string",minLength:1,example:"My cool application."},currentTime:{type:"string",format:"date-time",example:"2022-07-05T12:56:41+02:00"},environment:{type:"string",deprecated:!0},properties:{type:"object",additionalProperties:{type:"string"},example:{customContextField:"this is one!",otherCustomField:"3"}},remoteAddress:{type:"string",example:"192.168.1.1"},sessionId:{type:"string",example:"b65e7b23-fec0-4814-a129-0e9861ef18fc"},userId:{type:"string",example:"username@provider.com"}}}}},features:{type:"array",description:"The list of features that have been evaluated.",items:{description:"A simplified feature toggle model intended for the Unleash playground.",type:"object",additionalProperties:!1,required:["name","projectId","isEnabled","isEnabledInCurrentEnvironment","variant","variants","strategies"],properties:{name:{type:"string",example:"my-feature",description:"The feature's name."},projectId:{type:"string",example:"my-project",description:"The ID of the project that contains this feature."},strategies:{type:"object",additionalProperties:!1,required:["result","data"],properties:{result:{description:"The cumulative results of all the feature's strategies. Can be `true`,\n                                  `false`, or `unknown`.\n                                  This property will only be `unknown`\n                                  if one or more of the strategies can't be fully evaluated and the rest of the strategies\n                                  all resolve to `false`.",anyOf:[{type:"boolean"},{type:"string",enum:["unknown"]}]},data:{description:"The strategies that apply to this feature.",type:"array",items:{type:"object",additionalProperties:!1,required:["id","name","result","segments","constraints","parameters"],properties:{name:{description:"The strategy's name.",type:"string"},id:{description:"The strategy's id.",type:"string"},result:{description:"The strategy's evaluation result. If the strategy is a custom strategy that Unleash can't evaluate, `evaluationStatus` will be `unknown`. Otherwise, it will be `true` or `false`",anyOf:[{type:"object",additionalProperties:!1,required:["evaluationStatus","enabled"],properties:{evaluationStatus:{type:"string",description:"Signals that this strategy could not be evaluated. This is most likely because you're using a custom strategy that Unleash doesn't know about.",enum:["incomplete"]},enabled:{description:"Whether this strategy resolves to `false` or if it might resolve to `true`. Because Unleash can't evaluate the strategy, it can't say for certain whether it will be `true`, but if you have failing constraints or segments, it _can_ determine that your strategy would be `false`.",anyOf:[{type:"boolean",enum:[!1]},{type:"string",enum:["unknown"]}]}}},{type:"object",additionalProperties:!1,required:["evaluationStatus","enabled"],properties:{evaluationStatus:{description:"Signals that this strategy was evaluated successfully.",type:"string",enum:["complete"]},enabled:{type:"boolean",description:"Whether this strategy evaluates to true or not."}}}]},segments:{type:"array",description:"The strategy's segments and their evaluation results.",items:{type:"object",additionalProperties:!1,required:["name","id","constraints","result"],properties:{id:{description:"The segment's id.",type:"integer"},name:{description:"The name of the segment.",example:"segment A",type:"string"},result:{description:"Whether this was evaluated as true or false.",type:"boolean"},constraints:{type:"array",description:"The list of constraints in this segment.",items:{additionalProperties:!1,type:"object",required:["contextName","operator","result"],description:"A strategy constraint. For more information, refer to [the strategy constraint reference documentation](https://docs.getunleash.io/advanced/strategy_constraints)",properties:{contextName:{description:"The name of the context field that this constraint should apply to.",example:"appName",type:"string"},operator:{description:"The operator to use when evaluating this constraint. For more information about the various operators, refer to [the strategy constraint operator documentation](https://docs.getunleash.io/advanced/strategy_constraints#strategy-constraint-operators).",type:"string",enum:["NOT_IN","IN","STR_ENDS_WITH","STR_STARTS_WITH","STR_CONTAINS","NUM_EQ","NUM_GT","NUM_GTE","NUM_LT","NUM_LTE","DATE_AFTER","DATE_BEFORE","SEMVER_EQ","SEMVER_GT","SEMVER_LT"]},caseInsensitive:{description:"Whether the operator should be case sensitive or not. Defaults to `false` (being case sensitive).",type:"boolean",default:!1},inverted:{description:"Whether the result should be negated or not. If `true`, will turn a `true` result into a `false` result and vice versa.",type:"boolean",default:!1},values:{type:"array",description:"The context values that should be used for constraint evaluation. Use this property instead of `value` for properties that accept multiple values.",items:{type:"string"}},value:{description:"The context value that should be used for constraint evaluation. Use this property instead of `values` for properties that only accept single values.",type:"string"},result:{description:"Whether this was evaluated as true or false.",type:"boolean"}}}}}}},constraints:{type:"array",description:"The strategy's constraints and their evaluation results.",items:{additionalProperties:!1,type:"object",required:["contextName","operator","result"],description:"A strategy constraint. For more information, refer to [the strategy constraint reference documentation](https://docs.getunleash.io/advanced/strategy_constraints)",properties:{contextName:{description:"The name of the context field that this constraint should apply to.",example:"appName",type:"string"},operator:{description:"The operator to use when evaluating this constraint. For more information about the various operators, refer to [the strategy constraint operator documentation](https://docs.getunleash.io/advanced/strategy_constraints#strategy-constraint-operators).",type:"string",enum:["NOT_IN","IN","STR_ENDS_WITH","STR_STARTS_WITH","STR_CONTAINS","NUM_EQ","NUM_GT","NUM_GTE","NUM_LT","NUM_LTE","DATE_AFTER","DATE_BEFORE","SEMVER_EQ","SEMVER_GT","SEMVER_LT"]},caseInsensitive:{description:"Whether the operator should be case sensitive or not. Defaults to `false` (being case sensitive).",type:"boolean",default:!1},inverted:{description:"Whether the result should be negated or not. If `true`, will turn a `true` result into a `false` result and vice versa.",type:"boolean",default:!1},values:{type:"array",description:"The context values that should be used for constraint evaluation. Use this property instead of `value` for properties that accept multiple values.",items:{type:"string"}},value:{description:"The context value that should be used for constraint evaluation. Use this property instead of `values` for properties that only accept single values.",type:"string"},result:{description:"Whether this was evaluated as true or false.",type:"boolean"}}}},parameters:{type:"object",additionalProperties:{type:"string"},description:"The strategy's constraints and their evaluation results.",example:{myParam1:"param value"}}}}}}},isEnabledInCurrentEnvironment:{type:"boolean",description:"Whether the feature is active and would be evaluated in the provided environment in a normal SDK context."},isEnabled:{description:"Whether this feature is enabled or not in the current environment.\n                          If a feature can't be fully evaluated (that is, `strategies.result` is `unknown`),\n                          this will be `false` to align with how client SDKs treat unresolved feature states.",type:"boolean",example:!0},variant:{description:"The feature variant you receive based on the provided context or the _disabled\n                          variant_. If a feature is disabled or doesn't have any\n                          variants, you would get the _disabled variant_.\n                          Otherwise, you'll get one of thefeature's defined variants.",type:"object",additionalProperties:!1,required:["name","enabled"],properties:{name:{type:"string",description:"The variant's name. If there is no variant or if the toggle is disabled, this will be `disabled`",example:"red-variant"},enabled:{type:"boolean",description:"Whether the variant is enabled or not. If the feature is disabled or if it doesn't have variants, this property will be `false`"},payload:{type:"object",additionalProperties:!1,required:["type","value"],description:"An optional payload attached to the variant.",properties:{type:{description:"The format of the payload.",type:"string",enum:["json","csv","string"]},value:{type:"string",description:"The payload value stringified.",example:'{"property": "value"}'}}}},nullable:!0,example:{name:"green",enabled:!0}},variants:{type:"array",items:{type:"object",additionalProperties:!1,required:["name","weight"],properties:{name:{type:"string"},weight:{type:"number"},weightType:{type:"string"},stickiness:{type:"string"},payload:{type:"object",required:["type","value"],properties:{type:{type:"string"},value:{type:"string"}}},overrides:{type:"array",items:{type:"object",additionalProperties:!1,required:["contextName","values"],properties:{contextName:{type:"string"},values:{type:"array",items:{type:"string"}}}}}}}}}}}}}}}},400:{description:"The request data does not match what we expect."},401:{description:"Authorization information is missing or invalid. Provide a valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`."}},requestBody:{description:"playgroundRequestSchema",required:!0,content:{"application/json":{schema:{description:"Data for the playground API to evaluate toggles",type:"object",required:["environment","context"],properties:{environment:{type:"string",example:"development",description:"The environment to evaluate toggles in."},projects:{oneOf:[{type:"array",items:{type:"string"},example:["my-project"],description:"A list of projects to check for toggles in."},{type:"string",enum:["*"],description:"Check toggles in all projects."}]},context:{description:"The context to use when evaluating toggles",type:"object",additionalProperties:{type:"string",example:"top-level custom context value"},required:["appName"],properties:{appName:{type:"string",minLength:1,example:"My cool application."},currentTime:{type:"string",format:"date-time",example:"2022-07-05T12:56:41+02:00"},environment:{type:"string",deprecated:!0},properties:{type:"object",additionalProperties:{type:"string"},example:{customContextField:"this is one!",otherCustomField:"3"}},remoteAddress:{type:"string",example:"192.168.1.1"},sessionId:{type:"string",example:"b65e7b23-fec0-4814-a129-0e9861ef18fc"},userId:{type:"string",example:"username@provider.com"}}}}}}}},description:"Use the provided `context`, `environment`, and `projects` to evaluate toggles on this Unleash instance. Returns a list of all toggles that match the parameters and what they evaluate to. The response also contains the input parameters that were provided.",method:"post",path:"/api/admin/playground",servers:[{url:"<your-unleash-url>"}],security:[{apiKey:[]}],securitySchemes:{apiKey:{type:"apiKey",in:"header",name:"Authorization"}},jsonRequestBodyExample:{environment:"development",projects:["my-project"],context:{appName:"My cool application.",currentTime:"2022-07-05T12:56:41+02:00",properties:{customContextField:"this is one!",otherCustomField:"3"},remoteAddress:"192.168.1.1",sessionId:"b65e7b23-fec0-4814-a129-0e9861ef18fc",userId:"username@provider.com"}},info:{title:"Unleash API",version:"4.18.0-beta.7"},postman:{name:"Evaluate an Unleash context against a set of environments and projects.",description:{content:"Use the provided `context`, `environment`, and `projects` to evaluate toggles on this Unleash instance. Returns a list of all toggles that match the parameters and what they evaluate to. The response also contains the input parameters that were provided.",type:"text/plain"},url:{path:["api","admin","playground"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"reference/api/unleash/unleash-api"},sidebar:"documentation",previous:{title:"Playground",permalink:"/reference/api/unleash/playground"},next:{title:"Projects",permalink:"/reference/api/unleash/projects"}},h={},y=[{value:"Evaluate an Unleash context against a set of environments and projects.",id:"evaluate-an-unleash-context-against-a-set-of-environments-and-projects",level:2}],g={toc:y};function v(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,s.Z)({},g,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"evaluate-an-unleash-context-against-a-set-of-environments-and-projects"},"Evaluate an Unleash context against a set of environments and projects."),(0,i.kt)("p",null,"Use the provided ",(0,i.kt)("inlineCode",{parentName:"p"},"context"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"environment"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"projects")," to evaluate toggles on this Unleash instance. Returns a list of all toggles that match the parameters and what they evaluate to. The response also contains the input parameters that were provided."),(0,i.kt)(r.Z,{mdxType:"MimeTabs"},(0,i.kt)(m.Z,{label:"application/json",value:"application/json-schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{textAlign:"left"}},(0,i.kt)("strong",null,"Request Body"),(0,i.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," required")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}},(0,i.kt)("div",{style:{marginTop:"1rem",marginBottom:"1rem"}},(0,i.kt)("p",null,"playgroundRequestSchema"))),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(l.Z,{collapsible:!1,name:"environment",required:!0,schemaDescription:"The environment to evaluate toggles in.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"projects"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)("div",null,(0,i.kt)("div",null,(0,i.kt)("span",{className:"badge badge--info"},"oneOf"),(0,i.kt)(p.Z,{mdxType:"SchemaTabs"},(0,i.kt)(m.Z,{label:"MOD1",value:"0-item-properties",mdxType:"TabItem"},(0,i.kt)("li",null,(0,i.kt)("div",null,(0,i.kt)("strong",null,"string")))),(0,i.kt)(m.Z,{label:"MOD2",value:"1-item-properties",mdxType:"TabItem"},(0,i.kt)("li",null,(0,i.kt)("div",null,(0,i.kt)("strong",null,"string"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Possible values:")," ","[",(0,i.kt)("inlineCode",{parentName:"p"},"*"),"]")),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"Check toggles in all projects."))))))))))),(0,i.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"context"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object"),(0,i.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," required")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,i.kt)("p",null,"The context to use when evaluating toggles")),(0,i.kt)(l.Z,{collapsible:!1,name:"appName",required:!0,schemaDescription:void 0,schemaName:"string",qualifierMessage:"**Possible values:** `non-empty`",defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!1,name:"currentTime",required:!1,schemaDescription:void 0,schemaName:"date-time",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!1,name:"environment",required:!1,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"properties"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)("li",null,(0,i.kt)("div",null,(0,i.kt)("code",null,"property name*"),(0,i.kt)("span",{style:{opacity:"0.6"}}," string")))))),(0,i.kt)(l.Z,{collapsible:!1,name:"remoteAddress",required:!1,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!1,name:"sessionId",required:!1,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!1,name:"userId",required:!1,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))))))),(0,i.kt)("div",null,(0,i.kt)(n.Z,{mdxType:"ApiTabs"},(0,i.kt)(m.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"playgroundResponseSchema")),(0,i.kt)("div",null,(0,i.kt)(r.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,i.kt)(m.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,i.kt)(p.Z,{mdxType:"SchemaTabs"},(0,i.kt)(m.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{textAlign:"left"}},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"input"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,i.kt)("p",null,"The given input used to evaluate the features.")),(0,i.kt)(l.Z,{collapsible:!1,name:"environment",required:!1,schemaDescription:"The environment to evaluate toggles in.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"projects"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)("div",null,(0,i.kt)("div",null,(0,i.kt)("span",{className:"badge badge--info"},"oneOf"),(0,i.kt)(p.Z,{mdxType:"SchemaTabs"},(0,i.kt)(m.Z,{label:"MOD1",value:"0-item-properties",mdxType:"TabItem"},(0,i.kt)("li",null,(0,i.kt)("div",null,(0,i.kt)("strong",null,"string")))),(0,i.kt)(m.Z,{label:"MOD2",value:"1-item-properties",mdxType:"TabItem"},(0,i.kt)("li",null,(0,i.kt)("div",null,(0,i.kt)("strong",null,"string"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Possible values:")," ","[",(0,i.kt)("inlineCode",{parentName:"p"},"*"),"]")),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"Check toggles in all projects."))))))))))),(0,i.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"context"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,i.kt)("p",null,"The context to use when evaluating toggles")),(0,i.kt)(l.Z,{collapsible:!1,name:"appName",required:!1,schemaDescription:void 0,schemaName:"string",qualifierMessage:"**Possible values:** `non-empty`",defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!1,name:"currentTime",required:!1,schemaDescription:void 0,schemaName:"date-time",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!1,name:"environment",required:!1,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"properties"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)("li",null,(0,i.kt)("div",null,(0,i.kt)("code",null,"property name*"),(0,i.kt)("span",{style:{opacity:"0.6"}}," string")))))),(0,i.kt)(l.Z,{collapsible:!1,name:"remoteAddress",required:!1,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!1,name:"sessionId",required:!1,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!1,name:"userId",required:!1,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}))))))),(0,i.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"features"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,i.kt)("p",null,"The list of features that have been evaluated.")),(0,i.kt)(l.Z,{collapsible:!1,name:"name",required:!1,schemaDescription:"The feature's name.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!1,name:"projectId",required:!1,schemaDescription:"The ID of the project that contains this feature.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"strategies"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"result"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,i.kt)("p",null,"The cumulative results of all the feature's strategies. Can be ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),",\n",(0,i.kt)("inlineCode",{parentName:"p"},"false"),", or ",(0,i.kt)("inlineCode",{parentName:"p"},"unknown"),".\nThis property will only be ",(0,i.kt)("inlineCode",{parentName:"p"},"unknown"),"\nif one or more of the strategies can't be fully evaluated and the rest of the strategies\nall resolve to ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),".")),(0,i.kt)("div",null,(0,i.kt)("div",null,(0,i.kt)("span",{className:"badge badge--info"},"anyOf"),(0,i.kt)(p.Z,{mdxType:"SchemaTabs"},(0,i.kt)(m.Z,{label:"MOD1",value:"0-item-properties",mdxType:"TabItem"},(0,i.kt)("li",null,(0,i.kt)("div",null,(0,i.kt)("strong",null,"boolean")))),(0,i.kt)(m.Z,{label:"MOD2",value:"1-item-properties",mdxType:"TabItem"},(0,i.kt)("li",null,(0,i.kt)("div",null,(0,i.kt)("strong",null,"string"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Possible values:")," ","[",(0,i.kt)("inlineCode",{parentName:"p"},"unknown"),"]"))))))))))),(0,i.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"data"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,i.kt)("p",null,"The strategies that apply to this feature.")),(0,i.kt)(l.Z,{collapsible:!1,name:"name",required:!1,schemaDescription:"The strategy's name.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!1,name:"id",required:!1,schemaDescription:"The strategy's id.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"result"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,i.kt)("p",null,"The strategy's evaluation result. If the strategy is a custom strategy that Unleash can't evaluate, ",(0,i.kt)("inlineCode",{parentName:"p"},"evaluationStatus")," will be ",(0,i.kt)("inlineCode",{parentName:"p"},"unknown"),". Otherwise, it will be ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"false"))),(0,i.kt)("div",null,(0,i.kt)("div",null,(0,i.kt)("span",{className:"badge badge--info"},"anyOf"),(0,i.kt)(p.Z,{mdxType:"SchemaTabs"},(0,i.kt)(m.Z,{label:"MOD1",value:"0-item-properties",mdxType:"TabItem"},(0,i.kt)(l.Z,{collapsible:!1,name:"evaluationStatus",required:!1,schemaDescription:"Signals that this strategy could not be evaluated. This is most likely because you're using a custom strategy that Unleash doesn't know about.",schemaName:"string",qualifierMessage:"**Possible values:** [`incomplete`]",defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"enabled"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,i.kt)("p",null,"Whether this strategy resolves to ",(0,i.kt)("inlineCode",{parentName:"p"},"false")," or if it might resolve to ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),". Because Unleash can't evaluate the strategy, it can't say for certain whether it will be ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),", but if you have failing constraints or segments, it ",(0,i.kt)("em",{parentName:"p"},"can")," determine that your strategy would be ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),".")),(0,i.kt)("div",null,(0,i.kt)("div",null,(0,i.kt)("span",{className:"badge badge--info"},"anyOf"),(0,i.kt)(p.Z,{mdxType:"SchemaTabs"},(0,i.kt)(m.Z,{label:"MOD1",value:"0-item-properties",mdxType:"TabItem"},(0,i.kt)("li",null,(0,i.kt)("div",null,(0,i.kt)("strong",null,"boolean"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Possible values:")," ","[",(0,i.kt)("inlineCode",{parentName:"p"},"false"),"]"))))),(0,i.kt)(m.Z,{label:"MOD2",value:"1-item-properties",mdxType:"TabItem"},(0,i.kt)("li",null,(0,i.kt)("div",null,(0,i.kt)("strong",null,"string"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Possible values:")," ","[",(0,i.kt)("inlineCode",{parentName:"p"},"unknown"),"]")))))))))))),(0,i.kt)(m.Z,{label:"MOD2",value:"1-item-properties",mdxType:"TabItem"},(0,i.kt)(l.Z,{collapsible:!1,name:"evaluationStatus",required:!1,schemaDescription:"Signals that this strategy was evaluated successfully.",schemaName:"string",qualifierMessage:"**Possible values:** [`complete`]",defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!1,name:"enabled",required:!1,schemaDescription:"Whether this strategy evaluates to true or not.",schemaName:"boolean",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))))))),(0,i.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"segments"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,i.kt)("p",null,"The strategy's segments and their evaluation results.")),(0,i.kt)(l.Z,{collapsible:!1,name:"id",required:!1,schemaDescription:"The segment's id.",schemaName:"integer",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!1,name:"name",required:!1,schemaDescription:"The name of the segment.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!1,name:"result",required:!1,schemaDescription:"Whether this was evaluated as true or false.",schemaName:"boolean",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"constraints"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,i.kt)("p",null,"The list of constraints in this segment.")),(0,i.kt)(l.Z,{collapsible:!1,name:"contextName",required:!1,schemaDescription:"The name of the context field that this constraint should apply to.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!1,name:"operator",required:!1,schemaDescription:"The operator to use when evaluating this constraint. For more information about the various operators, refer to [the strategy constraint operator documentation](https://docs.getunleash.io/advanced/strategy_constraints#strategy-constraint-operators).",schemaName:"string",qualifierMessage:"**Possible values:** [`NOT_IN`, `IN`, `STR_ENDS_WITH`, `STR_STARTS_WITH`, `STR_CONTAINS`, `NUM_EQ`, `NUM_GT`, `NUM_GTE`, `NUM_LT`, `NUM_LTE`, `DATE_AFTER`, `DATE_BEFORE`, `SEMVER_EQ`, `SEMVER_GT`, `SEMVER_LT`]",defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!1,name:"caseInsensitive",required:!1,schemaDescription:"Whether the operator should be case sensitive or not. Defaults to `false` (being case sensitive).",schemaName:"boolean",qualifierMessage:void 0,defaultValue:!1,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!1,name:"inverted",required:!1,schemaDescription:"Whether the result should be negated or not. If `true`, will turn a `true` result into a `false` result and vice versa.",schemaName:"boolean",qualifierMessage:void 0,defaultValue:!1,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!1,name:"values",required:!1,schemaDescription:"The context values that should be used for constraint evaluation. Use this property instead of `value` for properties that accept multiple values.",schemaName:"string[]",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!1,name:"value",required:!1,schemaDescription:"The context value that should be used for constraint evaluation. Use this property instead of `values` for properties that only accept single values.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!1,name:"result",required:!1,schemaDescription:"Whether this was evaluated as true or false.",schemaName:"boolean",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}))))))),(0,i.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"constraints"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,i.kt)("p",null,"The strategy's constraints and their evaluation results.")),(0,i.kt)(l.Z,{collapsible:!1,name:"contextName",required:!1,schemaDescription:"The name of the context field that this constraint should apply to.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!1,name:"operator",required:!1,schemaDescription:"The operator to use when evaluating this constraint. For more information about the various operators, refer to [the strategy constraint operator documentation](https://docs.getunleash.io/advanced/strategy_constraints#strategy-constraint-operators).",schemaName:"string",qualifierMessage:"**Possible values:** [`NOT_IN`, `IN`, `STR_ENDS_WITH`, `STR_STARTS_WITH`, `STR_CONTAINS`, `NUM_EQ`, `NUM_GT`, `NUM_GTE`, `NUM_LT`, `NUM_LTE`, `DATE_AFTER`, `DATE_BEFORE`, `SEMVER_EQ`, `SEMVER_GT`, `SEMVER_LT`]",defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!1,name:"caseInsensitive",required:!1,schemaDescription:"Whether the operator should be case sensitive or not. Defaults to `false` (being case sensitive).",schemaName:"boolean",qualifierMessage:void 0,defaultValue:!1,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!1,name:"inverted",required:!1,schemaDescription:"Whether the result should be negated or not. If `true`, will turn a `true` result into a `false` result and vice versa.",schemaName:"boolean",qualifierMessage:void 0,defaultValue:!1,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!1,name:"values",required:!1,schemaDescription:"The context values that should be used for constraint evaluation. Use this property instead of `value` for properties that accept multiple values.",schemaName:"string[]",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!1,name:"value",required:!1,schemaDescription:"The context value that should be used for constraint evaluation. Use this property instead of `values` for properties that only accept single values.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!1,name:"result",required:!1,schemaDescription:"Whether this was evaluated as true or false.",schemaName:"boolean",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,i.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"parameters"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,i.kt)("p",null,"The strategy's constraints and their evaluation results.")),(0,i.kt)("li",null,(0,i.kt)("div",null,(0,i.kt)("code",null,"property name*"),(0,i.kt)("span",{style:{opacity:"0.6"}}," string")))))))))))),(0,i.kt)(l.Z,{collapsible:!1,name:"isEnabledInCurrentEnvironment",required:!1,schemaDescription:"Whether the feature is active and would be evaluated in the provided environment in a normal SDK context.",schemaName:"boolean",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!1,name:"isEnabled",required:!1,schemaDescription:"Whether this feature is enabled or not in the current environment.\n                          If a feature can't be fully evaluated (that is, `strategies.result` is `unknown`),\n                          this will be `false` to align with how client SDKs treat unresolved feature states.",schemaName:"boolean",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"variant"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,i.kt)("p",null,"The feature variant you receive based on the provided context or the ",(0,i.kt)("em",{parentName:"p"},"disabled\nvariant"),". If a feature is disabled or doesn't have any\nvariants, you would get the ",(0,i.kt)("em",{parentName:"p"},"disabled variant"),".\nOtherwise, you'll get one of thefeature's defined variants.")),(0,i.kt)(l.Z,{collapsible:!1,name:"name",required:!1,schemaDescription:"The variant's name. If there is no variant or if the toggle is disabled, this will be `disabled`",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!1,name:"enabled",required:!1,schemaDescription:"Whether the variant is enabled or not. If the feature is disabled or if it doesn't have variants, this property will be `false`",schemaName:"boolean",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"payload"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,i.kt)("p",null,"An optional payload attached to the variant.")),(0,i.kt)(l.Z,{collapsible:!1,name:"type",required:!1,schemaDescription:"The format of the payload.",schemaName:"string",qualifierMessage:"**Possible values:** [`json`, `csv`, `string`]",defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!1,name:"value",required:!1,schemaDescription:"The payload value stringified.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}))))))),(0,i.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"variants"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)(l.Z,{collapsible:!1,name:"name",required:!1,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!1,name:"weight",required:!1,schemaDescription:void 0,schemaName:"number",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!1,name:"weightType",required:!1,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!1,name:"stickiness",required:!1,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"payload"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)(l.Z,{collapsible:!1,name:"type",required:!1,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!1,name:"value",required:!1,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,i.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"overrides"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)(l.Z,{collapsible:!1,name:"contextName",required:!1,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(l.Z,{collapsible:!1,name:"values",required:!1,schemaDescription:void 0,schemaName:"string[]",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}))))))))))))),(0,i.kt)(m.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,i.kt)(o.Z,{responseExample:'{\n  "input": {\n    "environment": "development",\n    "projects": [\n      "my-project"\n    ],\n    "context": {\n      "appName": "My cool application.",\n      "currentTime": "2022-07-05T12:56:41+02:00",\n      "properties": {\n        "customContextField": "this is one!",\n        "otherCustomField": "3"\n      },\n      "remoteAddress": "192.168.1.1",\n      "sessionId": "b65e7b23-fec0-4814-a129-0e9861ef18fc",\n      "userId": "username@provider.com"\n    }\n  },\n  "features": [\n    {\n      "name": "my-feature",\n      "projectId": "my-project",\n      "strategies": {\n        "result": true,\n        "data": [\n          {\n            "name": "string",\n            "id": "string",\n            "result": {\n              "evaluationStatus": "incomplete",\n              "enabled": false\n            },\n            "segments": [\n              {\n                "id": 0,\n                "name": "segment A",\n                "result": true,\n                "constraints": [\n                  {\n                    "contextName": "appName",\n                    "operator": "NOT_IN",\n                    "caseInsensitive": false,\n                    "inverted": false,\n                    "values": [\n                      "string"\n                    ],\n                    "value": "string",\n                    "result": true\n                  }\n                ]\n              }\n            ],\n            "constraints": [\n              {\n                "contextName": "appName",\n                "operator": "NOT_IN",\n                "caseInsensitive": false,\n                "inverted": false,\n                "values": [\n                  "string"\n                ],\n                "value": "string",\n                "result": true\n              }\n            ],\n            "parameters": {\n              "myParam1": "param value"\n            }\n          }\n        ]\n      },\n      "isEnabledInCurrentEnvironment": true,\n      "isEnabled": true,\n      "variant": {\n        "name": "green",\n        "enabled": true\n      },\n      "variants": [\n        {\n          "name": "string",\n          "weight": 0,\n          "weightType": "string",\n          "stickiness": "string",\n          "payload": {\n            "type": "string",\n            "value": "string"\n          },\n          "overrides": [\n            {\n              "contextName": "string",\n              "values": [\n                "string"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,i.kt)(m.Z,{label:"400",value:"400",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"The request data does not match what we expect.")),(0,i.kt)("div",null)),(0,i.kt)(m.Z,{label:"401",value:"401",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"Authorization information is missing or invalid. Provide a valid API token as the ",(0,i.kt)("inlineCode",{parentName:"p"},"authorization")," header, e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"authorization:*.*.my-admin-token"),".")),(0,i.kt)("div",null)))))}v.isMDXComponent=!0}}]);