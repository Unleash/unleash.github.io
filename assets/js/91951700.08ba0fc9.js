"use strict";(self.webpackChunkwebsitev_2=self.webpackChunkwebsitev_2||[]).push([[4845],{22801:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>f,contentTitle:()=>g,default:()=>v,frontMatter:()=>u,metadata:()=>y,toc:()=>b});var i=a(87462),r=(a(67294),a(3905)),s=a(80334),n=(a(11032),a(46062)),o=a(57138),p=a(21439),m=a(9531),c=a(15761),l=a(73418),d=a(92414),h=a(11666);const u={id:"get-pending-change-requests-for-feature",title:"Retrieves all pending change requests referencing a feature in the project",description:"This endpoint will retrieve all pending change requests (change requests with a status of Draft | In review | Approved) referencing the given feature toggle name.",sidebar_label:"Retrieves all pending change requests referencing a feature in the project",hide_title:!0,hide_table_of_contents:!0,api:{description:"This endpoint will retrieve all pending change requests (change requests with a status of Draft | In review | Approved) referencing the given feature toggle name.",tags:["Change Requests"],operationId:"getPendingChangeRequestsForFeature",responses:{200:{description:"changeRequestsSchema",content:{"application/json":{schema:{type:"array",description:"A list of change requests",items:{additionalProperties:!1,description:"A [change request](https://docs.getunleash.io/reference/change-requests)",type:"object",required:["id","environment","state","minApprovals","project","features","segments","createdAt","createdBy"],properties:{id:{type:"number",example:3,description:"This change requests's ID."},title:{type:"string",example:"Increasing gradual rollout",description:"A title describing the change request's content."},environment:{type:"string",example:"development",description:"The environment in which the changes should be applied."},state:{type:"string",enum:["Draft","In review","Approved","Applied","Cancelled"],description:"The current state of the change request."},minApprovals:{type:"number",example:2,description:"The minimum number of approvals required before this change request can be applied."},project:{type:"string",example:"unleash-project",description:"The project this change request belongs to."},features:{type:"array",description:"The list of features and their changes that relate to this change request.",items:{additionalProperties:!1,description:"A feature and all its suggested changes.",type:"object",required:["name","changes"],properties:{name:{type:"string",example:"my-feature",description:"The name of the feature"},conflict:{type:"string",example:"Feature has been archived",description:"A string describing the conflicts related to this change. Only present if there are any concflicts on the feature level."},changes:{type:"array",description:"List of changes inside change request. This list may be empty when listing all change requests for a project.",items:{type:"object",description:"A change request event, containing info about the type of change and the specific changes.",required:["id","action","payload"],properties:{id:{type:"number",example:33,description:"The ID of this change."},action:{type:"string",example:"updateStrategy",description:"The kind of action that the change contains information about."},conflict:{type:"string",example:"Strategy has been deleted",description:"A description of the conflict caused by this change. Only present if there are any conflicts."},payload:{description:"The data required to perform this action.",oneOf:[{type:"string"},{type:"boolean"},{type:"object"},{type:"number"},{type:"array",description:"An array of strategies with their new sort order",items:{type:"object",additionalProperties:!1,required:["id","sortOrder"],description:"A strategy with its new sort order",properties:{id:{type:"string",example:"9c40958a-daac-400e-98fb-3bb438567008",description:"The ID of the strategy"},sortOrder:{type:"number",example:1,description:"The new sort order of the strategy"}}},title:"setStrategySortOrderSchema"}]},createdBy:{type:"object",description:"The user who created this change.",properties:{username:{type:"string",nullable:!0,description:"The user's username."},imageUrl:{type:"string",nullable:!0,format:"uri",description:"The URL where the user's image can be found."}}},createdAt:{description:"When this change was suggested",type:"string",format:"date-time",example:"2023-07-31T13:22:03+02:00"}},title:"changeRequestChangeSchema"}},defaultChange:{type:"object",description:"A description of a default change that will be applied with the change request to prevent invalid states.\n\nDefault changes are changes that are applied in addition to explicit user-specified changes when a change request is applied. Any default changes are applied in the background and are not a real part of the change request.",additionalProperties:!1,required:["action","payload"],properties:{action:{type:"string",example:"addStrategy",description:"The kind of action this is."},payload:{type:"object",description:"The necessary data to perform this change.","x-enforcer-exception-skip-codes":"WSCH006",example:{name:"flexibleRollout",title:"",disabled:!1,segments:[],parameters:{groupId:"my-feature",rollout:"100",stickiness:"default"},constraints:[{values:["ux"],inverted:!1,operator:"STR_CONTAINS",contextName:"userId",caseInsensitive:!1}]}}},title:"changeRequestDefaultChangeSchema"}},title:"changeRequestFeatureSchema"}},segments:{type:"array",description:"The list of segments and their changes that relate to this change request.",items:{type:"object",description:"A change request event, containing info about the type of change and the specific changes.",required:["id","action","payload"],properties:{id:{type:"number",example:33,description:"The ID of this change."},action:{type:"string",example:"updateStrategy",description:"The kind of action that the change contains information about."},conflict:{type:"string",example:"Strategy has been deleted",description:"A description of the conflict caused by this change. Only present if there are any conflicts."},payload:{description:"The data required to perform this action.",oneOf:[{type:"string"},{type:"boolean"},{type:"object"},{type:"number"},{type:"array",description:"An array of strategies with their new sort order",items:{type:"object",additionalProperties:!1,required:["id","sortOrder"],description:"A strategy with its new sort order",properties:{id:{type:"string",example:"9c40958a-daac-400e-98fb-3bb438567008",description:"The ID of the strategy"},sortOrder:{type:"number",example:1,description:"The new sort order of the strategy"}}},title:"setStrategySortOrderSchema"}]},createdBy:{type:"object",description:"The user who created this change.",properties:{username:{type:"string",nullable:!0,description:"The user's username."},imageUrl:{type:"string",nullable:!0,format:"uri",description:"The URL where the user's image can be found."}}},createdAt:{description:"When this change was suggested",type:"string",format:"date-time",example:"2023-07-31T13:22:03+02:00"}},title:"changeRequestChangeSchema"}},approvals:{type:"array",description:"A list of approvals that this change request has received.",items:{additionalProperties:!1,type:"object",description:"Information about a [change request](https://docs.getunleash.io/reference/change-requests) approval.",required:["createdBy","createdAt"],properties:{createdBy:{type:"object",description:"Information about the user who gave this approval.",properties:{id:{type:"number",example:33,description:"The ID of the user who gave this approval."},username:{type:"string",example:"unleash-user",description:"The approving user's username."},imageUrl:{type:"string",format:"uri",description:"The URL where the user's image can be found."}}},createdAt:{type:"string",format:"date-time",example:"2022-12-12T12:13:24.218Z",description:"When the approval was given."}},title:"changeRequestApprovalSchema"}},comments:{type:"array",description:"All comments that have been made on this change request.",items:{additionalProperties:!1,type:"object",description:"A comment belonging to a [change request](https://docs.getunleash.io/reference/change-requests).",required:["text","createdBy","createdAt"],properties:{id:{type:"number",example:33,description:"The comment's ID. Unique per change request."},text:{type:"string",example:"This is a comment",description:"The content of the comment."},createdBy:{type:"object",description:"Information about the user who posted the comment",properties:{username:{type:"string",nullable:!0,example:"unleash-user",description:"The user's username."},imageUrl:{type:"string",nullable:!0,format:"uri",description:"The URL where the user's image can be found."}}},createdAt:{type:"string",format:"date-time",example:"2022-12-12T12:13:24.218Z",description:"When the comment was made."}},title:"changeRequestCommentSchema"}},createdBy:{description:"The user who created this change request.",type:"object",properties:{username:{type:"string",nullable:!0,example:"Hunter"},imageUrl:{type:"string",format:"uri",nullable:!0,description:"The URL of the user's profile image."}}},createdAt:{description:"When this change request was created.",type:"string",format:"date-time",example:"2023-07-31T13:33:02Z"}},title:"changeRequestSchema"},title:"changeRequestsSchema"}}}}},parameters:[{name:"projectId",in:"path",required:!0,schema:{type:"string"}},{name:"featureName",in:"path",required:!0,schema:{type:"string"}}],method:"get",path:"/api/admin/projects/{projectId}/change-requests/pending/{featureName}",servers:[{url:"<your-unleash-url>"}],security:[{apiKey:[]}],securitySchemes:{apiKey:{type:"apiKey",in:"header",name:"Authorization"}},info:{title:"Unleash API",version:"5.3.0-main"},postman:{name:"Retrieves all pending change requests referencing a feature in the project",description:{content:"This endpoint will retrieve all pending change requests (change requests with a status of Draft | In review | Approved) referencing the given feature toggle name.",type:"text/plain"},url:{path:["api","admin","projects",":projectId","change-requests","pending",":featureName"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) ",type:"text/plain"},type:"any",value:"",key:"projectId"},{disabled:!1,description:{content:"(Required) ",type:"text/plain"},type:"any",value:"",key:"featureName"}]},header:[{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"reference/api/unleash/unleash-api",custom_edit_url:null},g=void 0,y={unversionedId:"reference/api/unleash/get-pending-change-requests-for-feature",id:"reference/api/unleash/get-pending-change-requests-for-feature",title:"Retrieves all pending change requests referencing a feature in the project",description:"This endpoint will retrieve all pending change requests (change requests with a status of Draft | In review | Approved) referencing the given feature toggle name.",source:"@site/docs/reference/api/unleash/get-pending-change-requests-for-feature.api.mdx",sourceDirName:"reference/api/unleash",slug:"/reference/api/unleash/get-pending-change-requests-for-feature",permalink:"/reference/api/unleash/get-pending-change-requests-for-feature",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"get-pending-change-requests-for-feature",title:"Retrieves all pending change requests referencing a feature in the project",description:"This endpoint will retrieve all pending change requests (change requests with a status of Draft | In review | Approved) referencing the given feature toggle name.",sidebar_label:"Retrieves all pending change requests referencing a feature in the project",hide_title:!0,hide_table_of_contents:!0,api:{description:"This endpoint will retrieve all pending change requests (change requests with a status of Draft | In review | Approved) referencing the given feature toggle name.",tags:["Change Requests"],operationId:"getPendingChangeRequestsForFeature",responses:{200:{description:"changeRequestsSchema",content:{"application/json":{schema:{type:"array",description:"A list of change requests",items:{additionalProperties:!1,description:"A [change request](https://docs.getunleash.io/reference/change-requests)",type:"object",required:["id","environment","state","minApprovals","project","features","segments","createdAt","createdBy"],properties:{id:{type:"number",example:3,description:"This change requests's ID."},title:{type:"string",example:"Increasing gradual rollout",description:"A title describing the change request's content."},environment:{type:"string",example:"development",description:"The environment in which the changes should be applied."},state:{type:"string",enum:["Draft","In review","Approved","Applied","Cancelled"],description:"The current state of the change request."},minApprovals:{type:"number",example:2,description:"The minimum number of approvals required before this change request can be applied."},project:{type:"string",example:"unleash-project",description:"The project this change request belongs to."},features:{type:"array",description:"The list of features and their changes that relate to this change request.",items:{additionalProperties:!1,description:"A feature and all its suggested changes.",type:"object",required:["name","changes"],properties:{name:{type:"string",example:"my-feature",description:"The name of the feature"},conflict:{type:"string",example:"Feature has been archived",description:"A string describing the conflicts related to this change. Only present if there are any concflicts on the feature level."},changes:{type:"array",description:"List of changes inside change request. This list may be empty when listing all change requests for a project.",items:{type:"object",description:"A change request event, containing info about the type of change and the specific changes.",required:["id","action","payload"],properties:{id:{type:"number",example:33,description:"The ID of this change."},action:{type:"string",example:"updateStrategy",description:"The kind of action that the change contains information about."},conflict:{type:"string",example:"Strategy has been deleted",description:"A description of the conflict caused by this change. Only present if there are any conflicts."},payload:{description:"The data required to perform this action.",oneOf:[{type:"string"},{type:"boolean"},{type:"object"},{type:"number"},{type:"array",description:"An array of strategies with their new sort order",items:{type:"object",additionalProperties:!1,required:["id","sortOrder"],description:"A strategy with its new sort order",properties:{id:{type:"string",example:"9c40958a-daac-400e-98fb-3bb438567008",description:"The ID of the strategy"},sortOrder:{type:"number",example:1,description:"The new sort order of the strategy"}}},title:"setStrategySortOrderSchema"}]},createdBy:{type:"object",description:"The user who created this change.",properties:{username:{type:"string",nullable:!0,description:"The user's username."},imageUrl:{type:"string",nullable:!0,format:"uri",description:"The URL where the user's image can be found."}}},createdAt:{description:"When this change was suggested",type:"string",format:"date-time",example:"2023-07-31T13:22:03+02:00"}},title:"changeRequestChangeSchema"}},defaultChange:{type:"object",description:"A description of a default change that will be applied with the change request to prevent invalid states.\n\nDefault changes are changes that are applied in addition to explicit user-specified changes when a change request is applied. Any default changes are applied in the background and are not a real part of the change request.",additionalProperties:!1,required:["action","payload"],properties:{action:{type:"string",example:"addStrategy",description:"The kind of action this is."},payload:{type:"object",description:"The necessary data to perform this change.","x-enforcer-exception-skip-codes":"WSCH006",example:{name:"flexibleRollout",title:"",disabled:!1,segments:[],parameters:{groupId:"my-feature",rollout:"100",stickiness:"default"},constraints:[{values:["ux"],inverted:!1,operator:"STR_CONTAINS",contextName:"userId",caseInsensitive:!1}]}}},title:"changeRequestDefaultChangeSchema"}},title:"changeRequestFeatureSchema"}},segments:{type:"array",description:"The list of segments and their changes that relate to this change request.",items:{type:"object",description:"A change request event, containing info about the type of change and the specific changes.",required:["id","action","payload"],properties:{id:{type:"number",example:33,description:"The ID of this change."},action:{type:"string",example:"updateStrategy",description:"The kind of action that the change contains information about."},conflict:{type:"string",example:"Strategy has been deleted",description:"A description of the conflict caused by this change. Only present if there are any conflicts."},payload:{description:"The data required to perform this action.",oneOf:[{type:"string"},{type:"boolean"},{type:"object"},{type:"number"},{type:"array",description:"An array of strategies with their new sort order",items:{type:"object",additionalProperties:!1,required:["id","sortOrder"],description:"A strategy with its new sort order",properties:{id:{type:"string",example:"9c40958a-daac-400e-98fb-3bb438567008",description:"The ID of the strategy"},sortOrder:{type:"number",example:1,description:"The new sort order of the strategy"}}},title:"setStrategySortOrderSchema"}]},createdBy:{type:"object",description:"The user who created this change.",properties:{username:{type:"string",nullable:!0,description:"The user's username."},imageUrl:{type:"string",nullable:!0,format:"uri",description:"The URL where the user's image can be found."}}},createdAt:{description:"When this change was suggested",type:"string",format:"date-time",example:"2023-07-31T13:22:03+02:00"}},title:"changeRequestChangeSchema"}},approvals:{type:"array",description:"A list of approvals that this change request has received.",items:{additionalProperties:!1,type:"object",description:"Information about a [change request](https://docs.getunleash.io/reference/change-requests) approval.",required:["createdBy","createdAt"],properties:{createdBy:{type:"object",description:"Information about the user who gave this approval.",properties:{id:{type:"number",example:33,description:"The ID of the user who gave this approval."},username:{type:"string",example:"unleash-user",description:"The approving user's username."},imageUrl:{type:"string",format:"uri",description:"The URL where the user's image can be found."}}},createdAt:{type:"string",format:"date-time",example:"2022-12-12T12:13:24.218Z",description:"When the approval was given."}},title:"changeRequestApprovalSchema"}},comments:{type:"array",description:"All comments that have been made on this change request.",items:{additionalProperties:!1,type:"object",description:"A comment belonging to a [change request](https://docs.getunleash.io/reference/change-requests).",required:["text","createdBy","createdAt"],properties:{id:{type:"number",example:33,description:"The comment's ID. Unique per change request."},text:{type:"string",example:"This is a comment",description:"The content of the comment."},createdBy:{type:"object",description:"Information about the user who posted the comment",properties:{username:{type:"string",nullable:!0,example:"unleash-user",description:"The user's username."},imageUrl:{type:"string",nullable:!0,format:"uri",description:"The URL where the user's image can be found."}}},createdAt:{type:"string",format:"date-time",example:"2022-12-12T12:13:24.218Z",description:"When the comment was made."}},title:"changeRequestCommentSchema"}},createdBy:{description:"The user who created this change request.",type:"object",properties:{username:{type:"string",nullable:!0,example:"Hunter"},imageUrl:{type:"string",format:"uri",nullable:!0,description:"The URL of the user's profile image."}}},createdAt:{description:"When this change request was created.",type:"string",format:"date-time",example:"2023-07-31T13:33:02Z"}},title:"changeRequestSchema"},title:"changeRequestsSchema"}}}}},parameters:[{name:"projectId",in:"path",required:!0,schema:{type:"string"}},{name:"featureName",in:"path",required:!0,schema:{type:"string"}}],method:"get",path:"/api/admin/projects/{projectId}/change-requests/pending/{featureName}",servers:[{url:"<your-unleash-url>"}],security:[{apiKey:[]}],securitySchemes:{apiKey:{type:"apiKey",in:"header",name:"Authorization"}},info:{title:"Unleash API",version:"5.3.0-main"},postman:{name:"Retrieves all pending change requests referencing a feature in the project",description:{content:"This endpoint will retrieve all pending change requests (change requests with a status of Draft | In review | Approved) referencing the given feature toggle name.",type:"text/plain"},url:{path:["api","admin","projects",":projectId","change-requests","pending",":featureName"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) ",type:"text/plain"},type:"any",value:"",key:"projectId"},{disabled:!1,description:{content:"(Required) ",type:"text/plain"},type:"any",value:"",key:"featureName"}]},header:[{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"reference/api/unleash/unleash-api",custom_edit_url:null},sidebar:"documentation",previous:{title:"Retrieves all change requests for a project",permalink:"/reference/api/unleash/get-change-requests-for-project"},next:{title:"Retrieves one change request by id",permalink:"/reference/api/unleash/get-change-request"}},f={},b=[{value:"Request",id:"request",level:2}],k={toc:b};function v(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,i.Z)({},k,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{className:"openapi__heading"},"Retrieves all pending change requests referencing a feature in the project"),(0,r.kt)(n.Z,{method:"get",path:"/api/admin/projects/{projectId}/change-requests/pending/{featureName}",mdxType:"MethodEndpoint"}),(0,r.kt)(o.Z,{infoPath:"reference/api/unleash/unleash-api",mdxType:"SecuritySchemes"}),(0,r.kt)("p",null,"This endpoint will retrieve all pending change requests (change requests with a status of Draft | In review | Approved) referencing the given feature toggle name."),(0,r.kt)("h2",{id:"request"},"Request"),(0,r.kt)("details",{style:{marginBottom:"1rem"},className:"openapi-markdown__details","data-collapsed":!1,open:!0},(0,r.kt)("summary",{style:{}},(0,r.kt)("h3",{className:"openapi-markdown__details-summary-header-params"},"Path Parameters")),(0,r.kt)("div",null,(0,r.kt)("ul",null,(0,r.kt)(m.Z,{className:"paramsItem",param:{name:"projectId",in:"path",required:!0,schema:{type:"string"}},mdxType:"ParamsItem"}),(0,r.kt)(m.Z,{className:"paramsItem",param:{name:"featureName",in:"path",required:!0,schema:{type:"string"}},mdxType:"ParamsItem"})))),(0,r.kt)("div",null,(0,r.kt)("div",null,(0,r.kt)(s.Z,{mdxType:"ApiTabs"},(0,r.kt)(h.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,r.kt)("div",null,(0,r.kt)("p",null,"changeRequestsSchema")),(0,r.kt)("div",null,(0,r.kt)(p.Z,{className:"openapi-tabs__mime",schemaType:"response",mdxType:"MimeTabs"},(0,r.kt)(h.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,r.kt)(d.Z,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,r.kt)(h.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,r.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,r.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,r.kt)("strong",null,"Schema")),(0,r.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,r.kt)("ul",{style:{marginLeft:"1rem"}},(0,r.kt)("li",null,(0,r.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,r.kt)(l.Z,{collapsible:!1,name:"id",required:!0,schemaName:"number",qualifierMessage:void 0,schema:{type:"number",example:3,description:"This change requests's ID."},mdxType:"SchemaItem"}),(0,r.kt)(l.Z,{collapsible:!1,name:"title",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Increasing gradual rollout",description:"A title describing the change request's content."},mdxType:"SchemaItem"}),(0,r.kt)(l.Z,{collapsible:!1,name:"environment",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"development",description:"The environment in which the changes should be applied."},mdxType:"SchemaItem"}),(0,r.kt)(l.Z,{collapsible:!1,name:"state",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`Draft`, `In review`, `Approved`, `Applied`, `Cancelled`]",schema:{type:"string",enum:["Draft","In review","Approved","Applied","Cancelled"],description:"The current state of the change request."},mdxType:"SchemaItem"}),(0,r.kt)(l.Z,{collapsible:!1,name:"minApprovals",required:!0,schemaName:"number",qualifierMessage:void 0,schema:{type:"number",example:2,description:"The minimum number of approvals required before this change request can be applied."},mdxType:"SchemaItem"}),(0,r.kt)(l.Z,{collapsible:!1,name:"project",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"unleash-project",description:"The project this change request belongs to."},mdxType:"SchemaItem"}),(0,r.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,r.kt)("details",{style:{},className:"openapi-markdown__details"},(0,r.kt)("summary",{style:{}},(0,r.kt)("span",{className:"openapi-schema__container"},(0,r.kt)("strong",{className:"openapi-schema__property"},"features"),(0,r.kt)("span",{className:"openapi-schema__name"}," object[]"),(0,r.kt)("span",{className:"openapi-schema__divider"}),(0,r.kt)("span",{className:"openapi-schema__required"},"required"))),(0,r.kt)("div",{style:{marginLeft:"1rem"}},(0,r.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,r.kt)("p",null,"The list of features and their changes that relate to this change request.")),(0,r.kt)("li",null,(0,r.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,r.kt)(l.Z,{collapsible:!1,name:"name",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"my-feature",description:"The name of the feature"},mdxType:"SchemaItem"}),(0,r.kt)(l.Z,{collapsible:!1,name:"conflict",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Feature has been archived",description:"A string describing the conflicts related to this change. Only present if there are any concflicts on the feature level."},mdxType:"SchemaItem"}),(0,r.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,r.kt)("details",{style:{},className:"openapi-markdown__details"},(0,r.kt)("summary",{style:{}},(0,r.kt)("span",{className:"openapi-schema__container"},(0,r.kt)("strong",{className:"openapi-schema__property"},"changes"),(0,r.kt)("span",{className:"openapi-schema__name"}," object[]"),(0,r.kt)("span",{className:"openapi-schema__divider"}),(0,r.kt)("span",{className:"openapi-schema__required"},"required"))),(0,r.kt)("div",{style:{marginLeft:"1rem"}},(0,r.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,r.kt)("p",null,"List of changes inside change request. This list may be empty when listing all change requests for a project.")),(0,r.kt)("li",null,(0,r.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,r.kt)(l.Z,{collapsible:!1,name:"id",required:!0,schemaName:"number",qualifierMessage:void 0,schema:{type:"number",example:33,description:"The ID of this change."},mdxType:"SchemaItem"}),(0,r.kt)(l.Z,{collapsible:!1,name:"action",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"updateStrategy",description:"The kind of action that the change contains information about."},mdxType:"SchemaItem"}),(0,r.kt)(l.Z,{collapsible:!1,name:"conflict",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Strategy has been deleted",description:"A description of the conflict caused by this change. Only present if there are any conflicts."},mdxType:"SchemaItem"}),(0,r.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,r.kt)("details",{style:{},className:"openapi-markdown__details"},(0,r.kt)("summary",{style:{}},(0,r.kt)("span",{className:"openapi-schema__container"},(0,r.kt)("strong",{className:"openapi-schema__property"},"payload"),(0,r.kt)("span",{className:"openapi-schema__name"}," object"),(0,r.kt)("span",{className:"openapi-schema__divider"}),(0,r.kt)("span",{className:"openapi-schema__required"},"required"))),(0,r.kt)("div",{style:{marginLeft:"1rem"}},(0,r.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,r.kt)("p",null,"The data required to perform this action.")),(0,r.kt)("div",null,(0,r.kt)("span",{className:"badge badge--info"},"oneOf"),(0,r.kt)(d.Z,{mdxType:"SchemaTabs"},(0,r.kt)(h.Z,{label:"MOD1",value:"0-item-properties",mdxType:"TabItem"},(0,r.kt)("li",null,(0,r.kt)("div",null,(0,r.kt)("strong",null,"string")))),(0,r.kt)(h.Z,{label:"MOD2",value:"1-item-properties",mdxType:"TabItem"},(0,r.kt)("li",null,(0,r.kt)("div",null,(0,r.kt)("strong",null,"boolean")))),(0,r.kt)(h.Z,{label:"MOD4",value:"3-item-properties",mdxType:"TabItem"},(0,r.kt)("li",null,(0,r.kt)("div",null,(0,r.kt)("strong",null,"number")))),(0,r.kt)(h.Z,{label:"setStrategySortOrderSchema",value:"4-item-properties",mdxType:"TabItem"},(0,r.kt)("li",null,(0,r.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,r.kt)(l.Z,{collapsible:!1,name:"id",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"9c40958a-daac-400e-98fb-3bb438567008",description:"The ID of the strategy"},mdxType:"SchemaItem"}),(0,r.kt)(l.Z,{collapsible:!1,name:"sortOrder",required:!0,schemaName:"number",qualifierMessage:void 0,schema:{type:"number",example:1,description:"The new sort order of the strategy"},mdxType:"SchemaItem"}),(0,r.kt)("li",null,(0,r.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]")))))))),(0,r.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,r.kt)("details",{style:{},className:"openapi-markdown__details"},(0,r.kt)("summary",{style:{}},(0,r.kt)("span",{className:"openapi-schema__container"},(0,r.kt)("strong",{className:"openapi-schema__property"},"createdBy"),(0,r.kt)("span",{className:"openapi-schema__name"}," object"))),(0,r.kt)("div",{style:{marginLeft:"1rem"}},(0,r.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,r.kt)("p",null,"The user who created this change.")),(0,r.kt)(l.Z,{collapsible:!1,name:"username",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",nullable:!0,description:"The user's username."},mdxType:"SchemaItem"}),(0,r.kt)(l.Z,{collapsible:!1,name:"imageUrl",required:!1,schemaName:"uri",qualifierMessage:void 0,schema:{type:"string",nullable:!0,format:"uri",description:"The URL where the user's image can be found."},mdxType:"SchemaItem"})))),(0,r.kt)(l.Z,{collapsible:!1,name:"createdAt",required:!1,schemaName:"date-time",qualifierMessage:void 0,schema:{description:"When this change was suggested",type:"string",format:"date-time",example:"2023-07-31T13:22:03+02:00"},mdxType:"SchemaItem"}),(0,r.kt)("li",null,(0,r.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]"))))),(0,r.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,r.kt)("details",{style:{},className:"openapi-markdown__details"},(0,r.kt)("summary",{style:{}},(0,r.kt)("span",{className:"openapi-schema__container"},(0,r.kt)("strong",{className:"openapi-schema__property"},"defaultChange"),(0,r.kt)("span",{className:"openapi-schema__name"}," object"))),(0,r.kt)("div",{style:{marginLeft:"1rem"}},(0,r.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,r.kt)("p",null,"A description of a default change that will be applied with the change request to prevent invalid states."),(0,r.kt)("p",null,"Default changes are changes that are applied in addition to explicit user-specified changes when a change request is applied. Any default changes are applied in the background and are not a real part of the change request.")),(0,r.kt)(l.Z,{collapsible:!1,name:"action",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"addStrategy",description:"The kind of action this is."},mdxType:"SchemaItem"}),(0,r.kt)(l.Z,{collapsible:!1,name:"payload",required:!0,schemaName:"object",qualifierMessage:void 0,schema:{type:"object",description:"The necessary data to perform this change.","x-enforcer-exception-skip-codes":"WSCH006",example:{name:"flexibleRollout",title:"",disabled:!1,segments:[],parameters:{groupId:"my-feature",rollout:"100",stickiness:"default"},constraints:[{values:["ux"],inverted:!1,operator:"STR_CONTAINS",contextName:"userId",caseInsensitive:!1}]}},mdxType:"SchemaItem"})))),(0,r.kt)("li",null,(0,r.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]"))))),(0,r.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,r.kt)("details",{style:{},className:"openapi-markdown__details"},(0,r.kt)("summary",{style:{}},(0,r.kt)("span",{className:"openapi-schema__container"},(0,r.kt)("strong",{className:"openapi-schema__property"},"segments"),(0,r.kt)("span",{className:"openapi-schema__name"}," object[]"),(0,r.kt)("span",{className:"openapi-schema__divider"}),(0,r.kt)("span",{className:"openapi-schema__required"},"required"))),(0,r.kt)("div",{style:{marginLeft:"1rem"}},(0,r.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,r.kt)("p",null,"The list of segments and their changes that relate to this change request.")),(0,r.kt)("li",null,(0,r.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,r.kt)(l.Z,{collapsible:!1,name:"id",required:!0,schemaName:"number",qualifierMessage:void 0,schema:{type:"number",example:33,description:"The ID of this change."},mdxType:"SchemaItem"}),(0,r.kt)(l.Z,{collapsible:!1,name:"action",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"updateStrategy",description:"The kind of action that the change contains information about."},mdxType:"SchemaItem"}),(0,r.kt)(l.Z,{collapsible:!1,name:"conflict",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Strategy has been deleted",description:"A description of the conflict caused by this change. Only present if there are any conflicts."},mdxType:"SchemaItem"}),(0,r.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,r.kt)("details",{style:{},className:"openapi-markdown__details"},(0,r.kt)("summary",{style:{}},(0,r.kt)("span",{className:"openapi-schema__container"},(0,r.kt)("strong",{className:"openapi-schema__property"},"payload"),(0,r.kt)("span",{className:"openapi-schema__name"}," object"),(0,r.kt)("span",{className:"openapi-schema__divider"}),(0,r.kt)("span",{className:"openapi-schema__required"},"required"))),(0,r.kt)("div",{style:{marginLeft:"1rem"}},(0,r.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,r.kt)("p",null,"The data required to perform this action.")),(0,r.kt)("div",null,(0,r.kt)("span",{className:"badge badge--info"},"oneOf"),(0,r.kt)(d.Z,{mdxType:"SchemaTabs"},(0,r.kt)(h.Z,{label:"MOD1",value:"0-item-properties",mdxType:"TabItem"},(0,r.kt)("li",null,(0,r.kt)("div",null,(0,r.kt)("strong",null,"string")))),(0,r.kt)(h.Z,{label:"MOD2",value:"1-item-properties",mdxType:"TabItem"},(0,r.kt)("li",null,(0,r.kt)("div",null,(0,r.kt)("strong",null,"boolean")))),(0,r.kt)(h.Z,{label:"MOD4",value:"3-item-properties",mdxType:"TabItem"},(0,r.kt)("li",null,(0,r.kt)("div",null,(0,r.kt)("strong",null,"number")))),(0,r.kt)(h.Z,{label:"setStrategySortOrderSchema",value:"4-item-properties",mdxType:"TabItem"},(0,r.kt)("li",null,(0,r.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,r.kt)(l.Z,{collapsible:!1,name:"id",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"9c40958a-daac-400e-98fb-3bb438567008",description:"The ID of the strategy"},mdxType:"SchemaItem"}),(0,r.kt)(l.Z,{collapsible:!1,name:"sortOrder",required:!0,schemaName:"number",qualifierMessage:void 0,schema:{type:"number",example:1,description:"The new sort order of the strategy"},mdxType:"SchemaItem"}),(0,r.kt)("li",null,(0,r.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]")))))))),(0,r.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,r.kt)("details",{style:{},className:"openapi-markdown__details"},(0,r.kt)("summary",{style:{}},(0,r.kt)("span",{className:"openapi-schema__container"},(0,r.kt)("strong",{className:"openapi-schema__property"},"createdBy"),(0,r.kt)("span",{className:"openapi-schema__name"}," object"))),(0,r.kt)("div",{style:{marginLeft:"1rem"}},(0,r.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,r.kt)("p",null,"The user who created this change.")),(0,r.kt)(l.Z,{collapsible:!1,name:"username",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",nullable:!0,description:"The user's username."},mdxType:"SchemaItem"}),(0,r.kt)(l.Z,{collapsible:!1,name:"imageUrl",required:!1,schemaName:"uri",qualifierMessage:void 0,schema:{type:"string",nullable:!0,format:"uri",description:"The URL where the user's image can be found."},mdxType:"SchemaItem"})))),(0,r.kt)(l.Z,{collapsible:!1,name:"createdAt",required:!1,schemaName:"date-time",qualifierMessage:void 0,schema:{description:"When this change was suggested",type:"string",format:"date-time",example:"2023-07-31T13:22:03+02:00"},mdxType:"SchemaItem"}),(0,r.kt)("li",null,(0,r.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]"))))),(0,r.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,r.kt)("details",{style:{},className:"openapi-markdown__details"},(0,r.kt)("summary",{style:{}},(0,r.kt)("span",{className:"openapi-schema__container"},(0,r.kt)("strong",{className:"openapi-schema__property"},"approvals"),(0,r.kt)("span",{className:"openapi-schema__name"}," object[]"))),(0,r.kt)("div",{style:{marginLeft:"1rem"}},(0,r.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,r.kt)("p",null,"A list of approvals that this change request has received.")),(0,r.kt)("li",null,(0,r.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,r.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,r.kt)("details",{style:{},className:"openapi-markdown__details"},(0,r.kt)("summary",{style:{}},(0,r.kt)("span",{className:"openapi-schema__container"},(0,r.kt)("strong",{className:"openapi-schema__property"},"createdBy"),(0,r.kt)("span",{className:"openapi-schema__name"}," object"),(0,r.kt)("span",{className:"openapi-schema__divider"}),(0,r.kt)("span",{className:"openapi-schema__required"},"required"))),(0,r.kt)("div",{style:{marginLeft:"1rem"}},(0,r.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,r.kt)("p",null,"Information about the user who gave this approval.")),(0,r.kt)(l.Z,{collapsible:!1,name:"id",required:!1,schemaName:"number",qualifierMessage:void 0,schema:{type:"number",example:33,description:"The ID of the user who gave this approval."},mdxType:"SchemaItem"}),(0,r.kt)(l.Z,{collapsible:!1,name:"username",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"unleash-user",description:"The approving user's username."},mdxType:"SchemaItem"}),(0,r.kt)(l.Z,{collapsible:!1,name:"imageUrl",required:!1,schemaName:"uri",qualifierMessage:void 0,schema:{type:"string",format:"uri",description:"The URL where the user's image can be found."},mdxType:"SchemaItem"})))),(0,r.kt)(l.Z,{collapsible:!1,name:"createdAt",required:!0,schemaName:"date-time",qualifierMessage:void 0,schema:{type:"string",format:"date-time",example:"2022-12-12T12:13:24.218Z",description:"When the approval was given."},mdxType:"SchemaItem"}),(0,r.kt)("li",null,(0,r.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]"))))),(0,r.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,r.kt)("details",{style:{},className:"openapi-markdown__details"},(0,r.kt)("summary",{style:{}},(0,r.kt)("span",{className:"openapi-schema__container"},(0,r.kt)("strong",{className:"openapi-schema__property"},"comments"),(0,r.kt)("span",{className:"openapi-schema__name"}," object[]"))),(0,r.kt)("div",{style:{marginLeft:"1rem"}},(0,r.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,r.kt)("p",null,"All comments that have been made on this change request.")),(0,r.kt)("li",null,(0,r.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,r.kt)(l.Z,{collapsible:!1,name:"id",required:!1,schemaName:"number",qualifierMessage:void 0,schema:{type:"number",example:33,description:"The comment's ID. Unique per change request."},mdxType:"SchemaItem"}),(0,r.kt)(l.Z,{collapsible:!1,name:"text",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"This is a comment",description:"The content of the comment."},mdxType:"SchemaItem"}),(0,r.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,r.kt)("details",{style:{},className:"openapi-markdown__details"},(0,r.kt)("summary",{style:{}},(0,r.kt)("span",{className:"openapi-schema__container"},(0,r.kt)("strong",{className:"openapi-schema__property"},"createdBy"),(0,r.kt)("span",{className:"openapi-schema__name"}," object"),(0,r.kt)("span",{className:"openapi-schema__divider"}),(0,r.kt)("span",{className:"openapi-schema__required"},"required"))),(0,r.kt)("div",{style:{marginLeft:"1rem"}},(0,r.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,r.kt)("p",null,"Information about the user who posted the comment")),(0,r.kt)(l.Z,{collapsible:!1,name:"username",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",nullable:!0,example:"unleash-user",description:"The user's username."},mdxType:"SchemaItem"}),(0,r.kt)(l.Z,{collapsible:!1,name:"imageUrl",required:!1,schemaName:"uri",qualifierMessage:void 0,schema:{type:"string",nullable:!0,format:"uri",description:"The URL where the user's image can be found."},mdxType:"SchemaItem"})))),(0,r.kt)(l.Z,{collapsible:!1,name:"createdAt",required:!0,schemaName:"date-time",qualifierMessage:void 0,schema:{type:"string",format:"date-time",example:"2022-12-12T12:13:24.218Z",description:"When the comment was made."},mdxType:"SchemaItem"}),(0,r.kt)("li",null,(0,r.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]"))))),(0,r.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,r.kt)("details",{style:{},className:"openapi-markdown__details"},(0,r.kt)("summary",{style:{}},(0,r.kt)("span",{className:"openapi-schema__container"},(0,r.kt)("strong",{className:"openapi-schema__property"},"createdBy"),(0,r.kt)("span",{className:"openapi-schema__name"}," object"),(0,r.kt)("span",{className:"openapi-schema__divider"}),(0,r.kt)("span",{className:"openapi-schema__required"},"required"))),(0,r.kt)("div",{style:{marginLeft:"1rem"}},(0,r.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,r.kt)("p",null,"The user who created this change request.")),(0,r.kt)(l.Z,{collapsible:!1,name:"username",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",nullable:!0,example:"Hunter"},mdxType:"SchemaItem"}),(0,r.kt)(l.Z,{collapsible:!1,name:"imageUrl",required:!1,schemaName:"uri",qualifierMessage:void 0,schema:{type:"string",format:"uri",nullable:!0,description:"The URL of the user's profile image."},mdxType:"SchemaItem"})))),(0,r.kt)(l.Z,{collapsible:!1,name:"createdAt",required:!0,schemaName:"date-time",qualifierMessage:void 0,schema:{description:"When this change request was created.",type:"string",format:"date-time",example:"2023-07-31T13:33:02Z"},mdxType:"SchemaItem"}),(0,r.kt)("li",null,(0,r.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]"))))),(0,r.kt)(h.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,r.kt)(c.Z,{responseExample:'[\n  {\n    "id": 3,\n    "title": "Increasing gradual rollout",\n    "environment": "development",\n    "state": "Draft",\n    "minApprovals": 2,\n    "project": "unleash-project",\n    "features": [\n      {\n        "name": "my-feature",\n        "conflict": "Feature has been archived",\n        "changes": [\n          {\n            "id": 33,\n            "action": "updateStrategy",\n            "conflict": "Strategy has been deleted",\n            "payload": "string",\n            "createdBy": {\n              "username": "string",\n              "imageUrl": "string"\n            },\n            "createdAt": "2023-07-31T13:22:03+02:00"\n          }\n        ],\n        "defaultChange": {\n          "action": "addStrategy",\n          "payload": {\n            "name": "flexibleRollout",\n            "title": "",\n            "disabled": false,\n            "segments": [],\n            "parameters": {\n              "groupId": "my-feature",\n              "rollout": "100",\n              "stickiness": "default"\n            },\n            "constraints": [\n              {\n                "values": [\n                  "ux"\n                ],\n                "inverted": false,\n                "operator": "STR_CONTAINS",\n                "contextName": "userId",\n                "caseInsensitive": false\n              }\n            ]\n          }\n        }\n      }\n    ],\n    "segments": [\n      {\n        "id": 33,\n        "action": "updateStrategy",\n        "conflict": "Strategy has been deleted",\n        "payload": "string",\n        "createdBy": {\n          "username": "string",\n          "imageUrl": "string"\n        },\n        "createdAt": "2023-07-31T13:22:03+02:00"\n      }\n    ],\n    "approvals": [\n      {\n        "createdBy": {\n          "id": 33,\n          "username": "unleash-user",\n          "imageUrl": "string"\n        },\n        "createdAt": "2022-12-12T12:13:24.218Z"\n      }\n    ],\n    "comments": [\n      {\n        "id": 33,\n        "text": "This is a comment",\n        "createdBy": {\n          "username": "unleash-user",\n          "imageUrl": "string"\n        },\n        "createdAt": "2022-12-12T12:13:24.218Z"\n      }\n    ],\n    "createdBy": {\n      "username": "Hunter",\n      "imageUrl": "string"\n    },\n    "createdAt": "2023-07-31T13:33:02Z"\n  }\n]',language:"json",mdxType:"ResponseSamples"})))))))))))}v.isMDXComponent=!0}}]);