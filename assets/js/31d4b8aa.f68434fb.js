"use strict";(self.webpackChunkwebsitev_2=self.webpackChunkwebsitev_2||[]).push([[2918],{74124:(e,t,a)=>{a.d(t,{Z:()=>m});var n=a(87462),l=a(67294),r=a(86010),o=a(5730),s=a(20636),i=a(76602),u=a(63735);const p="tabList__CuJ",d="tabItem_LNqP";function h(e){var t;const{lazy:a,block:o,defaultValue:h,values:m,groupId:c,className:k}=e,v=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=m??v.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),f=(0,s.l)(g,((e,t)=>e.value===t.value));if(f.length>0)throw new Error(`Docusaurus error: Duplicate values "${f.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const N=null===h?h:h??(null==(t=v.find((e=>e.props.default)))?void 0:t.props.value)??v[0].props.value;if(null!==N&&!g.some((e=>e.value===N)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${N}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:b}=(0,i.U)(),[w,S]=(0,l.useState)(N),T=[],{blockElementScrollPositionUntilNextRender:_}=(0,u.o5)();if(null!=c){const e=y[c];null!=e&&e!==w&&g.some((t=>t.value===e))&&S(e)}const A=e=>{const t=e.currentTarget,a=T.indexOf(t),n=g[a].value;n!==w&&(_(t),S(n),null!=c&&b(c,String(n)))},C=e=>{var t;let a=null;switch(e.key){case"Enter":A(e);break;case"ArrowRight":{const t=T.indexOf(e.currentTarget)+1;a=T[t]??T[0];break}case"ArrowLeft":{const t=T.indexOf(e.currentTarget)-1;a=T[t]??T[T.length-1];break}}null==(t=a)||t.focus()};return l.createElement("div",{className:(0,r.Z)("tabs-container",p)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":o},k)},g.map((e=>{let{value:t,label:a,attributes:o}=e;return l.createElement("li",(0,n.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>T.push(e),onKeyDown:C,onClick:A},o,{className:(0,r.Z)("tabs__item",d,null==o?void 0:o.className,{"tabs__item--active":w===t})}),a??t)}))),a?(0,l.cloneElement)(v.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},v.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function m(e){const t=(0,o.Z)();return l.createElement(h,(0,n.Z)({key:String(t)},e))}},45920:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>u,toc:()=>d});var n=a(87462),l=(a(67294),a(3905)),r=a(74124),o=a(11666);const s={id:"getting_started",title:"Getting Started"},i=void 0,u={unversionedId:"deploy/getting_started",id:"deploy/getting_started",title:"Getting Started",description:"This section only applies if you plan to self-host Unleash. If you are looking for our hosted solution you should head over to www.getunleash.io",source:"@site/docs/deploy/getting-started.md",sourceDirName:"deploy",slug:"/deploy/getting_started",permalink:"/deploy/getting_started",draft:!1,editUrl:"https://github.com/Unleash/unleash/edit/main/website/docs/deploy/getting-started.md",tags:[],version:"current",frontMatter:{id:"getting_started",title:"Getting Started"},sidebar:"documentation",previous:{title:"Deploy and manage Unleash",permalink:"/deploy"},next:{title:"Configuring Unleash",permalink:"/deploy/configuring_unleash"}},p={},d=[{value:"Requirements",id:"requirements",level:2},{value:"Start Unleash server",id:"start-unleash-server",level:2},{value:"Option 1 - use Docker",id:"option-one---use-docker",level:3},{value:"Option 2 - use Docker-compose",id:"option-two---use-docker-compose",level:3},{value:"Option 3 - from Node.js",id:"option-three---from-nodejs",level:3},{value:"Create an api token for your client",id:"create-an-api-token-for-your-client",level:2},{value:"Test your server and create a sample API call",id:"test-your-server-and-create-a-sample-api-call",level:2},{value:"Version check",id:"version-check",level:2}],h={toc:d};function m(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"This section only applies if you plan to self-host Unleash. If you are looking for our hosted solution you should head over to ",(0,l.kt)("a",{parentName:"p",href:"https://www.getunleash.io/plans"},"www.getunleash.io"))),(0,l.kt)("h2",{id:"requirements"},"Requirements"),(0,l.kt)("p",null,"You will need:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://nodejs.org/en/download/"},"Node.js")," (version 14 or later)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://www.postgresql.org/download/"},"PostgreSQL")," (version 10 or later)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"./database-setup"},"Create an unleash user and database"),".")),(0,l.kt)("h2",{id:"start-unleash-server"},"Start Unleash server"),(0,l.kt)("p",null,"Whichever option you choose to start Unleash, you must specify a database URI (it can be set in the environment variable DATABASE_URL). If your database server is not set up to support SSL you'll also need to set the environment variable ",(0,l.kt)("inlineCode",{parentName:"p"},"DATABASE_SSL")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"false")),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Once the server has started, you will see the message:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"Unleash started on http://localhost:4242\n")),(0,l.kt)("p",null,"To run multiple replicas of Unleash simply point all instances to the same database."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Unleash v4:")," The first time Unleash starts it will create a default user which you can use to sign-in to you Unleash instance and add more users with:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"username: ",(0,l.kt)("inlineCode",{parentName:"li"},"admin")),(0,l.kt)("li",{parentName:"ul"},"password: ",(0,l.kt)("inlineCode",{parentName:"li"},"unleash4all"))),(0,l.kt)("h3",{id:"option-one---use-docker"},"Option 1 - use Docker"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Useful links:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://hub.docker.com/r/unleashorg/unleash-server/"},"Docker image on dockerhub")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://artifacthub.io/packages/helm/unleash/unleash"},"Unleash Helm Chart on artifacthub"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Steps:")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Create a network by running ",(0,l.kt)("inlineCode",{parentName:"li"},"docker network create unleash")),(0,l.kt)("li",{parentName:"ol"},"Start a postgres database:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"docker run -e POSTGRES_PASSWORD=some_password \\\n  -e POSTGRES_USER=unleash_user -e POSTGRES_DB=unleash \\\n  --network unleash --name postgres postgres\n")),(0,l.kt)("ol",{start:3},(0,l.kt)("li",{parentName:"ol"},"Start Unleash via docker:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"docker run -p 4242:4242 \\\n  -e DATABASE_HOST=postgres -e DATABASE_NAME=unleash \\\n  -e DATABASE_USERNAME=unleash_user -e DATABASE_PASSWORD=some_password \\\n  -e DATABASE_SSL=false \\\n  --network unleash --pull=always unleashorg/unleash-server\n")),(0,l.kt)("h3",{id:"option-two---use-docker-compose"},"Option 2 - use Docker-compose"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Steps:")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Clone the ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Unleash/unleash-docker"},"unleash-docker")," repository."),(0,l.kt)("li",{parentName:"ol"},"Run ",(0,l.kt)("inlineCode",{parentName:"li"},"docker-compose build")," in repository root folder."),(0,l.kt)("li",{parentName:"ol"},"Run ",(0,l.kt)("inlineCode",{parentName:"li"},"docker-compose up")," in repository root folder.")),(0,l.kt)("h3",{id:"option-three---from-nodejs"},"Option 3 - from Node.js"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Create a new folder/directory on your development computer.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"From a terminal/bash shell, install the dependencies:"),(0,l.kt)(r.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"npm",mdxType:"TabItem"},(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"npm init\nnpm install unleash-server --save\n"))),(0,l.kt)(o.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"yarn init\nyarn add unleash-server\n"))))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Create a file called ",(0,l.kt)("em",{parentName:"p"},"server.js"),", paste the following into it and save."),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const unleash = require('unleash-server');\n\nunleash\n  .start({\n    db: {\n      ssl: false,\n      host: 'localhost',\n      port: 5432,\n      database: 'unleash',\n      user: 'unleash_user',\n      password: 'password',\n    },\n    server: {\n      port: 4242,\n    },\n  })\n  .then((unleash) => {\n    console.log(\n      `Unleash started on http://localhost:${unleash.app.get('port')}`,\n    );\n  });\n"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Run ",(0,l.kt)("em",{parentName:"p"},"server.js"),":"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"node server.js\n")))),(0,l.kt)("h2",{id:"create-an-api-token-for-your-client"},"Create an api token for your client"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../user_guide/api-token"},"API Token creation"))),(0,l.kt)("h2",{id:"test-your-server-and-create-a-sample-api-call"},"Test your server and create a sample API call"),(0,l.kt)("p",null,"Once the Unleash server has started, go to ",(0,l.kt)("a",{parentName:"p",href:"http://localhost:4242"},"localhost:4242")," in your browser. If you see an empty list of feature toggles, try creating one with ",(0,l.kt)("a",{parentName:"p",href:"https://curl.se/"},"curl")," from a terminal/bash shell:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'curl --location -H "Authorization: <apitoken from previous step>" \\\n  --request POST \'http://localhost:4242/api/admin/features\' \\\n  --header \'Content-Type: application/json\' --data-raw \'{\\\n  "name": "Feature.A",\\\n  "description": "Dolor sit amet.",\\\n  "type": "release",\\\n  "enabled": false,\\\n  "stale": false,\\\n  "strategies": [\\\n    {\\\n      "name": "default",\\\n      "parameters": {}\\\n    }\\\n  ]\\\n}\'\n')),(0,l.kt)("h2",{id:"version-check"},"Version check"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Unleash checks that it uses the latest version by making a call to ",(0,l.kt)("a",{parentName:"li",href:"https://version.unleash.run"},"https://version.unleash.run"),".",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"This is a cloud function storing instance id to our database for statistics."))),(0,l.kt)("li",{parentName:"ul"},"This request includes a unique instance id for your server."),(0,l.kt)("li",{parentName:"ul"},"If you do not wish to check for upgrades define the environment variable ",(0,l.kt)("inlineCode",{parentName:"li"},"CHECK_VERSION")," to anything else other than ",(0,l.kt)("inlineCode",{parentName:"li"},"true")," before starting, and Unleash won't make any calls",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"export CHECK_VERSION=false"))))))}m.isMDXComponent=!0}}]);