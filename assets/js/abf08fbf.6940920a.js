"use strict";(self.webpackChunkwebsitev_2=self.webpackChunkwebsitev_2||[]).push([[4919],{47604:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var n=a(87462),r=(a(67294),a(3905));const s={title:"/api/admin/strategies"},i=void 0,o={unversionedId:"reference/api/legacy/unleash/admin/strategies",id:"reference/api/legacy/unleash/admin/strategies",title:"/api/admin/strategies",description:"In order to access the admin API endpoints you need to identify yourself. Unless you're using the none authentication method, you'll need to create an ADMIN token and add an Authorization header using the token.",source:"@site/docs/reference/api/legacy/unleash/admin/strategies.md",sourceDirName:"reference/api/legacy/unleash/admin",slug:"/reference/api/legacy/unleash/admin/strategies",permalink:"/reference/api/legacy/unleash/admin/strategies",draft:!1,editUrl:"https://github.com/Unleash/unleash/edit/main/website/docs/reference/api/legacy/unleash/admin/strategies.md",tags:[],version:"current",frontMatter:{title:"/api/admin/strategies"},sidebar:"documentation",previous:{title:"/api/admin/state",permalink:"/reference/api/legacy/unleash/admin/state"},next:{title:"/api/admin/tags",permalink:"/reference/api/legacy/unleash/admin/tags"}},d={},l=[{value:"Fetch Strategies",id:"fetch-strategies",level:3},{value:"Create strategy",id:"create-strategy",level:3},{value:"Update strategy",id:"update-strategy",level:3},{value:"Deprecate strategy",id:"deprecate-strategy",level:3},{value:"Errors",id:"errors",level:4},{value:"Reactivate strategy",id:"reactivate-strategy",level:3},{value:"Errors",id:"errors-1",level:4}],p={toc:l};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"In order to access the admin API endpoints you need to identify yourself. Unless you're using the ",(0,r.kt)("inlineCode",{parentName:"p"},"none")," authentication method, you'll need to ",(0,r.kt)("a",{parentName:"p",href:"/how-to/how-to-create-api-tokens"},"create an ADMIN token")," and add an Authorization header using the token.")),(0,r.kt)("h3",{id:"fetch-strategies"},"Fetch Strategies"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"GET: http://unleash.host.com/api/admin/strategies")),(0,r.kt)("p",null,"Used to fetch all defined strategies and their defined parameters."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Response")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "version": 1,\n  "strategies": [\n    {\n      "name": "default",\n      "description": "Default on/off strategy.",\n      "parameters": []\n    },\n    {\n      "name": "userWithId",\n      "description": "Active for userId specified in the comma seperated \'userIds\' parameter.",\n      "parameters": [\n        {\n          "name": "userIds",\n          "type": "list",\n          "description": "List of unique userIds the feature should be active for.",\n          "required": true\n        }\n      ]\n    },\n    {\n      "name": "gradualRollout",\n      "description": "Gradual rollout to logged in users",\n      "parameters": [\n        {\n          "name": "percentage",\n          "type": "percentage",\n          "description": "How many percent should the new feature be active for.",\n          "required": false\n        },\n        {\n          "name": "group",\n          "type": "string",\n          "description": "Group key to use when hasing the userId. Makes sure that the same user get different value for different groups",\n          "required": false\n        }\n      ]\n    }\n  ]\n}\n')),(0,r.kt)("h3",{id:"create-strategy"},"Create strategy"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"POST: http://unleash.host.com/api/admin/strategies")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Body")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "gradualRollout",\n    "description": "Gradual rollout to logged in users",\n    "parameters": [\n        {\n            "name": "percentage",\n            "type": "percentage",\n            "description": "How many percent should the new feature be active for.",\n            "required": false\n        },\n        {\n            "name": "group",\n            "type": "string",\n            "description": "Group key to use when hasing the userId. Makes sure that the same user get different value for different groups",\n            "required": false\n        }\n    ]\n},\n')),(0,r.kt)("p",null,"Used to create a new Strategy. Name is required and must be unique. It is also required to have a parameters array, but it can be empty."),(0,r.kt)("h3",{id:"update-strategy"},"Update strategy"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"PUT: http://unleash.host.com/api/admin/strategies/:name")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Body")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "gradualRollout",\n    "description": "Gradual rollout to logged in users with updated desc",\n    "parameters": [\n        {\n            "name": "percentage",\n            "type": "percentage",\n            "description": "How many percent should the new feature be active for.",\n            "required": false\n        },\n        {\n            "name": "group",\n            "type": "string",\n            "description": "Group key to use when hasing the userId. Makes sure that the same user get different value for different groups",\n            "required": false\n        }\n    ]\n},\n')),(0,r.kt)("p",null,"Used to update a Strategy definition. Name can't be changed. ",(0,r.kt)("strong",{parentName:"p"},"PS! I can be dangerous to change an implemented strategy as the implementation also might need to be changed")),(0,r.kt)("h3",{id:"deprecate-strategy"},"Deprecate strategy"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"POST: https://unleash.host.com/api/admin/strategies/:name/deprecate")),(0,r.kt)("p",null,"Used to deprecate a strategy definition. This will set the deprecated flag to true. If the strategy is already deprecated, this will be a noop."),(0,r.kt)("h4",{id:"errors"},"Errors"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"404 NOT FOUND")," - if ",(0,r.kt)("inlineCode",{parentName:"p"},":name")," does not exist"),(0,r.kt)("h3",{id:"reactivate-strategy"},"Reactivate strategy"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"POST: https://unleash.host.com/api/admin/strategies/:name/reactivate")),(0,r.kt)("p",null,"Used to reactivate a deprecated strategy definition. This will set the deprecated flag back to false. If the strategy is not deprecated this is a noop and will still return 200."),(0,r.kt)("h4",{id:"errors-1"},"Errors"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"404 NOT FOUND")," - if ",(0,r.kt)("inlineCode",{parentName:"p"},":name")," does not exist"))}u.isMDXComponent=!0}}]);