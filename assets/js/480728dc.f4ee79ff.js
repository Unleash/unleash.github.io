"use strict";(self.webpackChunkwebsitev_2=self.webpackChunkwebsitev_2||[]).push([[6747],{97917:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var n=a(87462),i=(a(67294),a(3905));const l={id:"internal",title:"/internal-backstage/prometheus"},r="Internal Backstage API",o={unversionedId:"api/internal/internal",id:"api/internal/internal",title:"/internal-backstage/prometheus",description:"GET http://unleash.host.com/internal-backstage/prometheus",source:"@site/docs/api/internal/internal-backstage-api.md",sourceDirName:"api/internal",slug:"/api/internal/internal",permalink:"/api/internal/internal",draft:!1,editUrl:"https://github.com/Unleash/unleash/edit/main/website/docs/api/internal/internal-backstage-api.md",tags:[],version:"current",frontMatter:{id:"internal",title:"/internal-backstage/prometheus"},sidebar:"documentation",previous:{title:"/api/client/register",permalink:"/api/client/register"},next:{title:"/health",permalink:"/api/internal/health"}},s={},p=[{value:"Annotations",id:"annotations",level:2}],u={toc:p};function c(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"internal-backstage-api"},"Internal Backstage API"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"GET http://unleash.host.com/internal-backstage/prometheus")),(0,i.kt)("p",null,"Unleash uses Prometheus internally to collect metrics. By default, the metrics are available at ",(0,i.kt)("inlineCode",{parentName:"p"},"/internal-backstage/prometheus"),". You can disable this endpoint by setting the ",(0,i.kt)("inlineCode",{parentName:"p"},"serverMetrics")," option to ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,i.kt)("p",null,"Note that it's not recommended to expose Prometheus metrics to the public as of the ",(0,i.kt)("a",{parentName:"p",href:"https://prometheus.io/assets/downloads/2018-06-11--cure53_security_audit.pdf"},"Prometheus pentest-report")," issue PRM-01-002. Thus, if you want to keep metrics enabled, you should block all external access to ",(0,i.kt)("inlineCode",{parentName:"p"},"/internal-backstage/*")," on the network layer to keep your instance secure. "),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://prometheus.io/"},"Read more about Prometheus")),(0,i.kt)("h2",{id:"annotations"},"Annotations"),(0,i.kt)("p",null,"Unleash will automatically count all updates for all toggles under the metric name ",(0,i.kt)("inlineCode",{parentName:"p"},"feature_toggle_update_total"),", and the toggle name is will be set as a label value. This information can be used to create annotations in grafana for everytime a feature toggle is changed."),(0,i.kt)("p",null,"You can use this query in grafana to achieve this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'delta(feature_toggle_update_total{toggle="Demo"}[1m]) != bool 0\n')),(0,i.kt)("p",null,"Another useful counter is the ",(0,i.kt)("inlineCode",{parentName:"p"},"feature_toggle_usage_total")," which will give you the numbers for how many times a feature toggle has been evaluated to ",(0,i.kt)("inlineCode",{parentName:"p"},"active")," or not."))}c.isMDXComponent=!0}}]);