"use strict";(self.webpackChunkwebsitev_2=self.webpackChunkwebsitev_2||[]).push([[1465],{21748:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var r=n(87462),i=(n(67294),n(3905));const s={title:"ADR: preferred styling method"},o=void 0,a={unversionedId:"contributing/ADRs/front-end/preferred-styling-method",id:"contributing/ADRs/front-end/preferred-styling-method",title:"ADR: preferred styling method",description:"This document supersedes ADR: preferred styles import placement",source:"@site/docs/contributing/ADRs/front-end/preferred-styling-method.md",sourceDirName:"contributing/ADRs/front-end",slug:"/contributing/ADRs/front-end/preferred-styling-method",permalink:"/contributing/ADRs/front-end/preferred-styling-method",draft:!1,editUrl:"https://github.com/Unleash/unleash/edit/main/website/docs/contributing/ADRs/front-end/preferred-styling-method.md",tags:[],version:"current",frontMatter:{title:"ADR: preferred styling method"},sidebar:"documentation",previous:{title:"ADR: preferred styles import placement",permalink:"/contributing/ADRs/front-end/preferred-styles-import-placement"},next:{title:"ADR: Domain language",permalink:"/contributing/ADRs/overarching/domain-language"}},l={},d=[{value:"Background",id:"background",level:2},{value:"Decision",id:"decision",level:2},{value:"Consequences: code sharing",id:"consequences-code-sharing",level:3}],c={toc:d};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This document supersedes ",(0,i.kt)("a",{parentName:"p",href:"/contributing/ADRs/front-end/preferred-styles-import-placement"},"ADR: preferred styles import placement")),(0,i.kt)("h2",{id:"background"},"Background"),(0,i.kt)("p",null,"In the codebase, we need to have a uniform way of performing style updates."),(0,i.kt)("h2",{id:"decision"},"Decision"),(0,i.kt)("p",null,"We have decided to move away from using makeStyles as it's currently deprecated from @material/ui, and kept alive with an\nexternal interop package to maintain compatability with the latest version. The preferred path forward is to use styled components which is\nsupported natively in @material/ui and sparingly use the sx prop available on all mui components."),(0,i.kt)("h3",{id:"consequences-code-sharing"},"Consequences: code sharing"),(0,i.kt)("p",null,"With makeStyles it was common to reuse CSS fragments via library utilities.\nIn the styled components approach we use themeable functions and  object literals "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { Theme } from '@mui/material';\n\nexport const focusable = (theme: Theme) => ({\n    color: theme.palette.primary.main,\n});\n\nexport const flexRow = {\n    display: 'flex',\n    alignItems: 'center',\n};\n")),(0,i.kt)("p",null,"Usage:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const StyledLink = styled(Link)(({ theme }) => ({\n    ...focusable(theme),\n}));\n\n<IconButton sx={focusable}/>\n")))}p.isMDXComponent=!0}}]);