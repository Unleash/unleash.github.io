"use strict";(self.webpackChunkwebsitev_2=self.webpackChunkwebsitev_2||[]).push([[3339],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),u=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=u(n),f=a,m=d["".concat(i,".").concat(f)]||d[f]||p[f]||o;return n?r.createElement(m,s(s({ref:t},l),{},{components:n})):r.createElement(m,s({ref:t},l))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:a,s[1]=c;for(var u=2;u<o;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1799:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return i},metadata:function(){return u},toc:function(){return l},default:function(){return d}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),s=["components"],c={id:"feature_updates_to_slack",title:"Feature Updates To slack"},i=void 0,u={unversionedId:"guides/feature_updates_to_slack",id:"guides/feature_updates_to_slack",isDocsHomePage:!1,title:"Feature Updates To slack",description:"Create a custom Slack WebHook url:",source:"@site/docs/guides/feature-updates-to-slack.md",sourceDirName:"guides",slug:"/guides/feature_updates_to_slack",permalink:"/guides/feature_updates_to_slack",editUrl:"https://github.com/Unleash/unleash/edit/master/websitev2/docs/guides/feature-updates-to-slack.md",version:"current",frontMatter:{id:"feature_updates_to_slack",title:"Feature Updates To slack"}},l=[{value:"Create a custom Slack WebHook url:",id:"create-a-custom-slack-webhook-url",children:[]},{value:"Send data to Slack using an event hook function",id:"send-data-to-slack-using-an-event-hook-function",children:[]}],p={toc:l};function d(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"create-a-custom-slack-webhook-url"},"Create a custom Slack WebHook url:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Go to ",(0,o.kt)("a",{parentName:"li",href:"https://slack.com/apps/manage/custom-integrations"},"https://slack.com/apps/manage/custom-integrations")),(0,o.kt)("li",{parentName:"ol"},"Click Incoming WebHooks"),(0,o.kt)("li",{parentName:"ol"},"Click \u201cAdd Configuration\u201d"),(0,o.kt)("li",{parentName:"ol"},"This is Slack's help page on how to do this: ",(0,o.kt)("a",{parentName:"li",href:"https://api.slack.com/custom-integrations/incoming-webhooks"},"https://api.slack.com/custom-integrations/incoming-webhooks"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Choose a channel, follow the wizard, get the custom URL.")))),(0,o.kt)("h2",{id:"send-data-to-slack-using-an-event-hook-function"},"Send data to Slack using an event hook function"),(0,o.kt)("p",null,"Using the ",(0,o.kt)("inlineCode",{parentName:"p"},"eventHook")," option, create a function that will send the data you'd like into Slack when mutation events happen."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const unleash = require('unleash-server');\nconst axios = require('axios');\n\nfunction onEventHook(event, eventData) {\n  const { createdBy: user, data } = eventData;\n  let text = '';\n\n  const unleashUrl = 'http://your.unleash.host.com';\n  const feature = `<${unleashUrl}/#/features/strategies/${data.name}|${data.name}>`;\n\n  switch (event) {\n    case 'feature-created':\n    case 'feature-updated': {\n      const verb =\n        event === 'feature-created' ? 'created a new' : 'updated the';\n      text = `${user} ${verb} feature ${feature}\\ndescription: ${\n        data.description\n      }\\nenabled: ${data.enabled}\\nstrategies: \\`${JSON.stringify(\n        data.strategies,\n      )}\\``;\n      break;\n    }\n    case 'feature-archived':\n    case 'feature-revived': {\n      const verb = event === 'feature-archived' ? 'archived' : 'revived';\n      text = `${user} ${verb} the feature ${feature}`;\n      break;\n    }\n    default: {\n      console.error(`Unknown event ${event}`);\n      return;\n    }\n  }\n\n  axios\n    .post(\n      'https://hooks.slack.com/services/THIS_IS_WHERE_THE_CUSTOM_URL_GOES',\n      {\n        username: 'Unleash',\n        icon_emoji: ':unleash:', // if you added a custom emoji, otherwise you can remove this field.\n        text: text,\n      },\n    )\n    .then(res => {\n      console.log(`Slack post statusCode: ${res.status}. Text: ${text}`);\n    })\n    .catch(error => {\n      console.error(error);\n    });\n}\n\nconst options = {\n  eventHook: onEventHook,\n};\n\nunleash.start(options).then(server => {\n  console.log(`Unleash started on http://localhost:${server.app.get('port')}`);\n});\n")))}d.isMDXComponent=!0}}]);