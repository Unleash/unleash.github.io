"use strict";(self.webpackChunkwebsitev_2=self.webpackChunkwebsitev_2||[]).push([[2336],{28638:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const s={title:"Next.js SDK",slug:"/reference/sdks/next-js"},o=void 0,i={unversionedId:"generated/sdks/client-side/next-js",id:"generated/sdks/client-side/next-js",title:"Next.js SDK",description:"This document was generated from the README in the Next.js SDK's GitHub repository.",source:"@site/docs/generated/sdks/client-side/next-js.md",sourceDirName:"generated/sdks/client-side",slug:"/reference/sdks/next-js",permalink:"/reference/sdks/next-js",draft:!1,editUrl:"https://github.com/Unleash/unleash/edit/main/website/docs/generated/sdks/client-side/next-js.md",tags:[],version:"current",frontMatter:{title:"Next.js SDK",slug:"/reference/sdks/next-js"},sidebar:"documentation",previous:{title:"JavaScript browser SDK",permalink:"/reference/sdks/javascript-browser"},next:{title:"React SDK",permalink:"/reference/sdks/react"}},l={},p=[{value:"Setup",id:"setup",level:2},{value:"Installation",id:"installation",level:3},{value:"Environment variables",id:"environment-variables",level:3},{value:"A). Client-side only - simple use case and for development purposes (CSR)",id:"a-client-side-only---simple-use-case-and-for-development-purposes-csr",level:2},{value:"B). Static Site Generation, optimized performance (SSG)",id:"b-static-site-generation-optimized-performance-ssg",level:2},{value:"C). Server Side Rendering (SSR)",id:"c-server-side-rendering-ssr",level:2},{value:"D). Bootstrapping / rehydration",id:"d-bootstrapping--rehydration",level:2},{value:"Experimental features support",id:"experimental-features-support",level:2},{value:"Known limitation",id:"known-limitation",level:2}],d={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{title:"Generated content",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"This document was generated from the README in the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Unleash/unleash-client-nextjs"},"Next.js SDK's GitHub repository"),".")),(0,r.kt)("admonition",{title:"Connecting to Unleash",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"To connect to Unleash from a client-side context, you'll need to use the ",(0,r.kt)("a",{parentName:"p",href:"/reference/front-end-api"},"Unleash front-end API")," (",(0,r.kt)("a",{parentName:"p",href:"/how-to/how-to-create-api-tokens"},"how do I create an API token?"),") or the ",(0,r.kt)("a",{parentName:"p",href:"/reference/unleash-proxy"},"Unleash proxy")," (",(0,r.kt)("a",{parentName:"p",href:"/reference/api-tokens-and-client-keys#proxy-client-keys"},"how do I create client keys?"),").")),(0,r.kt)("blockquote",null,(0,r.kt)("h2",{parentName:"blockquote",id:"\ufe0f-early-version"},"\ud83c\udfd7\ufe0f Early version"),(0,r.kt)("p",{parentName:"blockquote"},"We need your feedback. Share your comments in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Unleash/unleash/discussions"},"\ud83d\udde3\ufe0f GitHub Discussions")," or on Unleash community ",(0,r.kt)("a",{parentName:"p",href:"https://unleash-community.slack.com/"},"\ud83d\udcac Slack")," server.")),(0,r.kt)("h1",{id:"unleash-nextjs-sdk"},"Unleash Next.js SDK"),(0,r.kt)("p",null,"This package allows easy integration of ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/unleash/unleash"},"Unleash")," feature flags in a ",(0,r.kt)("a",{parentName:"p",href:"https://nextjs.org/"},"Next.js")," application."),(0,r.kt)("h2",{id:"setup"},"Setup"),(0,r.kt)("h3",{id:"installation"},"Installation"),(0,r.kt)("p",null,"To install, simply run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"npm install @unleash/nextjs\n# or\nyarn add @unleash/nextjs\n# or\npnpm add @unleash/nextjs\n")),(0,r.kt)("h3",{id:"environment-variables"},"Environment variables"),(0,r.kt)("p",null,"This package will attempt to load configuration from\n",(0,r.kt)("a",{parentName:"p",href:"https://nextjs.org/docs/basic-features/environment-variables"},"Next.js Environment variables"),"."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Prefixable"),(0,r.kt)("th",{parentName:"tr",align:null},"Variable"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Used in"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"NEXT_PUBLIC_")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"UNLEASH_BASE_URL")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"http://localhost:4242/api")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"FlagProvider"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"getFrontendFlags"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"No")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"UNLEASH_API_TOKEN")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"default:development.unleash-insecure-api-token")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"getDefinitions"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"NEXT_PUBLIC_")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"UNLEASH_FRONTEND_API_TOKEN")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"default:development.unleash-insecure-frontend-api-token")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"FlagProvider"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"getFrontendFlags"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"NEXT_PUBLIC_")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"UNLEASH_APP_NAME")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nextjs")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"FlagProvider"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"getFrontendFlags"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"getDefinitions"))))),(0,r.kt)("p",null,"If you plan to use configuration in the browser, add ",(0,r.kt)("inlineCode",{parentName:"p"},"NEXT_PUBLIC_")," prefix.\nIf both are defined and available, private variable takes priority.\nYou can use both to have different values on client-side and server-side."),(0,r.kt)("br",null),(0,r.kt)("h1",{id:"usage"},"Usage"),(0,r.kt)("h2",{id:"a-client-side-only---simple-use-case-and-for-development-purposes-csr"},"A). Client-side only - simple use case and for development purposes (CSR)"),(0,r.kt)("p",null,"Fastest way to get started is to connect frontend directly to Unleash.\nYou can find out more about direct ",(0,r.kt)("a",{parentName:"p",href:"https://docs.getunleash.io/reference/front-end-api"},"Front-end API access")," in our documentation,\nincluding a guide on how to ",(0,r.kt)("a",{parentName:"p",href:"https://docs.getunleash.io/how-to/how-to-create-api-tokens"},"setup a client-side SDK key"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import type { AppProps } from "next/app";\nimport { FlagProvider } from "@unleash/nextjs";\n\nexport default function App({ Component, pageProps }: AppProps) {\n  return (\n    <FlagProvider\n      // config prop is optional if environment variables are set\n      config={{\n        url: "http://localhost:4242/api", // this will override NEXT_PUBLIC_UNLEASH_BASE_URL\n        clientKey: "<Frontend_API_token>", // NEXT_PUBLIC_UNLEASH_FRONTEND_API_TOKEN\n        appName: "nextjs", // NEXT_PUBLIC_UNLEASH_APP_NAME\n        refreshInterval: 15, // additional client configuration\n      }}\n    >\n      <Component {...pageProps} />\n    </FlagProvider>\n  );\n}\n')),(0,r.kt)("p",null,"With ",(0,r.kt)("inlineCode",{parentName:"p"},"<FlagProvider />")," in place you can now use hooks like: ",(0,r.kt)("inlineCode",{parentName:"p"},"useFlag"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"useVariant"),", or ",(0,r.kt)("inlineCode",{parentName:"p"},"useFlagsStatus")," to block rendering until flags are ready."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'import { useFlag } from "@unleash/nextjs";\n\nconst YourComponent = () => {\n  const isEnabled = useFlag("nextjs-poc");\n\n  return <>{isEnabled ? "ENABLED" : "DISABLED"}</>;\n};\n')),(0,r.kt)("p",null,"If you only plan to use ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Unleash/proxy-client-react"},"Unleash client-side React SDK")," now also works with Next.js. Check documentation there for more examples."),(0,r.kt)("br",null),(0,r.kt)("h2",{id:"b-static-site-generation-optimized-performance-ssg"},"B). Static Site Generation, optimized performance (SSG)"),(0,r.kt)("p",null,"With same access as in the client-side example above you can resolve Unleash feature flags when building static pages."),(0,r.kt)("p",null,"Use ",(0,r.kt)("inlineCode",{parentName:"p"},"getFrontendFlags")," to load"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import {\n  flagsClient,\n  getDefinitions,\n  getFrontendFlags,\n  type IVariant,\n} from "@unleash/nextjs";\nimport type { GetStaticProps, NextPage } from "next";\n\ntype Data = {\n  isEnabled: boolean;\n  variant: IVariant;\n};\n\nconst ExamplePage: NextPage<Data> = ({ isEnabled, variant }) => (\n  <>\n    Flag status: {isEnabled ? "ENABLED" : "DISABLED"}\n    <br />\n    Variant: {variant.name}\n  </>\n);\n\nexport const getStaticProps: GetStaticProps<Data> = async (_ctx) => {\n  /* Using server-side SDK: */\n  const definitions = await getDefinitions();\n  const { toggles } = evaluateFlags(definitions);\n\n  /* Or with Proxy/Frontend API */\n  // const { toggles } = await getFrontendFlags();\n\n  const flags = flagsClient(toggles);\n\n  return {\n    props: {\n      isEnabled: flags.isEnabled("nextjs-poc"),\n      variant: flags.getVariant("nextjs-poc"),\n    },\n  };\n};\n\nexport default ExamplePage;\n')),(0,r.kt)("p",null,"The same approach will work for ",(0,r.kt)("a",{parentName:"p",href:"https://nextjs.org/docs/basic-features/data-fetching/incremental-static-regeneration"},"ISR (Incremental Static Regeneration)"),"."),(0,r.kt)("br",null),(0,r.kt)("h2",{id:"c-server-side-rendering-ssr"},"C). Server Side Rendering (SSR)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import {\n  flagsClient,\n  evaluateFlags,\n  getDefinitions,\n  type IVariant,\n} from "@unleash/nextjs";\nimport type { GetServerSideProps, NextPage } from "next";\n\ntype Data = {\n  isEnabled: boolean;\n};\n\nconst ExamplePage: NextPage<Data> = ({ isEnabled }) => (\n  <>Flag status: {isEnabled ? "ENABLED" : "DISABLED"}</>\n);\n\nexport const getServerSideProps: GetServerSideProps<Data> = async (ctx) => {\n  const sessionId =\n    ctx.req.cookies["unleash-session-id"] ||\n    `${Math.floor(Math.random() * 1_000_000_000)}`;\n  ctx.res.setHeader("set-cookie", `unleash-session-id=${sessionId}; path=/;`);\n\n  const context = {\n    sessionId, // needed for stickiness\n    // userId: "123" // etc\n  };\n\n  const { toggles } = await getFrontendFlags(); // Use Proxy/Frontend API\n  const flags = flagsClient(toggles);\n\n  return {\n    props: {\n      isEnabled: flags.isEnabled("nextjs-poc"),\n    },\n  };\n};\n\nexport default ExamplePage;\n')),(0,r.kt)("br",null),(0,r.kt)("h2",{id:"d-bootstrapping--rehydration"},"D). Bootstrapping / rehydration"),(0,r.kt)("p",null,"You can bootstrap Unleash React SDK to have values loaded from the start.\nInitial value can be customized server-side."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import App, { AppContext, type AppProps } from "next/app";\nimport {\n  FlagProvider,\n  getFrontendFlags,\n  type IMutableContext,\n  type IToggle,\n} from "@unleash/nextjs";\n\ntype Data = {\n  toggles: IToggle[];\n  context: IMutableContext;\n};\n\nexport default function CustomApp({\n  Component,\n  pageProps,\n  toggles,\n  context,\n}: AppProps & Data) {\n  return (\n    <FlagProvider\n      config={{\n        bootstrap: toggles,\n        context,\n      }}\n    >\n      <Component {...pageProps} />\n    </FlagProvider>\n  );\n}\n\nCustomApp.getInitialProps = async (ctx: AppContext) => {\n  const context = {\n    userId: "123",\n  };\n\n  const { toggles } = await getFrontendFlags(); // use Unleash Proxy\n\n  return {\n    ...(await App.getInitialProps(ctx)),\n    bootstrap: toggles,\n    context, // pass context along so client can refetch correct values\n  };\n};\n')),(0,r.kt)("br",null),(0,r.kt)("h1",{id:"whats-next"},"What's next"),(0,r.kt)("h2",{id:"experimental-features-support"},"Experimental features support"),(0,r.kt)("p",null,"Unleash Next.js SDK can run on ",(0,r.kt)("a",{parentName:"p",href:"https://nextjs.org/docs/api-reference/edge-runtime"},"Edge Runtime")," and in ",(0,r.kt)("a",{parentName:"p",href:"https://nextjs.org/docs/advanced-features/middleware"},"Middleware"),". We are also interested in providing an example with ",(0,r.kt)("a",{parentName:"p",href:"https://beta.nextjs.org/docs/app-directory-roadmap"},"App Directory"),"."),(0,r.kt)("h2",{id:"known-limitation"},"Known limitation"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"In current interation server-side SDK does not support metrics."),(0,r.kt)("li",{parentName:"ul"},'Server-side SDK does not support "Hostname" strategy. Use custom context field and constraints instead.')),(0,r.kt)("hr",null),(0,r.kt)("p",null,"This content was generated on ",(0,r.kt)("time",{datetime:"2023-02-03T15:05:38.908Z"},"3 February 2023 at 15:05:38 Coordinated Universal Time")))}u.isMDXComponent=!0}}]);