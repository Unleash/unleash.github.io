"use strict";(self.webpackChunkwebsitev_2=self.webpackChunkwebsitev_2||[]).push([[7218],{70133:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>u});var a=n(87462),o=(n(67294),n(3905));const r={title:"Quickstart"},i=void 0,s={unversionedId:"tutorials/quickstart",id:"tutorials/quickstart",title:"Quickstart",description:"In this section we will attempt to guide you in order to get started with Unleash easily. There are multiple options to get started with Unleash, browse the headings to find the method that works best for you.",source:"@site/docs/tutorials/quickstart.md",sourceDirName:"tutorials",slug:"/tutorials/quickstart",permalink:"/tutorials/quickstart",draft:!1,editUrl:"https://github.com/Unleash/unleash/edit/main/website/docs/tutorials/quickstart.md",tags:[],version:"current",frontMatter:{title:"Quickstart"},sidebar:"documentation",previous:{title:"Important Concepts",permalink:"/tutorials/important-concepts"},next:{title:"Topic guides",permalink:"/topics"}},l={},u=[{value:"I just want to try creating flags without much setup",id:"i-just-want-to-try-creating-flags-without-much-setup",level:2},{value:"I want to test flags in a client side environment",id:"i-want-to-test-flags-in-a-client-side-environment",level:3},{value:"Create your first flag",id:"create-your-first-flag",level:4},{value:"Connecting a client-side SDK to Unleash",id:"connecting-a-client-side-sdk-to-unleash",level:4},{value:"I want to test flags in a back-end environment",id:"i-want-to-test-flags-in-a-back-end-environment",level:3},{value:"Create your first flag",id:"create-your-first-flag-1",level:4},{value:"Connecting to the Unleash instance from your app",id:"connecting-to-the-unleash-instance-from-your-app",level:4},{value:"I want to setup my own instance for testing purposes",id:"i-want-to-setup-my-own-instance-for-testing-purposes",level:2},{value:"Deploy a paid version of Unleash to Heroku",id:"deploy-a-paid-version-of-unleash-to-heroku",level:3},{value:"Deploy a paid version of Unleash to DigitalOcean",id:"deploy-a-paid-version-of-unleash-to-digitalocean",level:3},{value:"Accessing your new instance",id:"accessing-your-new-instance",level:3},{value:"Create your first flag",id:"create-your-first-flag-2",level:3},{value:"Connect your SDK",id:"connect-your-sdk",level:3},{value:"I want to run Unleash locally",id:"i-want-to-run-unleash-locally",level:2},{value:"Run Unleash with Docker",id:"run-unleash-with-docker",level:3},{value:"Accessing your new instance",id:"accessing-your-new-instance-1",level:3},{value:"Create your first flag",id:"create-your-first-flag-3",level:3},{value:"Connect your server-side SDK",id:"connect-your-server-side-sdk",level:3},{value:"Connecting a client-side SDK to your instance",id:"connecting-a-client-side-sdk-to-your-instance",level:3},{value:"Run Unleash and the Unleash proxy with Docker",id:"run-unleash-and-the-unleash-proxy-with-docker",level:4}],p={toc:u};function c(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"In this section we will attempt to guide you in order to get started with Unleash easily. There are multiple options to get started with Unleash, browse the headings to find the method that works best for you."),(0,o.kt)("admonition",{title:"Feature flags or feature toggles?",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"This document uses ",(0,o.kt)("strong",{parentName:"p"},"feature flags")," and ",(0,o.kt)("strong",{parentName:"p"},"feature toggles")," interchangeably. Some people prefer flag; others prefer toggle. We use both - they are synonyms for us.")),(0,o.kt)("h2",{id:"i-just-want-to-try-creating-flags-without-much-setup"},"I just want to try creating flags without much setup"),(0,o.kt)("p",null,"Usually, you'll need to set up an Unleash instance in order to work with Unleash. However, for testing purposes we have set up a demo instance that you can use in order to test out different use-cases before setting up your own instance. You can find the demo instance admin panel here: ",(0,o.kt)("a",{parentName:"p",href:"https://app.unleash-hosted.com/demo/"},"https://app.unleash-hosted.com/demo/")),(0,o.kt)("p",null,"NOTE: This is a demo instance set up with the Enterprise version. Some of the functionality may be enterprise specific, but everything we cover here is also available in open source."),(0,o.kt)("h3",{id:"i-want-to-test-flags-in-a-client-side-environment"},"I want to test flags in a client side environment"),(0,o.kt)("p",null,"To test flags in a client-side environment, we recommend that you use the ",(0,o.kt)("a",{parentName:"p",href:"/reference/front-end-api"},"front-end client API"),". Client-side SDKs act a little differently from server-side SDKs, so the regular client API won't work for this. For more advanced setups, you can also use the ",(0,o.kt)("a",{parentName:"p",href:"/reference/unleash-proxy"},"Unleash proxy"),", which offers greater flexibility than the front-end API, but at the cost of increased complexity."),(0,o.kt)("h4",{id:"create-your-first-flag"},"Create your first flag"),(0,o.kt)("p",null,"In order to create a flag through the UI, ",(0,o.kt)("a",{parentName:"p",href:"/how-to/how-to-create-feature-toggles"},"you can follow this guide"),". Once you have created your feature flag, you are ready to connect your application using an SDK."),(0,o.kt)("h4",{id:"connecting-a-client-side-sdk-to-unleash"},"Connecting a client-side SDK to Unleash"),(0,o.kt)("div",{id:"connecting-to-the-unleash-proxy-from-your-app"}),(0,o.kt)("p",null,"If you have set up your own Unleash instance and are using the front-end API, then create a ",(0,o.kt)("a",{parentName:"p",href:"/reference/api-tokens-and-client-keys#front-end-tokens"},"front-end token")," and use ",(0,o.kt)("inlineCode",{parentName:"p"},"<your-unleash-instance>/api/frontend")," as the API URL."),(0,o.kt)("p",null,"If you don't have your own Unleash instance set up, you can use the Unleash demo instance's proxy. In that case, the details are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"API URL: ",(0,o.kt)("inlineCode",{parentName:"li"},"https://app.unleash-hosted.com/demo/api/proxy")),(0,o.kt)("li",{parentName:"ul"},"Client key: ",(0,o.kt)("inlineCode",{parentName:"li"},"proxy-123"))),(0,o.kt)("p",null,"Now you can open your application code and connect through one of the ",(0,o.kt)("a",{parentName:"p",href:"../reference/sdks#client-side-sdks"},"client-side SDKs"),"."),(0,o.kt)("p",null,"The following example shows you how you could use the ",(0,o.kt)("a",{parentName:"p",href:"/reference/sdks/javascript-browser"},"JavaScript SDK")," to connect to the Unleash demo proxy:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import { UnleashClient } from 'unleash-proxy-client';\n\nconst unleash = new UnleashClient({\n  url: 'https://app.unleash-hosted.com/demo/api/proxy',\n  clientKey: 'proxy-123',\n  appName: 'my-webapp',\n});\n\nunleash.on('synchronized', () => {\n  if (unleash.isEnabled('proxy.demo')) {\n    // do something once we have connected and synchronized\n  }\n});\n\n// Used to set the context fields, shared with the Unleash Proxy\nunleash.updateContext({ userId: '1233' });\n\n// Start the background polling\nunleash.start();\n")),(0,o.kt)("h3",{id:"i-want-to-test-flags-in-a-back-end-environment"},"I want to test flags in a back-end environment"),(0,o.kt)("h4",{id:"create-your-first-flag-1"},"Create your first flag"),(0,o.kt)("p",null,"In order to create a flag through the UI, ",(0,o.kt)("a",{parentName:"p",href:"/how-to/how-to-create-feature-toggles"},"you can follow this guide"),". Once you have created your feature flag, you are ready to connect your application using an SDK."),(0,o.kt)("h4",{id:"connecting-to-the-unleash-instance-from-your-app"},"Connecting to the Unleash instance from your app"),(0,o.kt)("p",null,"Connection details:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Api URL: https://app.unleash-hosted.com/demo/api/\nSecret key: 56907a2fa53c1d16101d509a10b78e36190b0f918d9f122d\n")),(0,o.kt)("p",null,"Curl command test credentials and retrieve feature toggles:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'curl https://app.unleash-hosted.com/demo/api/client/features \\\n-H "Authorization: 56907a2fa53c1d16101d509a10b78e36190b0f918d9f122d";\n')),(0,o.kt)("p",null,"Now you can open up your application code and create a connection to Unleash using one of our ",(0,o.kt)("a",{parentName:"p",href:"/reference/sdks/"},"SDKs"),". Here's an example using the NodeJS SDK:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const { initialize } = require('unleash-client');\nconst unleash = initialize({\n  url: 'https://app.unleash-hosted.com/demo/api/',\n  appName: 'my-app-name',\n  instanceId: 'my-unique-instance-id',\n  customHeaders: {\n    Authorization: '56907a2fa53c1d16101d509a10b78e36190b0f918d9f122d',\n  },\n});\n\nunleash.on('synchronized', () => {\n  // Unleash is ready to serve updated feature flags.\n\n  // Check a feature flag\n  const isEnabled = unleash.isEnabled('some-toggle');\n\n  // Check the variant\n  const variant = unleash.getVariant('app.ToggleY');\n});\n")),(0,o.kt)("p",null,"Now you can fetch the feature flag you created and try turning it on / off in your code."),(0,o.kt)("h2",{id:"i-want-to-setup-my-own-instance-for-testing-purposes"},"I want to setup my own instance for testing purposes"),(0,o.kt)("p",null,"If you want to set up your own instance for testing purposes you can easily do so by using one of our premade setup kits for Heroku or DigitalOcean."),(0,o.kt)("admonition",{title:"Pricing",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Both DigitalOcean and Heroku will charge you for running Unleash on their services. However, if you use the DigitalOcean link below and are a new user, you will receive $100 in free credits.")),(0,o.kt)("h3",{id:"deploy-a-paid-version-of-unleash-to-heroku"},"Deploy a paid version of Unleash to Heroku"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.heroku.com/deploy/?template=https://github.com/Unleash/unleash"},(0,o.kt)("img",{parentName:"a",src:"https://www.herokucdn.com/deploy/button.png",alt:"Deploy to Heroku"}))),(0,o.kt)("h3",{id:"deploy-a-paid-version-of-unleash-to-digitalocean"},"Deploy a paid version of Unleash to DigitalOcean"),(0,o.kt)("admonition",{title:"Free credits",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"You'll receive $100 in free credits if you are a new DigitalOcean user using this link.")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://cloud.digitalocean.com/apps/new?repo=https://github.com/Unleash/unleash/tree/main&refcode=0e1d75187044"},(0,o.kt)("img",{parentName:"a",src:"https://www.deploytodo.com/do-btn-blue.svg",alt:"Deploy to DigitalOcean"}))),(0,o.kt)("h3",{id:"accessing-your-new-instance"},"Accessing your new instance"),(0,o.kt)("p",null,"Once you have set up the new instance, follow the URL provided by either Heroku or DigitalOcean and it will take you to the application login screen."),(0,o.kt)("p",null,"Input the following credentials to log in:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"username: admin\npassword: unleash4all\n")),(0,o.kt)("h3",{id:"create-your-first-flag-2"},"Create your first flag"),(0,o.kt)("p",null,"In order to create a flag through the UI, ",(0,o.kt)("a",{parentName:"p",href:"/how-to/how-to-create-feature-toggles"},"you can follow this guide"),". Once you have created your feature flag, you are ready to connect your application using an SDK."),(0,o.kt)("p",null,"If you'd like to create your feature flag with code, you can hit the create feature endpoint with the following command:"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"CRUD operations require an admin API key. For security reasons we have split the admin and client API into separate APIs. You can view how to create API keys in the next section of this guide. Make sure you create client keys for use in SDKs and restrict Admin api key usage.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-curl"},'curl -H "Content-Type: application/json" \\\n     -H "Authorization: MY-ADMIN-API-KEY" \\\n     -X POST \\\n     -d \'{\n  "name": "my-unique-feature-name",\n  "description": "lorem ipsum..",\n  "type": "release",\n  "enabled": false,\n  "stale": false,\n  "strategies": [\n    {\n      "name": "default",\n      "parameters": {}\n    }\n  ],\n  "variants": [],\n  "tags": []\n}\' \\\nhttp://CHANGEME/api/admin/features\n')),(0,o.kt)("h3",{id:"connect-your-sdk"},"Connect your SDK"),(0,o.kt)("p",null,'Next, find the navigation, open up the Admin panel and find the API Access tab. Click the "Add new api key" button and create a client key. This key can be used to connect to the instance with our ',(0,o.kt)("a",{parentName:"p",href:"/reference/sdks/"},"SDKs"),"."),(0,o.kt)("p",null,"You can find more ",(0,o.kt)("a",{parentName:"p",href:"/how-to/how-to-create-api-tokens"},"information about API keys here"),"."),(0,o.kt)("p",null,"Now that you have your API key created, you have what you need to connect to the SDK (NodeJS example):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const { initialize } = require('unleash-client');\nconst unleash = initialize({\n  url: 'https://your.heroku.instance.com/api/',\n  appName: 'my-app-name',\n  instanceId: 'my-unique-instance-id',\n  customHeaders: {\n    Authorization: 'YOUR_API_KEY_HERE',\n  },\n});\n\nunleash.on('synchronized', () => {\n  // Unleash is ready to serve updated feature toggles.\n\n  // Check a feature flag\n  const isEnabled = unleash.isEnabled('some-toggle');\n\n  // Check the variant\n  const variant = unleash.getVariant('app.ToggleY');\n});\n")),(0,o.kt)("h2",{id:"i-want-to-run-unleash-locally"},"I want to run Unleash locally"),(0,o.kt)("h3",{id:"run-unleash-with-docker"},"Run Unleash with Docker"),(0,o.kt)("p",null,"The easiest way to run unleash locally is using ",(0,o.kt)("a",{parentName:"p",href:"https://www.docker.com/"},"docker"),"."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Each container that runs in your local Docker instance must have a unique name. If you've run these commands before, you can either start the containers again (",(0,o.kt)("inlineCode",{parentName:"p"},"docker start ${CONTAINER_NAME}"),") or remove them (",(0,o.kt)("inlineCode",{parentName:"p"},"docker rm ${CONTAINER_NAME}"),") and run the commands again.")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create a network by running ",(0,o.kt)("inlineCode",{parentName:"li"},"docker network create unleash")),(0,o.kt)("li",{parentName:"ol"},"Start a postgres database:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"docker run \\\n  -e POSTGRES_USER=unleash_user \\\n  -e POSTGRES_PASSWORD=some_password \\\n  -e POSTGRES_DB=unleash \\\n  --network unleash \\\n  --name postgres \\\n  postgres\n")),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Start Unleash via docker:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"docker run \\\n  -p 4242:4242 \\\n  -e DATABASE_HOST=postgres \\\n  -e DATABASE_NAME=unleash \\\n  -e DATABASE_USERNAME=unleash_user \\\n  -e DATABASE_PASSWORD=some_password \\\n  -e DATABASE_SSL=false \\\n  --network unleash \\\n  --name unleash \\\n  --pull=always unleashorg/unleash-server\n")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/reference/deploy/getting-started"},"Click here to see all options to get started locally.")),(0,o.kt)("h3",{id:"accessing-your-new-instance-1"},"Accessing your new instance"),(0,o.kt)("p",null,"Once you have the local instance running on localhost, input the following credentials to log in:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"username: admin\npassword: unleash4all\n")),(0,o.kt)("h3",{id:"create-your-first-flag-3"},"Create your first flag"),(0,o.kt)("p",null,"In order to create a flag through the UI, ",(0,o.kt)("a",{parentName:"p",href:"/how-to/how-to-create-feature-toggles"},"you can follow this guide"),". Once you have created your feature flag, you are ready to connect your application using an SDK."),(0,o.kt)("p",null,"If you'd like to create your feature toggles with code, you can hit the create feature endpoint with the following command:"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"CRUD operations require an admin API key. For security reasons we have split the admin and client API into separate APIs. You can view how to create API keys in the next section of this guide. Make sure you create client keys for use in SDKs and restrict Admin api key usage.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-curl"},'curl -H "Content-Type: application/json" \\\n     -H "Authorization: MY-ADMIN-API-KEY" \\\n     -X POST \\\n     -d \'{\n  "name": "my-unique-feature-name",\n  "description": "lorem ipsum..",\n  "type": "release",\n  "enabled": false,\n  "stale": false,\n  "strategies": [\n    {\n      "name": "default",\n      "parameters": {}\n    }\n  ],\n  "variants": [],\n  "tags": []\n}\' \\\nhttp://CHANGEME/api/admin/features\n')),(0,o.kt)("h3",{id:"connect-your-server-side-sdk"},"Connect your server-side SDK"),(0,o.kt)("p",null,'Find the navigation, open up the Admin panel and find the API Access tab. Click the "Add new API key" button and create a client key. This key can be used to connect to the instance with our ',(0,o.kt)("a",{parentName:"p",href:"/reference/sdks/"},"SDKs"),"."),(0,o.kt)("p",null,"You can find more ",(0,o.kt)("a",{parentName:"p",href:"/how-to/how-to-create-api-tokens"},"information about API keys here"),"."),(0,o.kt)("p",null,"Now that you have your API key created, you have what you need to connect to the SDK (NodeJS example):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const { initialize } = require('unleash-client');\nconst unleash = initialize({\n  url: 'https://localhost:4242/api/',\n  appName: 'my-app-name',\n  instanceId: 'my-unique-instance-id',\n  customHeaders: {\n    Authorization: 'YOUR_API_KEY_HERE',\n  },\n});\n\nunleash.on('synchronized', () => {\n  // Unleash is ready to serve updated feature toggles.\n\n  // Check a feature flag\n  const isEnabled = unleash.isEnabled('some-flag');\n\n  // Check the variant\n  const variant = unleash.getVariant('app.ToggleY');\n});\n")),(0,o.kt)("h3",{id:"connecting-a-client-side-sdk-to-your-instance"},"Connecting a client-side SDK to your instance"),(0,o.kt)("p",null,"The easiest way to connect a client-side SDK to your Unleash instance is to use the ",(0,o.kt)("a",{parentName:"p",href:"/reference/front-end-api"},"front-end API"),". You'll need to:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create a front-end API token (",(0,o.kt)("a",{parentName:"li",href:"/how-to/how-to-create-api-tokens"},"How do I create API tokens?"),")"),(0,o.kt)("li",{parentName:"ol"},"Configure CORS to allow your SDK to connect. For testing, we recommend allowing all origins (",(0,o.kt)("inlineCode",{parentName:"li"},"*"),")."),(0,o.kt)("li",{parentName:"ol"},"Point your app at ",(0,o.kt)("inlineCode",{parentName:"li"},"<your-unleash-instance>/api/frontend"),".")),(0,o.kt)("p",null,"The section on ",(0,o.kt)("a",{parentName:"p",href:"/reference/front-end-api#using-the-unleash-front-end-api"},"using the Unleash front-end API")," has more details for how you configure these settings."),(0,o.kt)("p",null,"As an example, here's how you would connect the ",(0,o.kt)("a",{parentName:"p",href:"/reference/sdks/javascript-browser"},"JavaScript SDK")," to a local Unleash instance available at ",(0,o.kt)("inlineCode",{parentName:"p"},"localhost:4242")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import { UnleashClient } from 'unleash-proxy-client';\n\nconst unleash = new UnleashClient({\n  url: 'http://localhost:4242/api/proxy',\n  clientKey: '<your-front-end-api-token>',\n  appName: 'my-webapp',\n});\n\n// Start the background polling\nunleash.start();\n")),(0,o.kt)("h4",{id:"run-unleash-and-the-unleash-proxy-with-docker"},"Run Unleash and the Unleash proxy with Docker"),(0,o.kt)("p",null,"We designed the ",(0,o.kt)("a",{parentName:"p",href:"/reference/front-end-api"},"front-end API")," to make it as easy as possible to get started and to cover basic use cases for front-end clients. However, if you need more flexibility, then you can also use the ",(0,o.kt)("a",{parentName:"p",href:"/reference/unleash-proxy"},"Unleash proxy"),"."),(0,o.kt)("p",null,"Follow the steps outlined in the ",(0,o.kt)("a",{parentName:"p",href:"#run-unleash-with-docker"},"run Unleash with Docker")," section to get the Unleash instance up and running. Once you have done that, you need to first get an API key from your Unleash instance and then use that API key when starting the Unleash proxy."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Get an API key."),(0,o.kt)("p",{parentName:"li"},"To get an API key, access your Unleash instance in a web browser. First, navigate to the API access screen."),(0,o.kt)("p",{parentName:"li"},(0,o.kt)("img",{alt:"The Unleash UI showing a dropdown menu under the Configure menu entry. The dropdown menu&#39;s API Access option is highlighted and you&#39;re told to navigate there.",src:n(42124).Z,title:"Navigate to the API access page.",width:"1366",height:"411"})),(0,o.kt)("p",{parentName:"li"},"Next, create an API key with these details"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"name:")," proxy-key (this can be whatever you want)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"token type:")," client"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"project:")," all"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"environment:")," select your preferred environment (this option is only available in Unleash 4.3 and later)")),(0,o.kt)("p",{parentName:"li"},"Copy the API key to your clipboard. You'll need it in the next step."),(0,o.kt)("admonition",{parentName:"li",type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Depending on whether you have the environments feature enabled or not, the API key will look a little different. If you don't have environments enabled, it'll just be a 64 character long hexadecimal string (for instance ",(0,o.kt)("inlineCode",{parentName:"p"},"be44368985f7fb3237c584ef86f3d6bdada42ddbd63a019d26955178"),"). If you do have environments enabled, the key will be prefixed with the project and the environment that the key is valid for. It'll use the format ",(0,o.kt)("inlineCode",{parentName:"p"},"<project>:<environment>.<key>"),", e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},"demo-app:production.be44368985f7fb3237c584ef86f3d6bdada42ddbd63a019d26955178"),"."),(0,o.kt)("p",{parentName:"admonition"},"Regardless of which format your string uses, do not modify it."))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Start the Unleash proxy"),(0,o.kt)("p",{parentName:"li"},"Start a container with the Unleash proxy by running the following command. Replace ",(0,o.kt)("inlineCode",{parentName:"p"},"${API_KEY}")," with the key you created in the following step."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"docker run \\\n  -e UNLEASH_PROXY_CLIENT_KEYS=some-secret \\\n  -e UNLEASH_URL='http://unleash:4242/api/' \\\n  -e UNLEASH_API_TOKEN='${API_KEY}' \\\n  -p 3000:3000 \\\n  --network unleash \\\n  --name unleash-proxy \\\n  --pull=always unleashorg/unleash-proxy\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Test the proxy"),(0,o.kt)("p",{parentName:"li"},"To make sure the proxy is running successfully, you can test it by running the following command:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-curl"},'curl http://localhost:3000/proxy -H "Authorization: some-secret"\n')))))}c.isMDXComponent=!0},42124:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/api_access_navigation-cdb6464d4103815c991eff1a88f39ab0.png"}}]);