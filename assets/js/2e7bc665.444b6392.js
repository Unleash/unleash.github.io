"use strict";(self.webpackChunkwebsitev_2=self.webpackChunkwebsitev_2||[]).push([[9123],{86429:(e,a,i)=>{i.r(a),i.d(a,{assets:()=>m,contentTitle:()=>c,default:()=>f,frontMatter:()=>l,metadata:()=>p,toc:()=>u});var t=i(87462),n=(i(67294),i(3905)),o=i(60961),s=i(48165),r=(i(90115),i(58475),i(5428)),d=(i(80487),i(54881),i(11666));const l={id:"mark-notifications-as-read",title:"Mark notifications as read",description:"Allow to select which notifications were read and saving a read date",sidebar_label:"Mark notifications as read",hide_title:!0,hide_table_of_contents:!0,api:{description:"Allow to select which notifications were read and saving a read date",tags:["Unstable"],operationId:"markNotificationsAsRead",requestBody:{description:"markNotificationsAsReadSchema",required:!0,content:{"application/json":{schema:{type:"object",additionalProperties:!0,required:["notifications"],properties:{notifications:{type:"array",items:{type:"number"}}}}}}},responses:{200:{description:"This response has no body."}},method:"post",path:"/api/admin/notifications/read",servers:[{url:"<your-unleash-url>"}],security:[{apiKey:[]}],securitySchemes:{apiKey:{type:"apiKey",in:"header",name:"Authorization"}},jsonRequestBodyExample:{notifications:[0]},info:{title:"Unleash API",version:"4.22.0-beta.33"},postman:{name:"Mark notifications as read",description:{content:"Allow to select which notifications were read and saving a read date",type:"text/plain"},url:{path:["api","admin","notifications","read"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"reference/api/unleash/unleash-api",custom_edit_url:null},c=void 0,p={unversionedId:"reference/api/unleash/mark-notifications-as-read",id:"reference/api/unleash/mark-notifications-as-read",title:"Mark notifications as read",description:"Allow to select which notifications were read and saving a read date",source:"@site/docs/reference/api/unleash/mark-notifications-as-read.api.mdx",sourceDirName:"reference/api/unleash",slug:"/reference/api/unleash/mark-notifications-as-read",permalink:"/reference/api/unleash/mark-notifications-as-read",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"mark-notifications-as-read",title:"Mark notifications as read",description:"Allow to select which notifications were read and saving a read date",sidebar_label:"Mark notifications as read",hide_title:!0,hide_table_of_contents:!0,api:{description:"Allow to select which notifications were read and saving a read date",tags:["Unstable"],operationId:"markNotificationsAsRead",requestBody:{description:"markNotificationsAsReadSchema",required:!0,content:{"application/json":{schema:{type:"object",additionalProperties:!0,required:["notifications"],properties:{notifications:{type:"array",items:{type:"number"}}}}}}},responses:{200:{description:"This response has no body."}},method:"post",path:"/api/admin/notifications/read",servers:[{url:"<your-unleash-url>"}],security:[{apiKey:[]}],securitySchemes:{apiKey:{type:"apiKey",in:"header",name:"Authorization"}},jsonRequestBodyExample:{notifications:[0]},info:{title:"Unleash API",version:"4.22.0-beta.33"},postman:{name:"Mark notifications as read",description:{content:"Allow to select which notifications were read and saving a read date",type:"text/plain"},url:{path:["api","admin","notifications","read"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"reference/api/unleash/unleash-api",custom_edit_url:null},sidebar:"documentation",previous:{title:"Retrieves a list of notifications",permalink:"/reference/api/unleash/get-notifications"},next:{title:"Get all login events.",permalink:"/reference/api/unleash/get-sign-on-log"}},m={},u=[{value:"Mark notifications as read",id:"mark-notifications-as-read",level:2}],h={toc:u};function f(e){let{components:a,...i}=e;return(0,n.kt)("wrapper",(0,t.Z)({},h,i,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"mark-notifications-as-read"},"Mark notifications as read"),(0,n.kt)("p",null,"Allow to select which notifications were read and saving a read date"),(0,n.kt)(s.Z,{mdxType:"MimeTabs"},(0,n.kt)(d.Z,{label:"application/json",value:"application/json-schema",mdxType:"TabItem"},(0,n.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,n.kt)("summary",{style:{textAlign:"left"}},(0,n.kt)("strong",null,"Request Body"),(0,n.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," required")),(0,n.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}},(0,n.kt)("div",{style:{marginTop:"1rem",marginBottom:"1rem"}},(0,n.kt)("p",null,"markNotificationsAsReadSchema"))),(0,n.kt)("ul",{style:{marginLeft:"1rem"}},(0,n.kt)(r.Z,{collapsible:!1,name:"notifications",required:!0,schemaName:"number[]",qualifierMessage:void 0,schema:{type:"array",items:{type:"number"}},mdxType:"SchemaItem"}))))),(0,n.kt)("div",null,(0,n.kt)(o.Z,{mdxType:"ApiTabs"},(0,n.kt)(d.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,n.kt)("div",null,(0,n.kt)("p",null,"This response has no body.")),(0,n.kt)("div",null)))))}f.isMDXComponent=!0}}]);