"use strict";(self.webpackChunkwebsitev_2=self.webpackChunkwebsitev_2||[]).push([[3339],{87797:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var n=a(87462),o=(a(67294),a(3905));const s={id:"feature_updates_to_slack",title:"Feature Updates To slack"},r=void 0,i={unversionedId:"guides/feature_updates_to_slack",id:"guides/feature_updates_to_slack",title:"Feature Updates To slack",description:"This guide is deprecated. If you're looking for ways to integrate with Slack, you should refer to the Slack add-on guide instead.",source:"@site/docs/guides/feature-updates-to-slack.md",sourceDirName:"guides",slug:"/guides/feature_updates_to_slack",permalink:"/guides/feature_updates_to_slack",draft:!1,editUrl:"https://github.com/Unleash/unleash/edit/main/website/docs/guides/feature-updates-to-slack.md",tags:[],version:"current",frontMatter:{id:"feature_updates_to_slack",title:"Feature Updates To slack"}},u={},l=[{value:"Create a custom Slack WebHook url:",id:"create-a-custom-slack-webhook-url",level:2},{value:"Send data to Slack using an event hook function",id:"send-data-to-slack-using-an-event-hook-function",level:2}],c={toc:l};function d(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"This guide is deprecated. If you're looking for ways to integrate with Slack, you should refer to ",(0,o.kt)("a",{parentName:"p",href:"/addons/slack"},"the Slack add-on guide")," instead.")),(0,o.kt)("h2",{id:"create-a-custom-slack-webhook-url"},"Create a custom Slack WebHook url:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Go to ",(0,o.kt)("a",{parentName:"li",href:"https://slack.com/apps/manage/custom-integrations"},"https://slack.com/apps/manage/custom-integrations")),(0,o.kt)("li",{parentName:"ol"},"Click Incoming WebHooks"),(0,o.kt)("li",{parentName:"ol"},"Click \u201cAdd Configuration\u201d"),(0,o.kt)("li",{parentName:"ol"},"This is Slack's help page on how to do this: ",(0,o.kt)("a",{parentName:"li",href:"https://api.slack.com/messaging/webhooks"},"https://api.slack.com/messaging/webhooks"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Choose a channel, follow the wizard, get the custom URL.")))),(0,o.kt)("h2",{id:"send-data-to-slack-using-an-event-hook-function"},"Send data to Slack using an event hook function"),(0,o.kt)("p",null,"Using the ",(0,o.kt)("inlineCode",{parentName:"p"},"eventHook")," option, create a function that will send the data you'd like into Slack when mutation events happen."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const unleash = require('unleash-server');\nconst axios = require('axios');\n\nfunction onEventHook(event, eventData) {\n  const { createdBy: user, data } = eventData;\n  let text = '';\n\n  const unleashUrl = 'http://your.unleash.host.com';\n  const feature = `<${unleashUrl}/#/features/strategies/${data.name}|${data.name}>`;\n\n  switch (event) {\n    case 'feature-created':\n    case 'feature-updated': {\n      const verb =\n        event === 'feature-created' ? 'created a new' : 'updated the';\n      text = `${user} ${verb} feature ${feature}\\ndescription: ${\n        data.description\n      }\\nenabled: ${data.enabled}\\nstrategies: \\`${JSON.stringify(\n        data.strategies,\n      )}\\``;\n      break;\n    }\n    case 'feature-archived':\n    case 'feature-revived': {\n      const verb = event === 'feature-archived' ? 'archived' : 'revived';\n      text = `${user} ${verb} the feature ${feature}`;\n      break;\n    }\n    default: {\n      console.error(`Unknown event ${event}`);\n      return;\n    }\n  }\n\n  axios\n    .post(\n      'https://hooks.slack.com/services/THIS_IS_WHERE_THE_CUSTOM_URL_GOES',\n      {\n        username: 'Unleash',\n        icon_emoji: ':unleash:', // if you added a custom emoji, otherwise you can remove this field.\n        text: text,\n      },\n    )\n    .then((res) => {\n      console.log(`Slack post statusCode: ${res.status}. Text: ${text}`);\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n}\n\nconst options = {\n  eventHook: onEventHook,\n};\n\nunleash.start(options).then((server) => {\n  console.log(`Unleash started on http://localhost:${server.app.get('port')}`);\n});\n")))}d.isMDXComponent=!0}}]);