"use strict";(self.webpackChunkwebsitev_2=self.webpackChunkwebsitev_2||[]).push([[2918],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),u=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,h=d["".concat(i,".").concat(m)]||d[m]||c[m]||l;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var u=2;u<l;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8215:function(e,t,n){var a=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,r=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:r},t)}},9877:function(e,t,n){n.d(t,{Z:function(){return p}});var a=n(7462),r=n(7294),l=n(2389),o=n(9548),s=n(6010),i="tabItem_LplD";function u(e){var t,n,l,u=e.lazy,p=e.block,c=e.defaultValue,d=e.values,m=e.groupId,h=e.className,k=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=d?d:k.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),v=(0,o.lx)(f,(function(e,t){return e.value===t.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var g=null===c?c:null!=(t=null!=c?c:null==(n=k.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(l=k[0])?void 0:l.props.value;if(null!==g&&!f.some((function(e){return e.value===g})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+g+'" but none of its children has the corresponding value. Available values are: '+f.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var y=(0,o.UB)(),b=y.tabGroupChoices,N=y.setTabGroupChoices,w=(0,r.useState)(g),T=w[0],O=w[1],S=[],E=(0,o.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var C=b[m];null!=C&&C!==T&&f.some((function(e){return e.value===C}))&&O(C)}var A=function(e){var t=e.currentTarget,n=S.indexOf(t),a=f[n].value;a!==T&&(E(t),O(a),null!=m&&N(m,a))},_=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a=S.indexOf(e.currentTarget)+1;n=S[a]||S[0];break;case"ArrowLeft":var r=S.indexOf(e.currentTarget)-1;n=S[r]||S[S.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":p},h)},f.map((function(e){var t=e.value,n=e.label,l=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:function(e){return S.push(e)},onKeyDown:_,onFocus:A,onClick:A},l,{className:(0,s.Z)("tabs__item",i,null==l?void 0:l.className,{"tabs__item--active":T===t})}),null!=n?n:t)}))),u?(0,r.cloneElement)(k.filter((function(e){return e.props.value===T}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},k.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==T})}))))}function p(e){var t=(0,l.Z)();return r.createElement(u,(0,a.Z)({key:String(t)},e))}},684:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return p},default:function(){return h},frontMatter:function(){return u},metadata:function(){return c},toc:function(){return d}});var a=n(7462),r=n(3366),l=(n(7294),n(3905)),o=n(9877),s=n(8215),i=["components"],u={id:"getting_started",title:"Getting Started"},p=void 0,c={unversionedId:"deploy/getting_started",id:"deploy/getting_started",title:"Getting Started",description:"This section only applies if you plan to self-host Unleash. If you are looking for our hosted solution you should head over to www.getunleash.io",source:"@site/docs/deploy/getting-started.md",sourceDirName:"deploy",slug:"/deploy/getting_started",permalink:"/deploy/getting_started",editUrl:"https://github.com/Unleash/unleash/edit/main/website/docs/deploy/getting-started.md",tags:[],version:"current",frontMatter:{id:"getting_started",title:"Getting Started"},sidebar:"documentation",previous:{title:"Deploy and manage Unleash",permalink:"/deploy"},next:{title:"Configuring Unleash",permalink:"/deploy/configuring_unleash"}},d=[{value:"Requirements",id:"requirements",children:[],level:2},{value:"Start Unleash server",id:"start-unleash-server",children:[{value:"Option 1 - use Docker",id:"option-one---use-docker",children:[],level:3},{value:"Option 2 - use Docker-compose",id:"option-two---use-docker-compose",children:[],level:3},{value:"Option 3 - from Node.js",id:"option-three---from-nodejs",children:[],level:3}],level:2},{value:"Create an api token for your client",id:"create-an-api-token-for-your-client",children:[],level:2},{value:"Test your server and create a sample API call",id:"test-your-server-and-create-a-sample-api-call",children:[],level:2},{value:"Version check",id:"version-check",children:[],level:2}],m={toc:d};function h(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"This section only applies if you plan to self-host Unleash. If you are looking for our hosted solution you should head over to ",(0,l.kt)("a",{parentName:"p",href:"https://www.getunleash.io/plans"},"www.getunleash.io"))),(0,l.kt)("h2",{id:"requirements"},"Requirements"),(0,l.kt)("p",null,"You will need:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://nodejs.org/en/download/"},"Node.js")," (version 14 or later)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://www.postgresql.org/download/"},"PostgreSQL")," (version 10 or later)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"./database-setup"},"Create an unleash user and database"),".")),(0,l.kt)("h2",{id:"start-unleash-server"},"Start Unleash server"),(0,l.kt)("p",null,"Whichever option you choose to start Unleash, you must specify a database URI (it can be set in the environment variable DATABASE_URL). If your database server is not set up to support SSL you'll also need to set the environment variable ",(0,l.kt)("inlineCode",{parentName:"p"},"DATABASE_SSL")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"false")),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Once the server has started, you will see the message:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"Unleash started on http://localhost:4242\n")),(0,l.kt)("p",null,"To run multiple replicas of Unleash simply point all instances to the same database."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Unleash v4:")," The first time Unleash starts it will create a default user which you can use to sign-in to you Unleash instance and add more users with:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"username: ",(0,l.kt)("inlineCode",{parentName:"li"},"admin")),(0,l.kt)("li",{parentName:"ul"},"password: ",(0,l.kt)("inlineCode",{parentName:"li"},"unleash4all"))),(0,l.kt)("h3",{id:"option-one---use-docker"},"Option 1 - use Docker"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Useful links:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://hub.docker.com/r/unleashorg/unleash-server/"},"Docker image on dockerhub")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://artifacthub.io/packages/helm/unleash/unleash"},"Unleash Helm Chart on artifacthub"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Steps:")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Create a network by running ",(0,l.kt)("inlineCode",{parentName:"li"},"docker network create unleash")),(0,l.kt)("li",{parentName:"ol"},"Start a postgres database:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"docker run -e POSTGRES_PASSWORD=some_password \\\n  -e POSTGRES_USER=unleash_user -e POSTGRES_DB=unleash \\\n  --network unleash --name postgres postgres\n")),(0,l.kt)("ol",{start:3},(0,l.kt)("li",{parentName:"ol"},"Start Unleash via docker:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"docker run -p 4242:4242 \\\n  -e DATABASE_HOST=postgres -e DATABASE_NAME=unleash \\\n  -e DATABASE_USERNAME=unleash_user -e DATABASE_PASSWORD=some_password \\\n  -e DATABASE_SSL=false \\\n  --network unleash --pull=always unleashorg/unleash-server\n")),(0,l.kt)("h3",{id:"option-two---use-docker-compose"},"Option 2 - use Docker-compose"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Steps:")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Clone the ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Unleash/unleash-docker"},"unleash-docker")," repository."),(0,l.kt)("li",{parentName:"ol"},"Run ",(0,l.kt)("inlineCode",{parentName:"li"},"docker-compose build")," in repository root folder."),(0,l.kt)("li",{parentName:"ol"},"Run ",(0,l.kt)("inlineCode",{parentName:"li"},"docker-compose up")," in repository root folder.")),(0,l.kt)("h3",{id:"option-three---from-nodejs"},"Option 3 - from Node.js"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Create a new folder/directory on your development computer.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"From a terminal/bash shell, install the dependencies:"),(0,l.kt)(o.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"npm",mdxType:"TabItem"},(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"npm init\nnpm install unleash-server --save\n"))),(0,l.kt)(s.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"yarn init\nyarn add unleash-server\n"))))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Create a file called ",(0,l.kt)("em",{parentName:"p"},"server.js"),", paste the following into it and save."),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const unleash = require('unleash-server');\n\nunleash\n  .start({\n    db: {\n      ssl: false,\n      host: 'localhost',\n      port: 5432,\n      database: 'unleash',\n      user: 'unleash_user',\n      password: 'password',\n    },\n    server: {\n      port: 4242,\n    },\n  })\n  .then((unleash) => {\n    console.log(\n      `Unleash started on http://localhost:${unleash.app.get('port')}`,\n    );\n  });\n"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Run ",(0,l.kt)("em",{parentName:"p"},"server.js"),":"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"node server.js\n")))),(0,l.kt)("h2",{id:"create-an-api-token-for-your-client"},"Create an api token for your client"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../user_guide/api-token"},"API Token creation"))),(0,l.kt)("h2",{id:"test-your-server-and-create-a-sample-api-call"},"Test your server and create a sample API call"),(0,l.kt)("p",null,"Once the Unleash server has started, go to ",(0,l.kt)("a",{parentName:"p",href:"http://localhost:4242"},"localhost:4242")," in your browser. If you see an empty list of feature toggles, try creating one with ",(0,l.kt)("a",{parentName:"p",href:"https://curl.se/"},"curl")," from a terminal/bash shell:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'curl --location -H "Authorization: <apitoken from previous step>" \\\n  --request POST \'http://localhost:4242/api/admin/features\' \\\n  --header \'Content-Type: application/json\' --data-raw \'{\\\n  "name": "Feature.A",\\\n  "description": "Dolor sit amet.",\\\n  "type": "release",\\\n  "enabled": false,\\\n  "stale": false,\\\n  "strategies": [\\\n    {\\\n      "name": "default",\\\n      "parameters": {}\\\n    }\\\n  ]\\\n}\'\n')),(0,l.kt)("h2",{id:"version-check"},"Version check"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Unleash checks that it uses the latest version by making a call to ",(0,l.kt)("a",{parentName:"li",href:"https://version.unleash.run"},"https://version.unleash.run"),".",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"This is a cloud function storing instance id to our database for statistics."))),(0,l.kt)("li",{parentName:"ul"},"This request includes a unique instance id for your server."),(0,l.kt)("li",{parentName:"ul"},"If you do not wish to check for upgrades define the environment variable ",(0,l.kt)("inlineCode",{parentName:"li"},"CHECK_VERSION")," to anything else other than ",(0,l.kt)("inlineCode",{parentName:"li"},"true")," before starting, and Unleash won't make any calls",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"export CHECK_VERSION=false"))))))}h.isMDXComponent=!0}}]);