"use strict";(self.webpackChunkwebsitev_2=self.webpackChunkwebsitev_2||[]).push([[88439],{64489:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>r,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>a,toc:()=>u});var n=i(87462),s=(i(67294),i(3905));const o={title:"The email service is not working correctly on my self-hosted Unleash instance"},l=void 0,a={unversionedId:"using-unleash/troubleshooting/email-service",id:"using-unleash/troubleshooting/email-service",title:"The email service is not working correctly on my self-hosted Unleash instance",description:"When setting up your self-hosted Unleash instance, one of the available options is to configure an email service that will allow Unleash to send reset password and welcome emails to users.",source:"@site/docs/using-unleash/troubleshooting/email-service.md",sourceDirName:"using-unleash/troubleshooting",slug:"/using-unleash/troubleshooting/email-service",permalink:"/using-unleash/troubleshooting/email-service",draft:!1,editUrl:"https://github.com/Unleash/unleash/edit/main/website/docs/using-unleash/troubleshooting/email-service.md",tags:[],version:"current",frontMatter:{title:"The email service is not working correctly on my self-hosted Unleash instance"},sidebar:"documentation",previous:{title:"My requests are being blocked by CORS",permalink:"/using-unleash/troubleshooting/cors"},next:{title:"I don't see a documented Unleash feature in my admin UI",permalink:"/using-unleash/troubleshooting/feature-not-available"}},r={},u=[{value:"Configuration",id:"configuration",level:2},{value:"Invalid URL error",id:"invalid-url-error",level:2},{value:"SSL-related errors",id:"ssl-related-errors",level:2},{value:"SMTP TLS port",id:"smtp-tls-port",level:3},{value:"Custom SSL certificate",id:"custom-ssl-certificate",level:3}],h={toc:u};function c(e){let{components:t,...i}=e;return(0,s.kt)("wrapper",(0,n.Z)({},h,i,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"When setting up your self-hosted Unleash instance, one of the available options is to configure an ",(0,s.kt)("a",{parentName:"p",href:"https://docs.getunleash.io/using-unleash/deploy/email-service"},"email service")," that will allow Unleash to send reset password and welcome emails to users."),(0,s.kt)("p",null,"Here's how to troubleshoot some common issues related to the email service."),(0,s.kt)("h2",{id:"configuration"},"Configuration"),(0,s.kt)("p",null,"The most common issues arise from misconfiguration. Please refer to the following documentation for guidance:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://docs.getunleash.io/using-unleash/deploy/email-service"},"Email service")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://docs.getunleash.io/using-unleash/deploy/configuring-unleash"},"Configuring Unleash"))),(0,s.kt)("p",null,"You should double check that the details in your configuration look correct."),(0,s.kt)("h2",{id:"invalid-url-error"},"Invalid URL error"),(0,s.kt)("p",null,"Make sure that the ",(0,s.kt)("a",{parentName:"p",href:"https://docs.getunleash.io/using-unleash/deploy/configuring-unleash#unleash-url"},"UNLEASH_URL")," variable is correctly set to a valid URL. This should be set to the public discoverable URL of your Unleash instance, and it should include the protocol (http or https)."),(0,s.kt)("p",null,"Examples:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Subdomain: ",(0,s.kt)("inlineCode",{parentName:"li"},"https://unleash.mysite.com")),(0,s.kt)("li",{parentName:"ul"},"Subpath: ",(0,s.kt)("inlineCode",{parentName:"li"},"https://mysite.com/unleash"))),(0,s.kt)("h2",{id:"ssl-related-errors"},"SSL-related errors"),(0,s.kt)("h3",{id:"smtp-tls-port"},"SMTP TLS port"),(0,s.kt)("p",null,"Please double check that you're trying to reach your SMTP server on the TLS port, typically ",(0,s.kt)("inlineCode",{parentName:"p"},"587"),"."),(0,s.kt)("h3",{id:"custom-ssl-certificate"},"Custom SSL certificate"),(0,s.kt)("p",null,"If you're using your own SMTP server which uses a custom SSL certificate, you will need to tell Unleash to trust that certificate. You can do this by setting the ",(0,s.kt)("a",{parentName:"p",href:"https://docs.getunleash.io/using-unleash/deploy/configuring-unleash#node-extra-ca-certs"},"NODE_EXTRA_CA_CERTS")," variable to the path of the certificate file."),(0,s.kt)("p",null,"This is usually done by mounting the custom certificate in a volume, and then setting ",(0,s.kt)("inlineCode",{parentName:"p"},"NODE_EXTRA_CA_CERTS")," to the absolute path in the container where it can find the certificate. For example, if you mount it to ",(0,s.kt)("inlineCode",{parentName:"p"},"/var/certs"),", you should set ",(0,s.kt)("inlineCode",{parentName:"p"},"NODE_EXTRA_CA_CERTS")," to something like ",(0,s.kt)("inlineCode",{parentName:"p"},"/var/certs/mycert.crt"),"."))}c.isMDXComponent=!0}}]);