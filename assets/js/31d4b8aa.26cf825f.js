"use strict";(self.webpackChunkwebsitev_2=self.webpackChunkwebsitev_2||[]).push([[2918],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return h}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),p=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(n),h=r,m=d["".concat(i,".").concat(h)]||d[h]||c[h]||o;return n?a.createElement(m,l(l({ref:t},u),{},{components:n})):a.createElement(m,l({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var p=2;p<o;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6926:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return i},metadata:function(){return p},toc:function(){return u},default:function(){return d}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),l=["components"],s={id:"getting_started",title:"Getting Started"},i=void 0,p={unversionedId:"deploy/getting_started",id:"deploy/getting_started",isDocsHomePage:!1,title:"Getting Started",description:"This section only applies if you plan to self-host Unleash. If you are looking for our hosted solution you should head over to www.getunleash.io",source:"@site/docs/deploy/getting-started.md",sourceDirName:"deploy",slug:"/deploy/getting_started",permalink:"/deploy/getting_started",editUrl:"https://github.com/Unleash/unleash/edit/master/websitev2/docs/deploy/getting-started.md",version:"current",frontMatter:{id:"getting_started",title:"Getting Started"},sidebar:"Deploy and manage",next:{title:"Configuring Unleash",permalink:"/deploy/configuring_unleash"}},u=[{value:"Requirements",id:"requirements",children:[]},{value:"Start Unleash server",id:"start-unleash-server",children:[{value:"Option one - use Docker",id:"option-one---use-docker",children:[]},{value:"Option two - from Node.js",id:"option-two---from-nodejs",children:[]}]},{value:"Create an api token for your client",id:"create-an-api-token-for-your-client",children:[]},{value:"Test your server and create a sample API call",id:"test-your-server-and-create-a-sample-api-call",children:[]},{value:"Version check",id:"version-check",children:[]}],c={toc:u};function d(e){var t=e.components,n=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"This section only applies if you plan to self-host Unleash. If you are looking for our hosted solution you should head over to ",(0,o.kt)("a",{parentName:"p",href:"https://www.getunleash.io/plans"},"www.getunleash.io"))),(0,o.kt)("h2",{id:"requirements"},"Requirements"),(0,o.kt)("p",null,"You will need:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://nodejs.org/en/download/"},"Node.js")," (version 14 or later)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.postgresql.org/download/"},"PostgreSQL")," (version 10 or later)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"./database-setup"},"Create an unleash user and database"),".")),(0,o.kt)("h2",{id:"start-unleash-server"},"Start Unleash server"),(0,o.kt)("p",null,"Whichever option you choose to start Unleash, you must specify a database URI (it can be set in the environment variable DATABASE_URL). If your database server is not set up to support SSL you'll also need to set the environment variable ",(0,o.kt)("inlineCode",{parentName:"p"},"DATABASE_SSL")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"false")),(0,o.kt)("hr",null),(0,o.kt)("p",null,"Once the server has started, you will see the message:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"Unleash started on http://localhost:4242\n")),(0,o.kt)("p",null,"To run multiple replicas of Unleash simply point all instances to the same database."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Unleash v4:")," The first time Unleash starts it will create a default user which you can use to sign-in to you Unleash instance and add more users with:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"username: ",(0,o.kt)("inlineCode",{parentName:"li"},"admin")),(0,o.kt)("li",{parentName:"ul"},"password: ",(0,o.kt)("inlineCode",{parentName:"li"},"unleash4all"))),(0,o.kt)("h3",{id:"option-one---use-docker"},"Option one - use Docker"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Useful links:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://hub.docker.com/r/unleashorg/unleash-server/"},"Docker image on dockerhub")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://artifacthub.io/packages/helm/unleash/unleash"},"Unleash Helm Chart on artifacthub"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Steps:")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create a network by running ",(0,o.kt)("inlineCode",{parentName:"li"},"docker network create unleash")),(0,o.kt)("li",{parentName:"ol"},"Start a postgres database:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"docker run -e POSTGRES_PASSWORD=some_password \\\n  -e POSTGRES_USER=unleash_user -e POSTGRES_DB=unleash \\\n  --network unleash --name postgres postgres\n")),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Start Unleash via docker:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"docker run -p 4242:4242 \\\n  -e DATABASE_HOST=postgres -e DATABASE_NAME=unleash \\\n  -e DATABASE_USERNAME=unleash_user -e DATABASE_PASSWORD=some_password \\\n  -e DATABASE_SSL=false \\\n  --network unleash unleashorg/unleash-server\n")),(0,o.kt)("h4",{id:"docker-compose"},"Docker-compose"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Clone the ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/Unleash/unleash-docker"},"unleash-docker")," repository."),(0,o.kt)("li",{parentName:"ol"},"Run ",(0,o.kt)("inlineCode",{parentName:"li"},"docker-compose build")," in repository root folder."),(0,o.kt)("li",{parentName:"ol"},"Run ",(0,o.kt)("inlineCode",{parentName:"li"},"docker-compose up")," in repository root folder.")),(0,o.kt)("h3",{id:"option-two---from-nodejs"},"Option two - from Node.js"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Create a new folder/directory on your development computer.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"From a terminal/bash shell, install the dependencies:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"npm init\nnpm install unleash-server --save\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Create a file called ",(0,o.kt)("em",{parentName:"p"},"server.js"),", paste the following into it and save."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const unleash = require('unleash-server');\n\nunleash\n  .start({\n    db: {\n      ssl: false,\n      host: 'localhost',\n      port: 5432,\n      database: 'unleash',\n      user: 'unleash_user',\n      password: 'passord',\n    },\n    server: {\n      port: 4242,\n    },\n  })\n  .then(unleash => {\n    console.log(\n      `Unleash started on http://localhost:${unleash.app.get('port')}`,\n    );\n  });\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Run ",(0,o.kt)("em",{parentName:"p"},"server.js"),":"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"node server.js\n")))),(0,o.kt)("h2",{id:"create-an-api-token-for-your-client"},"Create an api token for your client"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"../user_guide/api-token"},"API Token creation"))),(0,o.kt)("h2",{id:"test-your-server-and-create-a-sample-api-call"},"Test your server and create a sample API call"),(0,o.kt)("p",null,"Once the Unleash server has started, go to ",(0,o.kt)("a",{parentName:"p",href:"http://localhost:4242"},"localhost:4242")," in your browser. If you see an empty list of feature toggles, try creating one with ",(0,o.kt)("a",{parentName:"p",href:"https://curl.se/"},"curl")," from a terminal/bash shell:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'curl --location -H "Authorization: <apitoken from previous step>" \\\n  --request POST \'http://localhost:4242/api/admin/features\' \\\n  --header \'Content-Type: application/json\' --data-raw \'{\\\n  "name": "Feature.A",\\\n  "description": "Dolor sit amet.",\\\n  "type": "release",\\\n  "enabled": false,\\\n  "stale": false,\\\n  "strategies": [\\\n    {\\\n      "name": "default",\\\n      "parameters": {}\\\n    }\\\n  ]\\\n}\'\n')),(0,o.kt)("h2",{id:"version-check"},"Version check"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Unleash checks that it uses the latest version by making a call to ",(0,o.kt)("a",{parentName:"li",href:"https://version.unleash.run"},"https://version.unleash.run"),".",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"This is a cloud function storing instance id to our database for statistics."))),(0,o.kt)("li",{parentName:"ul"},"This request includes a unique instance id for your server."),(0,o.kt)("li",{parentName:"ul"},"If you do not wish to check for upgrades define the environment variable ",(0,o.kt)("inlineCode",{parentName:"li"},"CHECK_VERSION")," to anything else other than ",(0,o.kt)("inlineCode",{parentName:"li"},"true")," before starting, and Unleash won't make any calls",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"export CHECK_VERSION=false"))))))}d.isMDXComponent=!0}}]);