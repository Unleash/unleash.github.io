"use strict";(self.webpackChunkwebsitev_2=self.webpackChunkwebsitev_2||[]).push([[6351],{67622:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var a=n(87462),l=(n(67294),n(3905));const i={id:"python_sdk",title:"Python SDK"},o=void 0,s={unversionedId:"sdks/python_sdk",id:"sdks/python_sdk",title:"Python SDK",description:"You will need your API URL and your API token in order to connect the Client SDK to you Unleash instance. You can find this information in the \u201cAdmin\u201d section Unleash management UI. Read more",source:"@site/docs/sdks/python.md",sourceDirName:"sdks",slug:"/sdks/python_sdk",permalink:"/sdks/python_sdk",draft:!1,editUrl:"https://github.com/Unleash/unleash/edit/main/website/docs/sdks/python.md",tags:[],version:"current",frontMatter:{id:"python_sdk",title:"Python SDK"},sidebar:"documentation",previous:{title:"PHP SDK",permalink:"/sdks/php_sdk"},next:{title:"Ruby SDK",permalink:"/sdks/ruby_sdk"}},r={},u=[{value:"Checking if a feature is enabled",id:"checking-if-a-feature-is-enabled",level:2},{value:"Fallback function and default values",id:"fallback-function-and-default-values",level:3},{value:"Getting a variant",id:"getting-a-variant",level:2}],c={toc:u};function d(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"You will need your ",(0,l.kt)("inlineCode",{parentName:"p"},"API URL")," and your ",(0,l.kt)("inlineCode",{parentName:"p"},"API token")," in order to connect the Client SDK to you Unleash instance. You can find this information in the \u201cAdmin\u201d section Unleash management UI. ",(0,l.kt)("a",{parentName:"p",href:"../user_guide/api-token"},"Read more"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from UnleashClient import UnleashClient\n\nclient = UnleashClient(\n    url="<API url>",\n    app_name="my-python-app",\n    custom_headers={\'Authorization\': \'<API token>\'})\n\nclient.initialize_client()\n\nclient.is_enabled("unleash.beta.variants")\n')),(0,l.kt)("h2",{id:"checking-if-a-feature-is-enabled"},"Checking if a feature is enabled"),(0,l.kt)("p",null,"Check a feature's status:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-Python",metastring:'title="Check whether a feature is enabled"',title:'"Check',whether:!0,a:!0,feature:!0,is:!0,'enabled"':!0},'client.is_enabled("my_toggle")\n')),(0,l.kt)("p",null,"To supply application context, use the second positional argument:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-Python",metastring:'title="Check whether a feature is enabled for the given context"',title:'"Check',whether:!0,a:!0,feature:!0,is:!0,enabled:!0,for:!0,the:!0,given:!0,'context"':!0},'app_context = {"userId": "test@email.com"}\nclient.is_enabled("user_id_toggle", app_context)\n')),(0,l.kt)("h3",{id:"fallback-function-and-default-values"},"Fallback function and default values"),(0,l.kt)("p",null,"You can specify a fallback function for cases where the client doesn't recognize the toggle by using the ",(0,l.kt)("inlineCode",{parentName:"p"},"fallback_function")," keyword argument:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-Python",metastring:'title="Check a feature status, using a fallback if the feature is unrecognized."',title:'"Check',a:!0,feature:!0,"status,":!0,using:!0,fallback:!0,if:!0,the:!0,is:!0,'unrecognized."':!0},'def custom_fallback(feature_name: str, context: dict) -> bool:\n    return True\n\nclient.is_enabled("my_toggle", fallback_function=custom_fallback)\n')),(0,l.kt)("p",null,"You can also use the ",(0,l.kt)("inlineCode",{parentName:"p"},"fallback_function")," argument to replace the obsolete ",(0,l.kt)("inlineCode",{parentName:"p"},"default_value")," keyword argument by using a lambda that ignores its inputs. Whatever the lambda returns will be used as the default value."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-Python",metastring:'title="Use fallback_function to provide a default value"',title:'"Use',fallback_function:!0,to:!0,provide:!0,a:!0,default:!0,'value"':!0},'client.is_enabled("my_toggle", fallback_function=lambda feature_name, context: True)\n')),(0,l.kt)("p",null,"The fallback function ",(0,l.kt)("strong",{parentName:"p"},"must")," accept the feature name and context as positional arguments in that order."),(0,l.kt)("p",null,"The client will evaluate the fallback function only if an exception occurs when calling the ",(0,l.kt)("inlineCode",{parentName:"p"},"is_enabled()")," method. This happens when the client can't find the feature flag. The client ",(0,l.kt)("em",{parentName:"p"},"may")," also throw other, general exceptions."),(0,l.kt)("h2",{id:"getting-a-variant"},"Getting a variant"),(0,l.kt)("p",null,"Checking for a variant:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'context = {\'userId\': \'2\'}  # Context must have userId, sessionId, or remoteAddr.  If none are present, distribution will be random.\n\nvariant = client.get_variant("my_variant_toggle", context)\n\nprint(variant)\n> {\n>    "name": "variant1",\n>    "payload": {\n>        "type": "string",\n>        "value": "val1"\n>        },\n>    "enabled": True\n> }\n')),(0,l.kt)("p",null,"Read more at ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/Unleash/unleash-client-python"},"github.com/Unleash/unleash-client-python")))}d.isMDXComponent=!0}}]);