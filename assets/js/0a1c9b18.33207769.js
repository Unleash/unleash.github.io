"use strict";(self.webpackChunkwebsitev_2=self.webpackChunkwebsitev_2||[]).push([[1],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return h}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(n),h=r,m=d["".concat(s,".").concat(h)]||d[h]||p[h]||o;return n?a.createElement(m,l(l({ref:t},c),{},{components:n})):a.createElement(m,l({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var u=2;u<o;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8215:function(e,t,n){var a=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,r=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:r},t)}},3580:function(e,t,n){n.d(t,{Z:function(){return c}});var a=n(7462),r=n(7294),o=n(2389),l=n(6808),i=n(6010),s="tabItem_LplD";function u(e){var t,n,o,u=e.lazy,c=e.block,p=e.defaultValue,d=e.values,h=e.groupId,m=e.className,f=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=d?d:f.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),g=(0,l.lx)(v,(function(e,t){return e.value===t.value}));if(g.length>0)throw new Error('Docusaurus error: Duplicate values "'+g.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===p?p:null!=(t=null!=p?p:null==(n=f.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(o=f[0])?void 0:o.props.value;if(null!==k&&!v.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+v.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var b=(0,l.UB)(),w=b.tabGroupChoices,y=b.setTabGroupChoices,N=(0,r.useState)(k),U=N[0],x=N[1],C=[],T=(0,l.o5)().blockElementScrollPositionUntilNextRender;if(null!=h){var E=w[h];null!=E&&E!==U&&v.some((function(e){return e.value===E}))&&x(E)}var I=function(e){var t=e.currentTarget,n=C.indexOf(t),a=v[n].value;a!==U&&(T(t),x(a),null!=h&&y(h,a))},S=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a=C.indexOf(e.currentTarget)+1;n=C[a]||C[0];break;case"ArrowLeft":var r=C.indexOf(e.currentTarget)-1;n=C[r]||C[C.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":c},m)},v.map((function(e){var t=e.value,n=e.label,o=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:U===t?0:-1,"aria-selected":U===t,key:t,ref:function(e){return C.push(e)},onKeyDown:S,onFocus:I,onClick:I},o,{className:(0,i.Z)("tabs__item",s,null==o?void 0:o.className,{"tabs__item--active":U===t})}),null!=n?n:t)}))),u?(0,r.cloneElement)(f.filter((function(e){return e.props.value===U}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},f.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==U})}))))}function c(e){var t=(0,o.Z)();return r.createElement(u,(0,a.Z)({key:String(t)},e))}},289:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return u},metadata:function(){return p},toc:function(){return d}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),l=n(3580),i=n(8215),s=["components"],u={id:"dot_net_sdk",title:".NET SDK"},c=void 0,p={unversionedId:"sdks/dot_net_sdk",id:"sdks/dot_net_sdk",title:".NET SDK",description:"In this guide we explain how to use feature toggles in a .NET application using Unleash-hosted. We will be using the open source Unleash .net Client SDK.",source:"@site/docs/sdks/dot_net.md",sourceDirName:"sdks",slug:"/sdks/dot_net_sdk",permalink:"/sdks/dot_net_sdk",editUrl:"https://github.com/Unleash/unleash/edit/main/website/docs/sdks/dot_net.md",tags:[],version:"current",frontMatter:{id:"dot_net_sdk",title:".NET SDK"},sidebar:"documentation",previous:{title:"Ruby SDK",permalink:"/sdks/ruby_sdk"},next:{title:"Android Proxy SDK",permalink:"/sdks/android_proxy_sdk"}},d=[{value:"Step 1: Install client SDK",id:"step-1-install-client-sdk",children:[],level:2},{value:"Step 2: Create a new Unleash Instance",id:"step-2-create-a-new-unleash-instance",children:[],level:2},{value:"Step 3: Use the feature toggle",id:"step-3-use-the-feature-toggle",children:[],level:2},{value:"Step 4: Provide Unleash Context",id:"step-4-provide-unleash-context",children:[],level:2}],h={toc:d};function m(e){var t=e.components,n=(0,r.Z)(e,s);return(0,o.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"In this guide we explain how to use feature toggles in a .NET application using Unleash-hosted. We will be using the open source Unleash ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Unleash/unleash-client-dotnet"},".net Client SDK"),"."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"You will need your ",(0,o.kt)("inlineCode",{parentName:"p"},"API URL")," and your ",(0,o.kt)("inlineCode",{parentName:"p"},"API token")," in order to connect the Client SDK to you Unleash instance. You can find this information in the \u201cAdmin\u201d section Unleash management UI. ",(0,o.kt)("a",{parentName:"p",href:"../user_guide/api-token"},"Read more"))),(0,o.kt)("h2",{id:"step-1-install-client-sdk"},"Step 1: Install client SDK"),(0,o.kt)("p",null,"First we must add Unleash Client SDK as a dependency to your project. Below is an example of how you would add it via the .NET cli. Please see ",(0,o.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/Unleash.Client/"},"NuGet")," for other alternatives."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"dotnet add package unleash.client\n")),(0,o.kt)("h2",{id:"step-2-create-a-new-unleash-instance"},"Step 2: Create a new Unleash Instance"),(0,o.kt)("p",null,"Next we must initialize a new instance of the Unleash Client."),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Synchronous initialization")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"By default, the client SDK asynchronously fetches toggles from the Unleash API on initialization. This means it can take a few hundred milliseconds for the client to reach the correct state."),(0,o.kt)("p",{parentName:"div"},"You can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"synchronousInitialization")," option of the ",(0,o.kt)("inlineCode",{parentName:"p"},"UnleashClientFactory")," class's ",(0,o.kt)("inlineCode",{parentName:"p"},"CreateClientAsync"),' method to block the client until it has successfully synced with the server. See the following "synchronous initialization" code sample.'),(0,o.kt)("p",{parentName:"div"},"Read more about the ",(0,o.kt)("a",{parentName:"p",href:"https://www.getunleash.io/blog/our-unique-architecture"},"Unleash architecture")," to learn how it works."))),(0,o.kt)(l.Z,{mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"async",label:"Asynchronous initialization",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'var settings = new UnleashSettings()\n{\n  AppName = "dot-net-client",\n  Environment = "local",\n  UnleashApi = new Uri("API URL"),\n  CustomHttpHeaders = new Dictionary()\n  {\n    {"Authorization","API token" }\n  }\n};\n\nIUnleash unleash = new DefaultUnleash(settings);\n'))),(0,o.kt)(i.Z,{value:"sync",label:"Synchronous initializiation",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'var settings = new UnleashSettings()\n{\n  AppName = "dot-net-client",\n  Environment = "local",\n  UnleashApi = new Uri("API URL"),\n  CustomHttpHeaders = new Dictionary()\n  {\n    {"Authorization","API token" }\n  }\n};\n\nvar unleashFactory = new UnleashClientFactory();\n\n// this `unleash` will fetch feature toggles and write them to its cache before returning from the await call.\n// if network errors or disk permissions prevent this from happening, the await will throw an exception.\nIUnleash unleash = await unleashFactory.CreateClientAsync(settings, synchronousInitialization: true);\n')))),(0,o.kt)("p",null,"In your app you typically just want one instance of Unleash, and inject that where you need it."),(0,o.kt)("p",null,"You should change the URL and the Authorization header (API token) with the correct values for your instance, which you may locate under \u201cInstance admin\u201d in the menu."),(0,o.kt)("h2",{id:"step-3-use-the-feature-toggle"},"Step 3: Use the feature toggle"),(0,o.kt)("p",null,"Now that we have initialized the client SDK we can start using feature toggles defined in Unleash in our application. To achieve this we have the \u201cisEnabled\u201d method available, which will allow us to check the value of a feature toggle. This method will return true or false based on whether the feature should be enabled or disabled for the current request."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'if (unleash.IsEnabled("Demo"))\n{\n  //do some magic\n}\nelse\n{\n  //do old boring stuff\n}\n')),(0,o.kt)("h2",{id:"step-4-provide-unleash-context"},"Step 4: Provide Unleash Context"),(0,o.kt)("p",null,"It is the client SDK that computes whether a feature toggle should be considered enabled or disabled for specific use request. This is the job of the activation strategies, which are implemented in the client SDK."),(0,o.kt)("p",null,"The activation strategies is an implementation of rules based on data, which you provide as part of the Unleash Context."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"a) As argument to the isEnabled call")),(0,o.kt)("p",null,"The simplest way to provide the Unleash Context is as part of the \u201cisEnabled\u201d call:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'var context = new UnleashContext\n{\n  UserId = "61"\n};\n\nunleash.IsEnabled("someToggle", context);\n')),(0,o.kt)("p",null,"b) Via a UnleashContextProvider"),(0,o.kt)("p",null,"This is a bit more advanced approach, where you configure an unleash-context provider. By doing this, you do not have to rebuild or to pass the unleash-context object to every place you are calling ",(0,o.kt)("inlineCode",{parentName:"p"},"unleash.IsEnabled"),". You can read more, and get ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Unleash/unleash-client-dotnet#unleashcontextprovider"},"examples about this option on GitHub"),"."))}m.isMDXComponent=!0}}]);