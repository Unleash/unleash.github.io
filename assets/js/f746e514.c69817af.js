"use strict";(self.webpackChunkwebsitev_2=self.webpackChunkwebsitev_2||[]).push([[6587],{69446:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var a=t(87462),i=(t(67294),t(3905));const r={title:"ADR: Braking DB changes"},o=void 0,s={unversionedId:"contributing/ADRs/back-end/breaking-db-changes",id:"contributing/ADRs/back-end/breaking-db-changes",title:"ADR: Braking DB changes",description:"Background",source:"@site/docs/contributing/ADRs/back-end/breaking-db-changes.md",sourceDirName:"contributing/ADRs/back-end",slug:"/contributing/ADRs/back-end/breaking-db-changes",permalink:"/contributing/ADRs/back-end/breaking-db-changes",draft:!1,editUrl:"https://github.com/Unleash/unleash/edit/main/website/docs/contributing/ADRs/back-end/breaking-db-changes.md",tags:[],version:"current",frontMatter:{title:"ADR: Braking DB changes"},sidebar:"documentation",previous:{title:"ADR Overview",permalink:"/contributing/ADRs/"},next:{title:"ADR: Naming",permalink:"/contributing/ADRs/back-end/naming"}},l={},c=[{value:"Background",id:"background",level:2},{value:"Decision",id:"decision",level:2}],d={toc:c};function u(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"background"},"Background"),(0,i.kt)("p",null,"During the evolution of a feature different clients may use different version of code e.g. behind a feature flag.\nIf the code relies on breaking DB changes (column delete, table rename, deleting DB entries etc.) it may lead to errors."),(0,i.kt)("p",null,"The very same problem occurs when you apply a breaking migration just before the new version of the application starts e.g. during a zero-downtime deployment (whatever strategy you use).\nThe code is still running against the old schema as the migration takes a few seconds to apply."),(0,i.kt)("h2",{id:"decision"},"Decision"),(0,i.kt)("p",null,"First please make sure to avoid breaking DB changes in the first place if possible."),(0,i.kt)("p",null,'If breaking change is inevitable please use the "expand/contract" pattern. '),(0,i.kt)("p",null,'In the "expand phase":'),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"maintain old and new DB schema in parallel"),(0,i.kt)("li",{parentName:"ul"},"maintain code that works with old and new DB schema"),(0,i.kt)("li",{parentName:"ul"},"keep it for 2 minor releases to give all clients a chance to upgrade the code"),(0,i.kt)("li",{parentName:"ul"},"with a fallback of 2 version we can also downgrade in this range without running down migrations")),(0,i.kt)("p",null,'In the "contract phase":'),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"remove the old schema when you know that no client is using the old version")),(0,i.kt)("p",null,"Action for a code reviewer:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"when you spot a migration with ",(0,i.kt)("inlineCode",{parentName:"li"},"ALTER table DROP COLUMN")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"ALTER table RENAME TO"),' please raise a flag if the "expand phase" was missed')))}u.isMDXComponent=!0}}]);