"use strict";(self.webpackChunkwebsitev_2=self.webpackChunkwebsitev_2||[]).push([[625],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return d}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),u=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),g=u(a),d=r,f=g["".concat(o,".").concat(d)]||g[d]||m[d]||l;return a?n.createElement(f,s(s({ref:t},p),{},{components:a})):n.createElement(f,s({ref:t},p))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,s=new Array(l);s[0]=g;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var u=2;u<l;u++)s[u]=a[u];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},1061:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return i},contentTitle:function(){return o},metadata:function(){return u},toc:function(){return p},default:function(){return g}});var n=a(7462),r=a(3366),l=(a(7294),a(3905)),s=["components"],i={id:"features",title:"/api/admin/features"},o=void 0,u={unversionedId:"api/admin/features",id:"api/admin/features",title:"/api/admin/features",description:"In order to access the admin API endpoints you need to identify yourself. Unless you're using the none authentication method, you'll need to create an ADMIN token and add an Authorization header using the token.",source:"@site/docs/api/admin/feature-toggles-api.md",sourceDirName:"api/admin",slug:"/api/admin/features",permalink:"/api/admin/features",editUrl:"https://github.com/Unleash/unleash/edit/main/website/docs/api/admin/feature-toggles-api.md",tags:[],version:"current",frontMatter:{id:"features",title:"/api/admin/features"},sidebar:"documentation",previous:{title:"/api/admin/feature-types",permalink:"/api/admin/feature-types"},next:{title:"/api/admin/archive",permalink:"/api/admin/features-archive"}},p=[{value:"Fetching Feature Toggles",id:"fetching-feature-toggles",children:[{value:"Filter feature toggles",id:"filter-feature-toggles",children:[],level:4}],level:3},{value:"Fetch specific feature toggle",id:"fetch-specific-feature-toggle",children:[],level:3},{value:"Create a new Feature Toggle",id:"create-a-new-feature-toggle",children:[],level:3},{value:"Update a Feature Toggle",id:"update-a-feature-toggle",children:[],level:3},{value:"Tag a Feature Toggle",id:"tag-a-feature-toggle",children:[],level:3},{value:"Remove a tag from a Feature Toggle",id:"remove-a-tag-from-a-feature-toggle",children:[],level:3},{value:"Archive a Feature Toggle",id:"archive-a-feature-toggle",children:[],level:3},{value:"Enable a Feature Toggle",id:"enable-a-feature-toggle",children:[],level:3},{value:"Disable a Feature Toggle",id:"disable-a-feature-toggle",children:[],level:3},{value:"Mark a Feature Toggle as &quot;stale&quot;",id:"mark-a-feature-toggle-as-stale",children:[],level:3},{value:"Mark a Feature Toggle as &quot;active&quot;",id:"mark-a-feature-toggle-as-active",children:[],level:3}],m={toc:p};function g(e){var t=e.components,a=(0,r.Z)(e,s);return(0,l.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"In order to access the admin API endpoints you need to identify yourself. Unless you're using the ",(0,l.kt)("inlineCode",{parentName:"p"},"none")," authentication method, you'll need to ",(0,l.kt)("a",{parentName:"p",href:"/user_guide/api-token"},"create an ADMIN token")," and add an Authorization header using the token.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"This API was deprecated as part of the v4.3 release and will be removed in v5.0. See ",(0,l.kt)("a",{parentName:"strong",href:"/api/admin/feature-toggles-v2"},"/api/admin/projects/:projectId")," instead.")),(0,l.kt)("h3",{id:"fetching-feature-toggles"},"Fetching Feature Toggles"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"GET: http://unleash.host.com/api/admin/features")),(0,l.kt)("p",null,"This endpoint is the one all admin ui should use to fetch all available feature toggles from the ",(0,l.kt)("em",{parentName:"p"},"unleash-server"),". The response returns all active feature toggles and their current strategy configuration. A feature toggle will have ",(0,l.kt)("em",{parentName:"p"},"at least")," one configured strategy. A strategy will have a ",(0,l.kt)("inlineCode",{parentName:"p"},"name")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"parameters")," map."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example response:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "version": 2,\n  "features": [\n    {\n      "name": "Feature.A",\n      "description": "lorem ipsum",\n      "type": "release",\n      "enabled": false,\n      "stale": false,\n      "strategies": [\n        {\n          "name": "default",\n          "parameters": {}\n        }\n      ],\n      "variants": [\n        {\n          "name": "variant1",\n          "weight": 50\n        },\n        {\n          "name": "variant2",\n          "weight": 50\n        }\n      ],\n      "tags": [\n        {\n          "id": 1,\n          "type": "simple",\n          "value": "TeamRed"\n        }\n      ]\n    },\n    {\n      "name": "Feature.B",\n      "description": "lorem ipsum",\n      "enabled": true,\n      "stale": false,\n      "strategies": [\n        {\n          "name": "ActiveForUserWithId",\n          "parameters": {\n            "userIdList": "123,221,998"\n          }\n        },\n        {\n          "name": "GradualRolloutRandom",\n          "parameters": {\n            "percentage": "10"\n          }\n        }\n      ],\n      "variants": [],\n      "tags": []\n    }\n  ]\n}\n')),(0,l.kt)("h4",{id:"filter-feature-toggles"},"Filter feature toggles"),(0,l.kt)("p",null,"Supports three params for now"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"tag")," - filters for features tagged with tag"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"project")," - filters for features belonging to project"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"namePrefix")," - filters for features beginning with prefix")),(0,l.kt)("p",null,"For ",(0,l.kt)("inlineCode",{parentName:"p"},"tag")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"project")," performs OR filtering if multiple arguments"),(0,l.kt)("p",null,"To filter for any feature tagged with a ",(0,l.kt)("inlineCode",{parentName:"p"},"simple")," tag with value ",(0,l.kt)("inlineCode",{parentName:"p"},"taga")," or a ",(0,l.kt)("inlineCode",{parentName:"p"},"simple")," tag with value ",(0,l.kt)("inlineCode",{parentName:"p"},"tagb")," use"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"GET https://unleash.host.com/api/admin/features?tag[]=simple:taga&tag[]simple:tagb")),(0,l.kt)("p",null,"To filter for any feature belonging to project ",(0,l.kt)("inlineCode",{parentName:"p"},"myproject")," use"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"GET https://unleash.host.com/api/admin/features?project=myproject")),(0,l.kt)("p",null,"Response format is the same as ",(0,l.kt)("inlineCode",{parentName:"p"},"api/admin/features")),(0,l.kt)("h3",{id:"fetch-specific-feature-toggle"},"Fetch specific feature toggle"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"GET: http://unleash.host.com/api/admin/features/:featureName")),(0,l.kt)("p",null,"Used to fetch details about a specific featureToggle. This is mostly provded to make it easy to debug the API and should not be used by the client implementations."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "Feature.A",\n  "description": "lorem ipsum..",\n  "type": "release",\n  "enabled": false,\n  "stale": false,\n  "strategies": [\n    {\n      "name": "default",\n      "parameters": {}\n    }\n  ],\n  "variants": [],\n  "tags": []\n}\n')),(0,l.kt)("h3",{id:"create-a-new-feature-toggle"},"Create a new Feature Toggle"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"POST: http://unleash.host.com/api/admin/features/")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Body:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "Feature.A",\n  "description": "lorem ipsum..",\n  "type": "release",\n  "enabled": false,\n  "stale": false,\n  "strategies": [\n    {\n      "name": "default",\n      "parameters": {}\n    }\n  ]\n}\n')),(0,l.kt)("p",null,"Used by the admin-dashboard to create a new feature toggles."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Notes:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"name")," ",(0,l.kt)("strong",{parentName:"li"},"must be globally unique"),", otherwise you will get a ",(0,l.kt)("em",{parentName:"li"},"403-response"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"type")," is optional. If not defined it defaults to ",(0,l.kt)("inlineCode",{parentName:"li"},"release"))),(0,l.kt)("p",null,"Returns 200-response if the feature toggle was created successfully."),(0,l.kt)("h3",{id:"update-a-feature-toggle"},"Update a Feature Toggle"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"PUT: http://unleash.host.com/api/admin/features/:toggleName")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Body:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "Feature.A",\n  "description": "lorem ipsum..",\n  "type": "release",\n  "enabled": false,\n  "stale": false,\n  "strategies": [\n    {\n      "name": "default",\n      "parameters": {}\n    }\n  ],\n  "variants": []\n}\n')),(0,l.kt)("p",null,"Used by the admin dashboard to update a feature toggles. The name has to match an existing features toggle."),(0,l.kt)("p",null,"Returns 200-response if the feature toggle was updated successfully."),(0,l.kt)("h3",{id:"tag-a-feature-toggle"},"Tag a Feature Toggle"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"POST https://unleash.host.com/api/admin/features/:featureName/tags")),(0,l.kt)("p",null,"Used to tag a feature"),(0,l.kt)("p",null,"If the tuple (type, value) does not already exist, it will be added to the list of tags. Then Unleash will add a relation between the feature name and the tag."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Body:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "type": "simple",\n  "value": "Team-Green"\n}\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Success")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"- Returns _201-CREATED_ if the feature was tagged successfully\n- Creates the tag if needed, then connects the tag to the existing feature\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Failures")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"- Returns _404-NOT-FOUND_ if the `type` was not found\n")),(0,l.kt)("h3",{id:"remove-a-tag-from-a-feature-toggle"},"Remove a tag from a Feature Toggle"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"DELETE https://unleash.host.com/api/admin/features/:featureName/tags/:type/:value")),(0,l.kt)("p",null,"Removes the specified tag from the ",(0,l.kt)("inlineCode",{parentName:"p"},"(type, value)")," tuple from the Feature Toggle's list of tags."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Success")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"- Returns _200-OK_\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Failures")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"- Returns 404 if the tag does not exist\n- Returns 500 if the database could not be reached\n")),(0,l.kt)("h3",{id:"archive-a-feature-toggle"},"Archive a Feature Toggle"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"DELETE: http://unleash.host.com/api/admin/features/:toggleName")),(0,l.kt)("p",null,"Used to archive a feature toggle. A feature toggle can never be totally be deleted, but can be archived. This is a design decision to make sure that a old feature toggle does not suddenly reappear because someone else is re-using the same name."),(0,l.kt)("h3",{id:"enable-a-feature-toggle"},"Enable a Feature Toggle"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"POST: http://unleash.host.com/api/admin/features/:featureName/toggle/on")),(0,l.kt)("p",null,"Used to enable a feature toggle. The :featureName must match an existing Feature Toggle. Returns 200-response if the feature toggle was enabled successfully."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Body")),(0,l.kt)("p",null,"None"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example response:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "Feature.A",\n  "description": "lorem ipsum..",\n  "type": "release",\n  "enabled": true,\n  "strategies": [\n    {\n      "name": "default",\n      "parameters": {}\n    }\n  ],\n  "variants": [],\n  "tags": []\n}\n')),(0,l.kt)("h3",{id:"disable-a-feature-toggle"},"Disable a Feature Toggle"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"POST: http://unleash.host.com/api/admin/features/:featureName/toggle/off")),(0,l.kt)("p",null,"Used to disable a feature toggle. The :featureName must match an existing Feature Toggle. Returns 200-response if the feature toggle was disabled successfully."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Body")),(0,l.kt)("p",null,"None"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example response:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "Feature.A",\n  "description": "lorem ipsum..",\n  "type": "release",\n  "enabled": false,\n  "stale": false,\n  "strategies": [\n    {\n      "name": "default",\n      "parameters": {}\n    }\n  ],\n  "variants": [],\n  "tags": []\n}\n')),(0,l.kt)("h3",{id:"mark-a-feature-toggle-as-stale"},'Mark a Feature Toggle as "stale"'),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"POST: http://unleash.host.com/api/admin/features/:featureName/stale/on")),(0,l.kt)("p",null,"Used to mark a feature toggle as stale (deprecated). The :featureName must match an existing Feature Toggle. Returns 200-response if the feature toggle was enabled successfully."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Body")),(0,l.kt)("p",null,"None"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example response:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "Feature.A",\n  "description": "lorem ipsum..",\n  "type": "release",\n  "enabled": true,\n  "stale": true,\n  "strategies": [\n    {\n      "name": "default",\n      "parameters": {}\n    }\n  ],\n  "variants": [],\n  "tags": []\n}\n')),(0,l.kt)("h3",{id:"mark-a-feature-toggle-as-active"},'Mark a Feature Toggle as "active"'),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"POST: http://unleash.host.com/api/admin/features/:featureName/stale/off")),(0,l.kt)("p",null,"Used to mark a feature toggle active (remove stale marking). The :featureName must match an existing Feature Toggle. Returns 200-response if the feature toggle was disabled successfully."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Body")),(0,l.kt)("p",null,"None"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example response:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "Feature.A",\n  "description": "lorem ipsum..",\n  "type": "release",\n  "enabled": false,\n  "stale": false,\n  "strategies": [\n    {\n      "name": "default",\n      "parameters": {}\n    }\n  ],\n  "variants": [],\n  "tags": []\n}\n')))}g.isMDXComponent=!0}}]);