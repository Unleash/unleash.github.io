"use strict";(self.webpackChunkwebsitev_2=self.webpackChunkwebsitev_2||[]).push([[712],{74124:(e,t,n)=>{n.d(t,{Z:()=>d});var a=n(87462),r=n(67294),o=n(86010),l=n(5730),s=n(20636),i=n(76602),p=n(63735);const u="tabList__CuJ",c="tabItem_LNqP";function m(e){var t;const{lazy:n,block:l,defaultValue:m,values:d,groupId:h,className:k}=e,f=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),v=d??f.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),g=(0,s.l)(v,((e,t)=>e.value===t.value));if(g.length>0)throw new Error(`Docusaurus error: Duplicate values "${g.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const y=null===m?m:m??(null==(t=f.find((e=>e.props.default)))?void 0:t.props.value)??f[0].props.value;if(null!==y&&!v.some((e=>e.value===y)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${y}" but none of its children has the corresponding value. Available values are: ${v.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:b,setTabGroupChoices:N}=(0,i.U)(),[x,w]=(0,r.useState)(y),T=[],{blockElementScrollPositionUntilNextRender:C}=(0,p.o5)();if(null!=h){const e=b[h];null!=e&&e!==x&&v.some((t=>t.value===e))&&w(e)}const I=e=>{const t=e.currentTarget,n=T.indexOf(t),a=v[n].value;a!==x&&(C(t),w(a),null!=h&&N(h,String(a)))},E=e=>{var t;let n=null;switch(e.key){case"Enter":I(e);break;case"ArrowRight":{const t=T.indexOf(e.currentTarget)+1;n=T[t]??T[0];break}case"ArrowLeft":{const t=T.indexOf(e.currentTarget)-1;n=T[t]??T[T.length-1];break}}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,o.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":l},k)},v.map((e=>{let{value:t,label:n,attributes:l}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:x===t?0:-1,"aria-selected":x===t,key:t,ref:e=>T.push(e),onKeyDown:E,onClick:I},l,{className:(0,o.Z)("tabs__item",c,null==l?void 0:l.className,{"tabs__item--active":x===t})}),n??t)}))),n?(0,r.cloneElement)(f.filter((e=>e.props.value===x))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==x})))))}function d(e){const t=(0,l.Z)();return r.createElement(m,(0,a.Z)({key:String(t)},e))}},34167:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>p,toc:()=>c});var a=n(87462),r=(n(67294),n(3905)),o=n(74124),l=n(11666);const s={title:"React Proxy SDK"},i=void 0,p={unversionedId:"reference/sdks/react",id:"reference/sdks/react",title:"React Proxy SDK",description:"This library can be used with the Unleash Proxy or with the Unleash front-end API. It is not compatible with the regular Unleash client API.",source:"@site/docs/reference/sdks/react.md",sourceDirName:"reference/sdks",slug:"/reference/sdks/react",permalink:"/reference/sdks/react",draft:!1,editUrl:"https://github.com/Unleash/unleash/edit/main/website/docs/reference/sdks/react.md",tags:[],version:"current",frontMatter:{title:"React Proxy SDK"},sidebar:"documentation",previous:{title:"JavaScript Proxy SDK",permalink:"/reference/sdks/javascript-browser"},next:{title:"Svelte Proxy SDK",permalink:"/reference/sdks/svelte"}},u={},c=[{value:"Installation",id:"installation",level:2},{value:"Initialization",id:"initialization",level:2},{value:"How to check feature toggle states",id:"how-to-check-feature-toggle-states",level:2},{value:"How to update the Unleash Context",id:"how-to-update-the-unleash-context",level:2}],m={toc:c};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This library can be used with the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Unleash/unleash-proxy"},"Unleash Proxy")," or with the ",(0,r.kt)("a",{parentName:"p",href:"/reference/front-end-api"},"Unleash front-end API"),". It is ",(0,r.kt)("em",{parentName:"p"},"not")," compatible with the regular Unleash client API."),(0,r.kt)("p",null,"For more detailed information, check out the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Unleash/proxy-client-react"},"React Proxy SDK on GitHub"),"."),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"Install the React proxy client and the ",(0,r.kt)("a",{parentName:"p",href:"/reference/sdks/javascript-browser"},"JavaScript proxy client")," packages:"),(0,r.kt)(o.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"npm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"npm install @unleash/proxy-client-react unleash-proxy-client\n"))),(0,r.kt)(l.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"yarn add @unleash/proxy-client-react unleash-proxy-client\n")))),(0,r.kt)("h2",{id:"initialization"},"Initialization"),(0,r.kt)("p",null,"The snippet below shows you how to initialize the client. We recommend that you do this in your entry point file (typically index.js/ts) to ensure that you only have ",(0,r.kt)("em",{parentName:"p"},"one")," instance of it."),(0,r.kt)("p",null,"The configuration variables are:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"url"))),(0,r.kt)("p",{parentName:"li"},"Your proxy's URL or the Unleash front-end API endpoint (",(0,r.kt)("inlineCode",{parentName:"p"},"<unleash-url>/api/frontend"),").")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"clientKey"))),(0,r.kt)("p",{parentName:"li"},"One of your proxy's ",(0,r.kt)("a",{parentName:"p",href:"/reference/unleash-proxy#configuration-variables"},"designated client keys (also known as proxy secrets)"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"refreshInterval"))),(0,r.kt)("p",{parentName:"li"},"How often (in seconds) the client should poll the proxy for updates.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"appName"))),(0,r.kt)("p",{parentName:"li"},"The name of your application. It's only used for identifying your application and can be whatever you want it to be.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"environment"))),(0,r.kt)("p",{parentName:"li"},"The environment that your application runs in. This corresponds to the environment field in ",(0,r.kt)("a",{parentName:"p",href:"/reference/unleash-context"},"the Unleash Context"),". Note that this is separate from the newer ",(0,r.kt)("a",{parentName:"p",href:"/reference/environments"},"Environments feature"),"."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { FlagProvider } from '@unleash/proxy-client-react';\n\nconst config = {\n  url: 'https://PROXY_HOSTNAME/api/proxy', // or https://UNLEASH_HOSTNAME/api/frontend\n  clientKey: 'PROXYKEY',\n  refreshInterval: 15,\n  appName: 'your-app-name',\n  environment: 'dev',\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <FlagProvider config={config}>\n      <App />\n    </FlagProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n")),(0,r.kt)("h2",{id:"how-to-check-feature-toggle-states"},"How to check feature toggle states"),(0,r.kt)("p",null,"To check if a feature is enabled:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { useFlag } from '@unleash/proxy-client-react';\n\nconst TestComponent = () => {\n  const enabled = useFlag('travel.landing');\n\n  if (enabled) {\n    return <SomeComponent />;\n  }\n  return <AnotherComponent />;\n};\n\nexport default TestComponent;\n")),(0,r.kt)("p",null,"To check variants:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { useVariant } from '@unleash/proxy-client-react';\n\nconst TestComponent = () => {\n  const variant = useVariant('travel.landing');\n\n  if (variant.enabled && variant.name === 'SomeComponent') {\n    return <SomeComponent />;\n  } else if (variant.enabled && variant.name === 'AnotherComponent') {\n    return <AnotherComponent />;\n  }\n  return <DefaultComponent />;\n};\n\nexport default TestComponent;\n")),(0,r.kt)("h2",{id:"how-to-update-the-unleash-context"},"How to update the Unleash Context"),(0,r.kt)("p",null,"Follow the following steps in order to update the unleash context:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { useUnleashContext, useFlag } from '@unleash/proxy-client-react';\n\nconst MyComponent = ({ userId }) => {\n  const variant = useFlag('my-toggle');\n  const updateContext = useUnleashContext();\n\n  useEffect(() => {\n    // context is updated with userId\n    updateContext({ userId });\n  }, []);\n};\n")))}d.isMDXComponent=!0}}]);