"use strict";(self.webpackChunkwebsitev_2=self.webpackChunkwebsitev_2||[]).push([[5806],{28403:(e,n,t)=>{t.d(n,{Z:()=>d});var a=t(87462),o=t(67294),l=t(86010),i=t(72389),r=t(67392),s=t(7094),p=t(12466);const h="tabList__CuJ",u="tabItem_LNqP";function c(e){var n,t;const{lazy:i,block:c,defaultValue:d,values:m,groupId:b,className:v}=e,g=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=m?m:g.map((e=>{let{props:{value:n,label:t,attributes:a}}=e;return{value:n,label:t,attributes:a}})),k=(0,r.l)(f,((e,n)=>e.value===n.value));if(k.length>0)throw new Error('Docusaurus error: Duplicate values "'+k.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const y=null===d?d:null!=(n=null!=d?d:null==(t=g.find((e=>e.props.default)))?void 0:t.props.value)?n:g[0].props.value;if(null!==y&&!f.some((e=>e.value===y)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+f.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:w,setTabGroupChoices:I}=(0,s.U)(),[A,x]=(0,o.useState)(y),N=[],{blockElementScrollPositionUntilNextRender:O}=(0,p.o5)();if(null!=b){const e=w[b];null!=e&&e!==A&&f.some((n=>n.value===e))&&x(e)}const U=e=>{const n=e.currentTarget,t=N.indexOf(n),a=f[t].value;a!==A&&(O(n),x(a),null!=b&&I(b,String(a)))},P=e=>{var n;let t=null;switch(e.key){case"ArrowRight":{var a;const n=N.indexOf(e.currentTarget)+1;t=null!=(a=N[n])?a:N[0];break}case"ArrowLeft":{var o;const n=N.indexOf(e.currentTarget)-1;t=null!=(o=N[n])?o:N[N.length-1];break}}null==(n=t)||n.focus()};return o.createElement("div",{className:(0,l.Z)("tabs-container",h)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":c},v)},f.map((e=>{let{value:n,label:t,attributes:i}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:A===n?0:-1,"aria-selected":A===n,key:n,ref:e=>N.push(e),onKeyDown:P,onFocus:U,onClick:U},i,{className:(0,l.Z)("tabs__item",u,null==i?void 0:i.className,{"tabs__item--active":A===n})}),null!=t?t:n)}))),i?(0,o.cloneElement)(g.filter((e=>e.props.value===A))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},g.map(((e,n)=>(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==A})))))}function d(e){const n=(0,i.Z)();return o.createElement(c,(0,a.Z)({key:String(n)},e))}},9709:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>p,toc:()=>u});var a=t(87462),o=(t(67294),t(3905)),l=t(28403),i=t(72905);const r={title:"How to enable OpenAPI and the Swagger UI"},s=void 0,p={unversionedId:"how-to/how-to-enable-openapi",id:"how-to/how-to-enable-openapi",title:"How to enable OpenAPI and the Swagger UI",description:"OpenAPI schemas were introduced in v4.13.0 of Unleash and v0.10.0 of the Unleash proxy.",source:"@site/docs/how-to/how-to-enable-openapi.mdx",sourceDirName:"how-to",slug:"/how-to/how-to-enable-openapi",permalink:"/how-to/how-to-enable-openapi",draft:!1,editUrl:"https://github.com/Unleash/unleash/edit/main/website/docs/how-to/how-to-enable-openapi.mdx",tags:[],version:"current",frontMatter:{title:"How to enable OpenAPI and the Swagger UI"},sidebar:"documentation",previous:{title:"How to use the Admin API",permalink:"/advanced/api_access"},next:{title:"Unleash Proxy guides",permalink:"/how-to/proxy"}},h={},u=[{value:"Location of the OpenAPI spec",id:"location-of-the-openapi-spec",level:2},{value:"Step 1: enable OpenAPI",id:"step-1-enable-openapi",level:2},{value:"Enable OpenAPI via environment variables",id:"enable-openapi-via-environment-variables",level:3},{value:"Enable OpenAPI via configuration options",id:"enable-openapi-via-configuration-options",level:3}],c={toc:u};function d(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{title:"Availability",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"OpenAPI schemas were introduced in v4.13.0 of Unleash and v0.10.0 of the Unleash proxy.")),(0,o.kt)("p",null,"Both Unleash and the Unleash proxy have included OpenAPI schemas and Swagger UIs for their APIs. The schemas can be used to get an overview over all API operations and to generate API clients using OpenAPI client generators. The Swagger UI lets you see and try out all the available API operations directly in your browser."),(0,o.kt)("p",null,"To enable the OpenAPI documentation and the Swagger UI, you must start Unleash or the proxy with the correct configuration option. The following section shows you how. The methods are the same for both Unleash and the Unleash proxy, so the steps described in the next section will work for either."),(0,o.kt)("h2",{id:"location-of-the-openapi-spec"},"Location of the OpenAPI spec"),(0,o.kt)("p",null,"Once you enable OpenAPI, you can find the specification in JSON format at ",(0,o.kt)("inlineCode",{parentName:"p"},"/docs/openapi.json")," and the swagger UI at ",(0,o.kt)("inlineCode",{parentName:"p"},"/docs/openapi"),"."),(0,o.kt)("p",null,"For instance, if you're running the Unleash server locally at ",(0,o.kt)("inlineCode",{parentName:"p"},"http://localhost:4242"),", then"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"the JSON specification will be at ",(0,o.kt)("inlineCode",{parentName:"li"},"http://localhost:4242/docs/openapi.json")),(0,o.kt)("li",{parentName:"ul"},"the Swagger UI will be at ",(0,o.kt)("inlineCode",{parentName:"li"},"http://localhost:4242/docs/openapi"))),(0,o.kt)("p",null,"Similarly, if you're running the Unleash proxy locally at ",(0,o.kt)("inlineCode",{parentName:"p"},"http://localhost:3000")," (so that the proxy endpoint is at ",(0,o.kt)("inlineCode",{parentName:"p"},"http://localhost:3000/proxy"),"), then"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"the JSON specification will be at ",(0,o.kt)("inlineCode",{parentName:"li"},"http://localhost:3000/docs/openapi.json")),(0,o.kt)("li",{parentName:"ul"},"the Swagger UI will be at ",(0,o.kt)("inlineCode",{parentName:"li"},"http://localhost:3000/docs/openapi"))),(0,o.kt)("h2",{id:"step-1-enable-openapi"},"Step 1: enable OpenAPI"),(0,o.kt)("p",null,"The OpenAPI spec and the Swagger UI can be turned on either via environment variables or via configuration options. Configuration options take precedence over environment variables."),(0,o.kt)("h3",{id:"enable-openapi-via-environment-variables"},"Enable OpenAPI via environment variables"),(0,o.kt)("p",null,"To turn on OpenAPI via environment variables, set the ",(0,o.kt)("inlineCode",{parentName:"p"},"ENABLE_OAS")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," in the environment you're running the server in."),(0,o.kt)(l.Z,{groupId:"openapi-env-configuration",mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"bash",label:"Environment variable (bash)",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Enable OpenAPI via an environment variable"',title:'"Enable',OpenAPI:!0,via:!0,an:!0,environment:!0,'variable"':!0},"export ENABLE_OAS=true\n"))),(0,o.kt)(i.Z,{value:"docker-unleash",label:"Docker (Unleash)",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Enable OpenAPI for Unleash via Docker"',title:'"Enable',OpenAPI:!0,for:!0,Unleash:!0,via:!0,'Docker"':!0},"docker run \\\n    // highlight-next-line\n    -e ENABLE_OAS=true \\ # other variables omitted for brevity\n    unleashorg/unleash-server\n"))),(0,o.kt)(i.Z,{value:"docker-proxy",label:"Docker (Unleash proxy)",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Enable OpenAPI for the Unleash proxy via Docker"',title:'"Enable',OpenAPI:!0,for:!0,the:!0,Unleash:!0,proxy:!0,via:!0,'Docker"':!0},"docker run \\\n    // highlight-next-line\n    -e ENABLE_OAS=true \\ # other variables omitted for brevity\n    unleashorg/unleash-proxy\n")))),(0,o.kt)("h3",{id:"enable-openapi-via-configuration-options"},"Enable OpenAPI via configuration options"),(0,o.kt)("p",null,"The configuration option for enabling OpenAPI and the swagger UI is ",(0,o.kt)("inlineCode",{parentName:"p"},"enableOAS"),". Set this option to ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,o.kt)("p",null,"The following examples have been shortened to show the only the relevant configuration options. For more detailed instructions on how to run Unleash or the proxy, refer to ",(0,o.kt)("a",{parentName:"p",href:"/how-to/how-to-run-the-unleash-proxy"},"how to run the Unleash proxy")," or the ",(0,o.kt)("a",{parentName:"p",href:"/deploy/getting_started#option-three---from-nodejs"},"section on running Unleash via Node.js from the deployment section")," of the documentation."),(0,o.kt)(l.Z,{groupId:"openapi-configuration",mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"unleash",label:"Unleash",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Enable OpenAPI for Unleash via configuration option"',title:'"Enable',OpenAPI:!0,for:!0,Unleash:!0,via:!0,configuration:!0,'option"':!0},"const unleash = require('unleash-server');\n\nunleash\n    .start({\n        // ... Other options elided for brevity\n        // highlight-next-line\n        enableOAS: true,\n    })\n    .then((unleash) => {\n        console.log(\n            `Unleash started on http://localhost:${unleash.app.get('port')}`,\n        );\n    });\n"))),(0,o.kt)(i.Z,{value:"proxy",label:"Unleash proxy",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Enable OpenAPI for the Unleash proxy via configuration"',title:'"Enable',OpenAPI:!0,for:!0,the:!0,Unleash:!0,proxy:!0,via:!0,'configuration"':!0},"const port = 3000;\n\nconst { createApp } = require('@unleash/proxy');\n\nconst app = createApp({\n    // ... Other options elided for brevity\n    // highlight-next-line\n    enableOAS: true,\n});\n\napp.listen(port, () =>\n    console.log(`Unleash Proxy listening on http://localhost:${port}/proxy`),\n);\n")))))}d.isMDXComponent=!0}}]);