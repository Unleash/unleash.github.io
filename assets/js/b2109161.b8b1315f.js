"use strict";(self.webpackChunkwebsitev_2=self.webpackChunkwebsitev_2||[]).push([[15004],{15111:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>y,contentTitle:()=>u,default:()=>k,frontMatter:()=>h,metadata:()=>f,toc:()=>g});var n=a(87462),s=(a(67294),a(3905)),i=a(80334),r=(a(11032),a(46062)),o=a(57138),d=a(21439),l=(a(9531),a(15761)),p=a(73418),m=a(92414),c=a(30433);const h={id:"get-addons",title:"Get all addons and providers",description:"Retrieve all addons and providers that are defined on this Unleash instance.",sidebar_label:"Get all addons and providers",hide_title:!0,hide_table_of_contents:!0,api:{description:"Retrieve all addons and providers that are defined on this Unleash instance.",tags:["Addons"],operationId:"getAddons",responses:{200:{description:"addonsSchema",content:{"application/json":{schema:{type:"object",required:["addons","providers"],description:"An object containing two things:\n1. A list of all [addons](https://docs.getunleash.io/reference/addons) defined on this Unleash instance\n2. A list of all addon providers defined on this instance",properties:{addons:{type:"array",description:"All the addons that exist on this instance of Unleash.",items:{type:"object",description:"An [addon](https://docs.getunleash.io/reference/addons) instance description. Contains data about what kind of provider it uses, whether it's enabled or not, what events it listens for, and more.",required:["id","description","provider","enabled","parameters","events"],properties:{id:{type:"integer",minimum:1,example:27,description:"The addon's unique identifier."},provider:{type:"string",description:'The addon provider, such as "webhook" or "slack".',example:"webhook"},description:{type:"string",description:"A description of the addon. `null` if no description exists.",example:"This addon posts updates to our internal feature tracking system whenever a feature is created or updated.",nullable:!0},enabled:{type:"boolean",description:"Whether the addon is enabled or not."},parameters:{type:"object",additionalProperties:{},example:{url:"http://localhost:4242/webhook"},description:"Parameters for the addon provider. This object has different required and optional properties depending on the provider you choose."},events:{type:"array",description:"The event types that trigger this specific addon.",items:{type:"string"},example:["feature-created","feature-updated"]},projects:{type:"array",description:"The projects that this addon listens to events from. An empty list means it listens to events from **all** projects.",example:["new-landing-project","signups-v2"],items:{type:"string"}},environments:{type:"array",description:"The list of environments that this addon listens to events from. An empty list means it listens to events from **all** environments.",example:["development","production"],items:{type:"string"}}},title:"addonSchema"}},providers:{type:"array",description:"A list of  all available addon providers, along with their parameters and descriptions.",example:[{name:"webhook",displayName:"Webhook",description:"A Webhook is a generic way to post messages from Unleash to third party services.",documentationUrl:"https://docs.getunleash.io/docs/addons/webhook",parameters:[{name:"url",displayName:"Webhook URL",description:"(Required) Unleash will perform a HTTP Post to the specified URL (one retry if first attempt fails)",type:"url",required:!0,sensitive:!0},{name:"contentType",displayName:"Content-Type",placeholder:"application/json",description:'(Optional) The Content-Type header to use. Defaults to "application/json".',type:"text",required:!1,sensitive:!1},{name:"authorization",displayName:"Authorization",placeholder:"",description:"(Optional) The Authorization header to use. Not used if left blank.",type:"text",required:!1,sensitive:!0},{name:"bodyTemplate",displayName:"Body template",placeholder:'{\n  "event": "{{event.type}}",\n  "createdBy": "{{event.createdBy}}",\n  "featureToggle": "{{event.data.name}}",\n  "timestamp": "{{event.data.createdAt}}"\n}',description:"(Optional) You may format the body using a mustache template. If you don't specify anything, the format will similar to the events format (https://docs.getunleash.io/reference/api/legacy/unleash/admin/events)",type:"textfield",required:!1,sensitive:!1}],events:["feature-created","feature-updated","feature-archived","feature-revived","feature-stale-on","feature-stale-off","feature-environment-enabled","feature-environment-disabled","feature-strategy-remove","feature-strategy-update","feature-strategy-add","feature-metadata-updated","feature-variants-updated","feature-project-change","feature-tagged","feature-untagged","change-request-created","change-request-discarded","change-added","change-discarded","change-request-approved","change-request-approval-added","change-request-cancelled","change-request-sent-to-review","change-request-applied"]},{name:"slack",displayName:"Slack",description:"Allows Unleash to post updates to Slack.",documentationUrl:"https://docs.getunleash.io/docs/addons/slack",parameters:[{name:"url",displayName:"Slack webhook URL",description:"(Required)",type:"url",required:!0,sensitive:!0},{name:"username",displayName:"Username",placeholder:"Unleash",description:'The username to use when posting messages to slack. Defaults to "Unleash".',type:"text",required:!1,sensitive:!1},{name:"emojiIcon",displayName:"Emoji Icon",placeholder:":unleash:",description:'The emoji_icon to use when posting messages to slack. Defaults to ":unleash:".',type:"text",required:!1,sensitive:!1},{name:"defaultChannel",displayName:"Default channel",description:"(Required) Default channel to post updates to if not specified in the slack-tag",type:"text",required:!0,sensitive:!1}],events:["feature-created","feature-updated","feature-archived","feature-revived","feature-stale-on","feature-stale-off","feature-environment-enabled","feature-environment-disabled","feature-strategy-remove","feature-strategy-update","feature-strategy-add","feature-metadata-updated","feature-variants-updated","feature-project-change"],tagTypes:[{name:"slack",description:"Slack tag used by the slack-addon to specify the slack channel.",icon:"S"}]},{name:"teams",displayName:"Microsoft Teams",description:"Allows Unleash to post updates to Microsoft Teams.",documentationUrl:"https://docs.getunleash.io/docs/addons/teams",parameters:[{name:"url",displayName:"Microsoft Teams webhook URL",description:"(Required)",type:"url",required:!0,sensitive:!0}],events:["feature-created","feature-updated","feature-archived","feature-revived","feature-stale-on","feature-stale-off","feature-environment-enabled","feature-environment-disabled","feature-strategy-remove","feature-strategy-update","feature-strategy-add","feature-metadata-updated","feature-variants-updated","feature-project-change"]},{name:"datadog",displayName:"Datadog",description:"Allows Unleash to post updates to Datadog.",documentationUrl:"https://docs.getunleash.io/docs/addons/datadog",parameters:[{name:"url",displayName:"Datadog Events URL",description:"Default URL: https://api.datadoghq.com/api/v1/events. Needs to be changed if your're not using the US1 site.",type:"url",required:!1,sensitive:!1},{name:"apiKey",displayName:"Datadog API key",placeholder:"j96c23b0f12a6b3434a8d710110bd862",description:"(Required) API key to connect to Datadog",type:"text",required:!0,sensitive:!0}],events:["feature-created","feature-updated","feature-archived","feature-revived","feature-stale-on","feature-stale-off","feature-environment-enabled","feature-environment-disabled","feature-strategy-remove","feature-strategy-update","feature-strategy-add","feature-metadata-updated","feature-project-change","feature-variants-updated"],tagTypes:[{name:"datadog",description:"All Datadog tags added to a specific feature are sent to datadog event stream.",icon:"D"}]}],items:{type:"object",additionalProperties:!1,required:["name","displayName","documentationUrl","description"],description:"An addon provider. Defines a specific addon type and what the end user must configure when creating a new addon of that type.",properties:{name:{type:"string",description:"The name of the addon type. When creating new addons, this goes in the payload's `type` field.",example:"slack"},displayName:{type:"string",description:"The addon type's name as it should be displayed in the admin UI.",example:"Slack"},documentationUrl:{type:"string",description:"A URL to where you can find more information about using this addon type.",example:"https://docs.getunleash.io/docs/addons/slack"},description:{type:"string",description:"A description of the addon type.",example:"Allows Unleash to post updates to Slack."},howTo:{type:"string",description:"A long description of how to use this addon type. This will be displayed on the top of configuration page. Can contain markdown.",example:"This is **how you use** this addon type...\n  - Step 1\n  - Step 2\n  - Step 3"},tagTypes:{type:"array",description:"A list of [Unleash tag types](https://docs.getunleash.io/reference/tags#tag-types) that this addon uses. These tags will be added to the Unleash instance when an addon of this type is created.",example:[{name:"slack",description:"Slack tag used by the slack-addon to specify the slack channel.",icon:"S"}],items:{type:"object",additionalProperties:!1,description:"A tag type.",required:["name"],properties:{name:{type:"string",description:"The name of the tag type.",example:"color"},description:{type:"string",description:"The description of the tag type.",example:"A tag type for describing the color of a tag."},icon:{type:"string",nullable:!0,description:"The icon of the tag type.",example:"not-really-used"}},title:"tagTypeSchema"}},parameters:{type:"array",description:"The addon provider's parameters. Use these to configure an addon of this provider type. Items with `required: true` must be provided.",items:{type:"object",additionalProperties:!1,required:["name","displayName","type","required","sensitive"],description:"An addon parameter definition.",properties:{name:{type:"string",example:"emojiIcon",description:"The name of the parameter as it is used in code. References to this parameter should use this value."},displayName:{type:"string",example:"Emoji Icon",description:"The name of the parameter as it is shown to the end user in the Admin UI."},type:{type:"string",description:"The type of the parameter. Corresponds roughly to [HTML `input` field types](https://developer.mozilla.org/docs/Web/HTML/Element/Input#input_types). Multi-line inut fields are indicated as `textfield` (equivalent to the HTML `textarea` tag).",example:"text"},description:{type:"string",example:'The emoji_icon to use when posting messages to slack. Defaults to ":unleash:".',description:"A description of the parameter. This should explain to the end user what the parameter is used for."},placeholder:{type:"string",example:":unleash:",description:"The default value for this parameter. This value is used if no other value is provided."},required:{type:"boolean",example:!1,description:"Whether this parameter is required or not. If a parameter is required, you must give it a value when you create the addon. If it is not required it can be left out. It may receive a default value in those cases."},sensitive:{type:"boolean",example:!1,description:'Indicates whether this parameter is **sensitive** or not. Unleash will not return sensitive parameters to API requests. It will instead use a number of asterisks to indicate that a value is set, e.g. "******". The number of asterisks does not correlate to the parameter\'s value.'}},title:"addonParameterSchema"},example:[{name:"url",displayName:"Slack webhook URL",description:"(Required)",type:"url",required:!0,sensitive:!0},{name:"username",displayName:"Username",placeholder:"Unleash",description:'The username to use when posting messages to slack. Defaults to "Unleash".',type:"text",required:!1,sensitive:!1},{name:"emojiIcon",displayName:"Emoji Icon",placeholder:":unleash:",description:'The emoji_icon to use when posting messages to slack. Defaults to ":unleash:".',type:"text",required:!1,sensitive:!1},{name:"defaultChannel",displayName:"Default channel",description:"(Required) Default channel to post updates to if not specified in the slack-tag",type:"text",required:!0,sensitive:!1}]},events:{type:"array",description:"All the [event types](https://docs.getunleash.io/reference/api/legacy/unleash/admin/events#feature-toggle-events) that are available for this addon provider.",items:{type:"string"},example:["feature-created","feature-updated","feature-archived","feature-revived","feature-stale-on","feature-stale-off","feature-environment-enabled","feature-environment-disabled","feature-strategy-remove","feature-strategy-update","feature-strategy-add","feature-metadata-updated","feature-variants-updated","feature-project-change"]},installation:{type:"object",additionalProperties:!1,required:["url"],description:"The installation configuration for this addon type.",properties:{url:{type:"string",description:"A URL to where the addon configuration should redirect to install addons of this type.",example:"https://unleash-slack-app.vercel.app/install"},title:{type:"string",description:"The title of the installation configuration. This will be displayed to the user when installing addons of this type.",example:"Slack App installation"},helpText:{type:"string",description:"The help text of the installation configuration. This will be displayed to the user when installing addons of this type.",example:"Clicking the Install button will send you to Slack to initiate the installation procedure for the Unleash Slack app for your workspace"}}},alerts:{type:"array",description:"A list of alerts to display to the user when installing addons of this type.",items:{type:"object",additionalProperties:!1,required:["type","text"],properties:{type:{type:"string",enum:["success","info","warning","error"],description:"The type of alert. This determines the color of the alert.",example:"info"},text:{type:"string",description:"The text of the alert. This is what will be displayed to the user.",example:"Please ensure you have the Unleash Slack App installed in your Slack workspace if you haven't installed it already. If you want the Unleash Slack App bot to post messages to private channels, you'll need to invite it to those channels."}}}},deprecated:{type:"string",description:"This should be used to inform the user that this addon type is deprecated and should not be used. Deprecated addons will show a badge with this information on the UI.",example:"This integration is deprecated. Please try the new integration instead."}},title:"addonTypeSchema"}}},title:"addonsSchema"}}}},401:{description:"Authorization information is missing or invalid. Provide a valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.",content:{"application/json":{schema:{type:"object",properties:{id:{type:"string",example:"9c40958a-daac-400e-98fb-3bb438567008",description:"The ID of the error instance"},name:{type:"string",example:"AuthenticationRequired",description:"The name of the error kind"},message:{type:"string",example:"You must log in to use Unleash. Your request had no authorization header, so we could not authorize you. Try logging in at /auth/simple/login.",description:"A description of what went wrong."}}}}}}},method:"get",path:"/api/admin/addons",servers:[{url:"<your-unleash-url>"}],security:[{apiKey:[]}],securitySchemes:{apiKey:{type:"apiKey",in:"header",name:"Authorization"}},info:{title:"Unleash API",version:"5.6.10"},postman:{name:"Get all addons and providers",description:{content:"Retrieve all addons and providers that are defined on this Unleash instance.",type:"text/plain"},url:{path:["api","admin","addons"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"reference/api/unleash/unleash-api",custom_edit_url:null},u=void 0,f={unversionedId:"reference/api/unleash/get-addons",id:"reference/api/unleash/get-addons",title:"Get all addons and providers",description:"Retrieve all addons and providers that are defined on this Unleash instance.",source:"@site/docs/reference/api/unleash/get-addons.api.mdx",sourceDirName:"reference/api/unleash",slug:"/reference/api/unleash/get-addons",permalink:"/reference/api/unleash/get-addons",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"get-addons",title:"Get all addons and providers",description:"Retrieve all addons and providers that are defined on this Unleash instance.",sidebar_label:"Get all addons and providers",hide_title:!0,hide_table_of_contents:!0,api:{description:"Retrieve all addons and providers that are defined on this Unleash instance.",tags:["Addons"],operationId:"getAddons",responses:{200:{description:"addonsSchema",content:{"application/json":{schema:{type:"object",required:["addons","providers"],description:"An object containing two things:\n1. A list of all [addons](https://docs.getunleash.io/reference/addons) defined on this Unleash instance\n2. A list of all addon providers defined on this instance",properties:{addons:{type:"array",description:"All the addons that exist on this instance of Unleash.",items:{type:"object",description:"An [addon](https://docs.getunleash.io/reference/addons) instance description. Contains data about what kind of provider it uses, whether it's enabled or not, what events it listens for, and more.",required:["id","description","provider","enabled","parameters","events"],properties:{id:{type:"integer",minimum:1,example:27,description:"The addon's unique identifier."},provider:{type:"string",description:'The addon provider, such as "webhook" or "slack".',example:"webhook"},description:{type:"string",description:"A description of the addon. `null` if no description exists.",example:"This addon posts updates to our internal feature tracking system whenever a feature is created or updated.",nullable:!0},enabled:{type:"boolean",description:"Whether the addon is enabled or not."},parameters:{type:"object",additionalProperties:{},example:{url:"http://localhost:4242/webhook"},description:"Parameters for the addon provider. This object has different required and optional properties depending on the provider you choose."},events:{type:"array",description:"The event types that trigger this specific addon.",items:{type:"string"},example:["feature-created","feature-updated"]},projects:{type:"array",description:"The projects that this addon listens to events from. An empty list means it listens to events from **all** projects.",example:["new-landing-project","signups-v2"],items:{type:"string"}},environments:{type:"array",description:"The list of environments that this addon listens to events from. An empty list means it listens to events from **all** environments.",example:["development","production"],items:{type:"string"}}},title:"addonSchema"}},providers:{type:"array",description:"A list of  all available addon providers, along with their parameters and descriptions.",example:[{name:"webhook",displayName:"Webhook",description:"A Webhook is a generic way to post messages from Unleash to third party services.",documentationUrl:"https://docs.getunleash.io/docs/addons/webhook",parameters:[{name:"url",displayName:"Webhook URL",description:"(Required) Unleash will perform a HTTP Post to the specified URL (one retry if first attempt fails)",type:"url",required:!0,sensitive:!0},{name:"contentType",displayName:"Content-Type",placeholder:"application/json",description:'(Optional) The Content-Type header to use. Defaults to "application/json".',type:"text",required:!1,sensitive:!1},{name:"authorization",displayName:"Authorization",placeholder:"",description:"(Optional) The Authorization header to use. Not used if left blank.",type:"text",required:!1,sensitive:!0},{name:"bodyTemplate",displayName:"Body template",placeholder:'{\n  "event": "{{event.type}}",\n  "createdBy": "{{event.createdBy}}",\n  "featureToggle": "{{event.data.name}}",\n  "timestamp": "{{event.data.createdAt}}"\n}',description:"(Optional) You may format the body using a mustache template. If you don't specify anything, the format will similar to the events format (https://docs.getunleash.io/reference/api/legacy/unleash/admin/events)",type:"textfield",required:!1,sensitive:!1}],events:["feature-created","feature-updated","feature-archived","feature-revived","feature-stale-on","feature-stale-off","feature-environment-enabled","feature-environment-disabled","feature-strategy-remove","feature-strategy-update","feature-strategy-add","feature-metadata-updated","feature-variants-updated","feature-project-change","feature-tagged","feature-untagged","change-request-created","change-request-discarded","change-added","change-discarded","change-request-approved","change-request-approval-added","change-request-cancelled","change-request-sent-to-review","change-request-applied"]},{name:"slack",displayName:"Slack",description:"Allows Unleash to post updates to Slack.",documentationUrl:"https://docs.getunleash.io/docs/addons/slack",parameters:[{name:"url",displayName:"Slack webhook URL",description:"(Required)",type:"url",required:!0,sensitive:!0},{name:"username",displayName:"Username",placeholder:"Unleash",description:'The username to use when posting messages to slack. Defaults to "Unleash".',type:"text",required:!1,sensitive:!1},{name:"emojiIcon",displayName:"Emoji Icon",placeholder:":unleash:",description:'The emoji_icon to use when posting messages to slack. Defaults to ":unleash:".',type:"text",required:!1,sensitive:!1},{name:"defaultChannel",displayName:"Default channel",description:"(Required) Default channel to post updates to if not specified in the slack-tag",type:"text",required:!0,sensitive:!1}],events:["feature-created","feature-updated","feature-archived","feature-revived","feature-stale-on","feature-stale-off","feature-environment-enabled","feature-environment-disabled","feature-strategy-remove","feature-strategy-update","feature-strategy-add","feature-metadata-updated","feature-variants-updated","feature-project-change"],tagTypes:[{name:"slack",description:"Slack tag used by the slack-addon to specify the slack channel.",icon:"S"}]},{name:"teams",displayName:"Microsoft Teams",description:"Allows Unleash to post updates to Microsoft Teams.",documentationUrl:"https://docs.getunleash.io/docs/addons/teams",parameters:[{name:"url",displayName:"Microsoft Teams webhook URL",description:"(Required)",type:"url",required:!0,sensitive:!0}],events:["feature-created","feature-updated","feature-archived","feature-revived","feature-stale-on","feature-stale-off","feature-environment-enabled","feature-environment-disabled","feature-strategy-remove","feature-strategy-update","feature-strategy-add","feature-metadata-updated","feature-variants-updated","feature-project-change"]},{name:"datadog",displayName:"Datadog",description:"Allows Unleash to post updates to Datadog.",documentationUrl:"https://docs.getunleash.io/docs/addons/datadog",parameters:[{name:"url",displayName:"Datadog Events URL",description:"Default URL: https://api.datadoghq.com/api/v1/events. Needs to be changed if your're not using the US1 site.",type:"url",required:!1,sensitive:!1},{name:"apiKey",displayName:"Datadog API key",placeholder:"j96c23b0f12a6b3434a8d710110bd862",description:"(Required) API key to connect to Datadog",type:"text",required:!0,sensitive:!0}],events:["feature-created","feature-updated","feature-archived","feature-revived","feature-stale-on","feature-stale-off","feature-environment-enabled","feature-environment-disabled","feature-strategy-remove","feature-strategy-update","feature-strategy-add","feature-metadata-updated","feature-project-change","feature-variants-updated"],tagTypes:[{name:"datadog",description:"All Datadog tags added to a specific feature are sent to datadog event stream.",icon:"D"}]}],items:{type:"object",additionalProperties:!1,required:["name","displayName","documentationUrl","description"],description:"An addon provider. Defines a specific addon type and what the end user must configure when creating a new addon of that type.",properties:{name:{type:"string",description:"The name of the addon type. When creating new addons, this goes in the payload's `type` field.",example:"slack"},displayName:{type:"string",description:"The addon type's name as it should be displayed in the admin UI.",example:"Slack"},documentationUrl:{type:"string",description:"A URL to where you can find more information about using this addon type.",example:"https://docs.getunleash.io/docs/addons/slack"},description:{type:"string",description:"A description of the addon type.",example:"Allows Unleash to post updates to Slack."},howTo:{type:"string",description:"A long description of how to use this addon type. This will be displayed on the top of configuration page. Can contain markdown.",example:"This is **how you use** this addon type...\n  - Step 1\n  - Step 2\n  - Step 3"},tagTypes:{type:"array",description:"A list of [Unleash tag types](https://docs.getunleash.io/reference/tags#tag-types) that this addon uses. These tags will be added to the Unleash instance when an addon of this type is created.",example:[{name:"slack",description:"Slack tag used by the slack-addon to specify the slack channel.",icon:"S"}],items:{type:"object",additionalProperties:!1,description:"A tag type.",required:["name"],properties:{name:{type:"string",description:"The name of the tag type.",example:"color"},description:{type:"string",description:"The description of the tag type.",example:"A tag type for describing the color of a tag."},icon:{type:"string",nullable:!0,description:"The icon of the tag type.",example:"not-really-used"}},title:"tagTypeSchema"}},parameters:{type:"array",description:"The addon provider's parameters. Use these to configure an addon of this provider type. Items with `required: true` must be provided.",items:{type:"object",additionalProperties:!1,required:["name","displayName","type","required","sensitive"],description:"An addon parameter definition.",properties:{name:{type:"string",example:"emojiIcon",description:"The name of the parameter as it is used in code. References to this parameter should use this value."},displayName:{type:"string",example:"Emoji Icon",description:"The name of the parameter as it is shown to the end user in the Admin UI."},type:{type:"string",description:"The type of the parameter. Corresponds roughly to [HTML `input` field types](https://developer.mozilla.org/docs/Web/HTML/Element/Input#input_types). Multi-line inut fields are indicated as `textfield` (equivalent to the HTML `textarea` tag).",example:"text"},description:{type:"string",example:'The emoji_icon to use when posting messages to slack. Defaults to ":unleash:".',description:"A description of the parameter. This should explain to the end user what the parameter is used for."},placeholder:{type:"string",example:":unleash:",description:"The default value for this parameter. This value is used if no other value is provided."},required:{type:"boolean",example:!1,description:"Whether this parameter is required or not. If a parameter is required, you must give it a value when you create the addon. If it is not required it can be left out. It may receive a default value in those cases."},sensitive:{type:"boolean",example:!1,description:'Indicates whether this parameter is **sensitive** or not. Unleash will not return sensitive parameters to API requests. It will instead use a number of asterisks to indicate that a value is set, e.g. "******". The number of asterisks does not correlate to the parameter\'s value.'}},title:"addonParameterSchema"},example:[{name:"url",displayName:"Slack webhook URL",description:"(Required)",type:"url",required:!0,sensitive:!0},{name:"username",displayName:"Username",placeholder:"Unleash",description:'The username to use when posting messages to slack. Defaults to "Unleash".',type:"text",required:!1,sensitive:!1},{name:"emojiIcon",displayName:"Emoji Icon",placeholder:":unleash:",description:'The emoji_icon to use when posting messages to slack. Defaults to ":unleash:".',type:"text",required:!1,sensitive:!1},{name:"defaultChannel",displayName:"Default channel",description:"(Required) Default channel to post updates to if not specified in the slack-tag",type:"text",required:!0,sensitive:!1}]},events:{type:"array",description:"All the [event types](https://docs.getunleash.io/reference/api/legacy/unleash/admin/events#feature-toggle-events) that are available for this addon provider.",items:{type:"string"},example:["feature-created","feature-updated","feature-archived","feature-revived","feature-stale-on","feature-stale-off","feature-environment-enabled","feature-environment-disabled","feature-strategy-remove","feature-strategy-update","feature-strategy-add","feature-metadata-updated","feature-variants-updated","feature-project-change"]},installation:{type:"object",additionalProperties:!1,required:["url"],description:"The installation configuration for this addon type.",properties:{url:{type:"string",description:"A URL to where the addon configuration should redirect to install addons of this type.",example:"https://unleash-slack-app.vercel.app/install"},title:{type:"string",description:"The title of the installation configuration. This will be displayed to the user when installing addons of this type.",example:"Slack App installation"},helpText:{type:"string",description:"The help text of the installation configuration. This will be displayed to the user when installing addons of this type.",example:"Clicking the Install button will send you to Slack to initiate the installation procedure for the Unleash Slack app for your workspace"}}},alerts:{type:"array",description:"A list of alerts to display to the user when installing addons of this type.",items:{type:"object",additionalProperties:!1,required:["type","text"],properties:{type:{type:"string",enum:["success","info","warning","error"],description:"The type of alert. This determines the color of the alert.",example:"info"},text:{type:"string",description:"The text of the alert. This is what will be displayed to the user.",example:"Please ensure you have the Unleash Slack App installed in your Slack workspace if you haven't installed it already. If you want the Unleash Slack App bot to post messages to private channels, you'll need to invite it to those channels."}}}},deprecated:{type:"string",description:"This should be used to inform the user that this addon type is deprecated and should not be used. Deprecated addons will show a badge with this information on the UI.",example:"This integration is deprecated. Please try the new integration instead."}},title:"addonTypeSchema"}}},title:"addonsSchema"}}}},401:{description:"Authorization information is missing or invalid. Provide a valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.",content:{"application/json":{schema:{type:"object",properties:{id:{type:"string",example:"9c40958a-daac-400e-98fb-3bb438567008",description:"The ID of the error instance"},name:{type:"string",example:"AuthenticationRequired",description:"The name of the error kind"},message:{type:"string",example:"You must log in to use Unleash. Your request had no authorization header, so we could not authorize you. Try logging in at /auth/simple/login.",description:"A description of what went wrong."}}}}}}},method:"get",path:"/api/admin/addons",servers:[{url:"<your-unleash-url>"}],security:[{apiKey:[]}],securitySchemes:{apiKey:{type:"apiKey",in:"header",name:"Authorization"}},info:{title:"Unleash API",version:"5.6.10"},postman:{name:"Get all addons and providers",description:{content:"Retrieve all addons and providers that are defined on this Unleash instance.",type:"text/plain"},url:{path:["api","admin","addons"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"reference/api/unleash/unleash-api",custom_edit_url:null},sidebar:"documentation",previous:{title:"Addons",permalink:"/reference/api/unleash/addons"},next:{title:"Create a new addon",permalink:"/reference/api/unleash/create-addon"}},y={},g=[{value:"Request",id:"request",level:2}],v={toc:g};function k(e){let{components:t,...a}=e;return(0,s.kt)("wrapper",(0,n.Z)({},v,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{className:"openapi__heading"},"Get all addons and providers"),(0,s.kt)(r.Z,{method:"get",path:"/api/admin/addons",mdxType:"MethodEndpoint"}),(0,s.kt)(o.Z,{infoPath:"reference/api/unleash/unleash-api",mdxType:"SecuritySchemes"}),(0,s.kt)("p",null,"Retrieve all addons and providers that are defined on this Unleash instance."),(0,s.kt)("h2",{id:"request"},"Request"),(0,s.kt)("div",null,(0,s.kt)("div",null,(0,s.kt)(i.Z,{mdxType:"ApiTabs"},(0,s.kt)(c.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,s.kt)("div",null,(0,s.kt)("p",null,"addonsSchema")),(0,s.kt)("div",null,(0,s.kt)(d.Z,{className:"openapi-tabs__mime",schemaType:"response",mdxType:"MimeTabs"},(0,s.kt)(c.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,s.kt)(m.Z,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,s.kt)(c.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details"},(0,s.kt)("summary",{style:{}},(0,s.kt)("span",{className:"openapi-schema__container"},(0,s.kt)("strong",{className:"openapi-schema__property"},"addons"),(0,s.kt)("span",{className:"openapi-schema__name"}," object[]"),(0,s.kt)("span",{className:"openapi-schema__divider"}),(0,s.kt)("span",{className:"openapi-schema__required"},"required"))),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"All the addons that exist on this instance of Unleash.")),(0,s.kt)("li",null,(0,s.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,s.kt)(p.Z,{collapsible:!1,name:"id",required:!0,schemaName:"integer",qualifierMessage:"**Possible values:** `>= 1`",schema:{type:"integer",minimum:1,example:27,description:"The addon's unique identifier."},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"provider",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:'The addon provider, such as "webhook" or "slack".',example:"webhook"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"description",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"A description of the addon. `null` if no description exists.",example:"This addon posts updates to our internal feature tracking system whenever a feature is created or updated.",nullable:!0},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"enabled",required:!0,schemaName:"boolean",qualifierMessage:void 0,schema:{type:"boolean",description:"Whether the addon is enabled or not."},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details"},(0,s.kt)("summary",{style:{}},(0,s.kt)("span",{className:"openapi-schema__container"},(0,s.kt)("strong",{className:"openapi-schema__property"},"parameters"),(0,s.kt)("span",{className:"openapi-schema__name"}," object"),(0,s.kt)("span",{className:"openapi-schema__divider"}),(0,s.kt)("span",{className:"openapi-schema__required"},"required"))),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"Parameters for the addon provider. This object has different required and optional properties depending on the provider you choose."))))),(0,s.kt)(p.Z,{collapsible:!1,name:"events",required:!0,schemaName:"string[]",qualifierMessage:void 0,schema:{type:"array",description:"The event types that trigger this specific addon.",items:{type:"string"},example:["feature-created","feature-updated"]},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"projects",required:!1,schemaName:"string[]",qualifierMessage:void 0,schema:{type:"array",description:"The projects that this addon listens to events from. An empty list means it listens to events from **all** projects.",example:["new-landing-project","signups-v2"],items:{type:"string"}},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"environments",required:!1,schemaName:"string[]",qualifierMessage:void 0,schema:{type:"array",description:"The list of environments that this addon listens to events from. An empty list means it listens to events from **all** environments.",example:["development","production"],items:{type:"string"}},mdxType:"SchemaItem"}),(0,s.kt)("li",null,(0,s.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]"))))),(0,s.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details"},(0,s.kt)("summary",{style:{}},(0,s.kt)("span",{className:"openapi-schema__container"},(0,s.kt)("strong",{className:"openapi-schema__property"},"providers"),(0,s.kt)("span",{className:"openapi-schema__name"}," object[]"),(0,s.kt)("span",{className:"openapi-schema__divider"}),(0,s.kt)("span",{className:"openapi-schema__required"},"required"))),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"A list of  all available addon providers, along with their parameters and descriptions.")),(0,s.kt)("li",null,(0,s.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,s.kt)(p.Z,{collapsible:!1,name:"name",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The name of the addon type. When creating new addons, this goes in the payload's `type` field.",example:"slack"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"displayName",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The addon type's name as it should be displayed in the admin UI.",example:"Slack"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"documentationUrl",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"A URL to where you can find more information about using this addon type.",example:"https://docs.getunleash.io/docs/addons/slack"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"description",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"A description of the addon type.",example:"Allows Unleash to post updates to Slack."},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"howTo",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"A long description of how to use this addon type. This will be displayed on the top of configuration page. Can contain markdown.",example:"This is **how you use** this addon type...\n  - Step 1\n  - Step 2\n  - Step 3"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details"},(0,s.kt)("summary",{style:{}},(0,s.kt)("span",{className:"openapi-schema__container"},(0,s.kt)("strong",{className:"openapi-schema__property"},"tagTypes"),(0,s.kt)("span",{className:"openapi-schema__name"}," object[]"))),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"A list of ",(0,s.kt)("a",{parentName:"p",href:"https://docs.getunleash.io/reference/tags#tag-types"},"Unleash tag types")," that this addon uses. These tags will be added to the Unleash instance when an addon of this type is created.")),(0,s.kt)("li",null,(0,s.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,s.kt)(p.Z,{collapsible:!1,name:"name",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The name of the tag type.",example:"color"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"description",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The description of the tag type.",example:"A tag type for describing the color of a tag."},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"icon",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",nullable:!0,description:"The icon of the tag type.",example:"not-really-used"},mdxType:"SchemaItem"}),(0,s.kt)("li",null,(0,s.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]"))))),(0,s.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details"},(0,s.kt)("summary",{style:{}},(0,s.kt)("span",{className:"openapi-schema__container"},(0,s.kt)("strong",{className:"openapi-schema__property"},"parameters"),(0,s.kt)("span",{className:"openapi-schema__name"}," object[]"))),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"The addon provider's parameters. Use these to configure an addon of this provider type. Items with ",(0,s.kt)("inlineCode",{parentName:"p"},"required: true")," must be provided.")),(0,s.kt)("li",null,(0,s.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,s.kt)(p.Z,{collapsible:!1,name:"name",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"emojiIcon",description:"The name of the parameter as it is used in code. References to this parameter should use this value."},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"displayName",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Emoji Icon",description:"The name of the parameter as it is shown to the end user in the Admin UI."},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"type",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The type of the parameter. Corresponds roughly to [HTML `input` field types](https://developer.mozilla.org/docs/Web/HTML/Element/Input#input_types). Multi-line inut fields are indicated as `textfield` (equivalent to the HTML `textarea` tag).",example:"text"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"description",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:'The emoji_icon to use when posting messages to slack. Defaults to ":unleash:".',description:"A description of the parameter. This should explain to the end user what the parameter is used for."},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"placeholder",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:":unleash:",description:"The default value for this parameter. This value is used if no other value is provided."},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"required",required:!0,schemaName:"boolean",qualifierMessage:void 0,schema:{type:"boolean",example:!1,description:"Whether this parameter is required or not. If a parameter is required, you must give it a value when you create the addon. If it is not required it can be left out. It may receive a default value in those cases."},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"sensitive",required:!0,schemaName:"boolean",qualifierMessage:void 0,schema:{type:"boolean",example:!1,description:'Indicates whether this parameter is **sensitive** or not. Unleash will not return sensitive parameters to API requests. It will instead use a number of asterisks to indicate that a value is set, e.g. "******". The number of asterisks does not correlate to the parameter\'s value.'},mdxType:"SchemaItem"}),(0,s.kt)("li",null,(0,s.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]"))))),(0,s.kt)(p.Z,{collapsible:!1,name:"events",required:!1,schemaName:"string[]",qualifierMessage:void 0,schema:{type:"array",description:"All the [event types](https://docs.getunleash.io/reference/api/legacy/unleash/admin/events#feature-toggle-events) that are available for this addon provider.",items:{type:"string"},example:["feature-created","feature-updated","feature-archived","feature-revived","feature-stale-on","feature-stale-off","feature-environment-enabled","feature-environment-disabled","feature-strategy-remove","feature-strategy-update","feature-strategy-add","feature-metadata-updated","feature-variants-updated","feature-project-change"]},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details"},(0,s.kt)("summary",{style:{}},(0,s.kt)("span",{className:"openapi-schema__container"},(0,s.kt)("strong",{className:"openapi-schema__property"},"installation"),(0,s.kt)("span",{className:"openapi-schema__name"}," object"))),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"The installation configuration for this addon type.")),(0,s.kt)(p.Z,{collapsible:!1,name:"url",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"A URL to where the addon configuration should redirect to install addons of this type.",example:"https://unleash-slack-app.vercel.app/install"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"title",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The title of the installation configuration. This will be displayed to the user when installing addons of this type.",example:"Slack App installation"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"helpText",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The help text of the installation configuration. This will be displayed to the user when installing addons of this type.",example:"Clicking the Install button will send you to Slack to initiate the installation procedure for the Unleash Slack app for your workspace"},mdxType:"SchemaItem"})))),(0,s.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details"},(0,s.kt)("summary",{style:{}},(0,s.kt)("span",{className:"openapi-schema__container"},(0,s.kt)("strong",{className:"openapi-schema__property"},"alerts"),(0,s.kt)("span",{className:"openapi-schema__name"}," object[]"))),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"A list of alerts to display to the user when installing addons of this type.")),(0,s.kt)("li",null,(0,s.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,s.kt)(p.Z,{collapsible:!1,name:"type",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`success`, `info`, `warning`, `error`]",schema:{type:"string",enum:["success","info","warning","error"],description:"The type of alert. This determines the color of the alert.",example:"info"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"text",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The text of the alert. This is what will be displayed to the user.",example:"Please ensure you have the Unleash Slack App installed in your Slack workspace if you haven't installed it already. If you want the Unleash Slack App bot to post messages to private channels, you'll need to invite it to those channels."},mdxType:"SchemaItem"}),(0,s.kt)("li",null,(0,s.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]"))))),(0,s.kt)(p.Z,{collapsible:!1,name:"deprecated",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"This should be used to inform the user that this addon type is deprecated and should not be used. Deprecated addons will show a badge with this information on the UI.",example:"This integration is deprecated. Please try the new integration instead."},mdxType:"SchemaItem"}),(0,s.kt)("li",null,(0,s.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]")))))))),(0,s.kt)(c.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,s.kt)(l.Z,{responseExample:'{\n  "addons": [\n    {\n      "id": 27,\n      "provider": "webhook",\n      "description": "This addon posts updates to our internal feature tracking system whenever a feature is created or updated.",\n      "enabled": true,\n      "parameters": {\n        "url": "http://localhost:4242/webhook"\n      },\n      "events": [\n        "feature-created",\n        "feature-updated"\n      ],\n      "projects": [\n        "new-landing-project",\n        "signups-v2"\n      ],\n      "environments": [\n        "development",\n        "production"\n      ]\n    }\n  ],\n  "providers": [\n    {\n      "name": "webhook",\n      "displayName": "Webhook",\n      "description": "A Webhook is a generic way to post messages from Unleash to third party services.",\n      "documentationUrl": "https://docs.getunleash.io/docs/addons/webhook",\n      "parameters": [\n        {\n          "name": "url",\n          "displayName": "Webhook URL",\n          "description": "(Required) Unleash will perform a HTTP Post to the specified URL (one retry if first attempt fails)",\n          "type": "url",\n          "required": true,\n          "sensitive": true\n        },\n        {\n          "name": "contentType",\n          "displayName": "Content-Type",\n          "placeholder": "application/json",\n          "description": "(Optional) The Content-Type header to use. Defaults to \\"application/json\\".",\n          "type": "text",\n          "required": false,\n          "sensitive": false\n        },\n        {\n          "name": "authorization",\n          "displayName": "Authorization",\n          "placeholder": "",\n          "description": "(Optional) The Authorization header to use. Not used if left blank.",\n          "type": "text",\n          "required": false,\n          "sensitive": true\n        },\n        {\n          "name": "bodyTemplate",\n          "displayName": "Body template",\n          "placeholder": "{\\n  \\"event\\": \\"{{event.type}}\\",\\n  \\"createdBy\\": \\"{{event.createdBy}}\\",\\n  \\"featureToggle\\": \\"{{event.data.name}}\\",\\n  \\"timestamp\\": \\"{{event.data.createdAt}}\\"\\n}",\n          "description": "(Optional) You may format the body using a mustache template. If you don\'t specify anything, the format will similar to the events format (https://docs.getunleash.io/reference/api/legacy/unleash/admin/events)",\n          "type": "textfield",\n          "required": false,\n          "sensitive": false\n        }\n      ],\n      "events": [\n        "feature-created",\n        "feature-updated",\n        "feature-archived",\n        "feature-revived",\n        "feature-stale-on",\n        "feature-stale-off",\n        "feature-environment-enabled",\n        "feature-environment-disabled",\n        "feature-strategy-remove",\n        "feature-strategy-update",\n        "feature-strategy-add",\n        "feature-metadata-updated",\n        "feature-variants-updated",\n        "feature-project-change",\n        "feature-tagged",\n        "feature-untagged",\n        "change-request-created",\n        "change-request-discarded",\n        "change-added",\n        "change-discarded",\n        "change-request-approved",\n        "change-request-approval-added",\n        "change-request-cancelled",\n        "change-request-sent-to-review",\n        "change-request-applied"\n      ]\n    },\n    {\n      "name": "slack",\n      "displayName": "Slack",\n      "description": "Allows Unleash to post updates to Slack.",\n      "documentationUrl": "https://docs.getunleash.io/docs/addons/slack",\n      "parameters": [\n        {\n          "name": "url",\n          "displayName": "Slack webhook URL",\n          "description": "(Required)",\n          "type": "url",\n          "required": true,\n          "sensitive": true\n        },\n        {\n          "name": "username",\n          "displayName": "Username",\n          "placeholder": "Unleash",\n          "description": "The username to use when posting messages to slack. Defaults to \\"Unleash\\".",\n          "type": "text",\n          "required": false,\n          "sensitive": false\n        },\n        {\n          "name": "emojiIcon",\n          "displayName": "Emoji Icon",\n          "placeholder": ":unleash:",\n          "description": "The emoji_icon to use when posting messages to slack. Defaults to \\":unleash:\\".",\n          "type": "text",\n          "required": false,\n          "sensitive": false\n        },\n        {\n          "name": "defaultChannel",\n          "displayName": "Default channel",\n          "description": "(Required) Default channel to post updates to if not specified in the slack-tag",\n          "type": "text",\n          "required": true,\n          "sensitive": false\n        }\n      ],\n      "events": [\n        "feature-created",\n        "feature-updated",\n        "feature-archived",\n        "feature-revived",\n        "feature-stale-on",\n        "feature-stale-off",\n        "feature-environment-enabled",\n        "feature-environment-disabled",\n        "feature-strategy-remove",\n        "feature-strategy-update",\n        "feature-strategy-add",\n        "feature-metadata-updated",\n        "feature-variants-updated",\n        "feature-project-change"\n      ],\n      "tagTypes": [\n        {\n          "name": "slack",\n          "description": "Slack tag used by the slack-addon to specify the slack channel.",\n          "icon": "S"\n        }\n      ]\n    },\n    {\n      "name": "teams",\n      "displayName": "Microsoft Teams",\n      "description": "Allows Unleash to post updates to Microsoft Teams.",\n      "documentationUrl": "https://docs.getunleash.io/docs/addons/teams",\n      "parameters": [\n        {\n          "name": "url",\n          "displayName": "Microsoft Teams webhook URL",\n          "description": "(Required)",\n          "type": "url",\n          "required": true,\n          "sensitive": true\n        }\n      ],\n      "events": [\n        "feature-created",\n        "feature-updated",\n        "feature-archived",\n        "feature-revived",\n        "feature-stale-on",\n        "feature-stale-off",\n        "feature-environment-enabled",\n        "feature-environment-disabled",\n        "feature-strategy-remove",\n        "feature-strategy-update",\n        "feature-strategy-add",\n        "feature-metadata-updated",\n        "feature-variants-updated",\n        "feature-project-change"\n      ]\n    },\n    {\n      "name": "datadog",\n      "displayName": "Datadog",\n      "description": "Allows Unleash to post updates to Datadog.",\n      "documentationUrl": "https://docs.getunleash.io/docs/addons/datadog",\n      "parameters": [\n        {\n          "name": "url",\n          "displayName": "Datadog Events URL",\n          "description": "Default URL: https://api.datadoghq.com/api/v1/events. Needs to be changed if your\'re not using the US1 site.",\n          "type": "url",\n          "required": false,\n          "sensitive": false\n        },\n        {\n          "name": "apiKey",\n          "displayName": "Datadog API key",\n          "placeholder": "j96c23b0f12a6b3434a8d710110bd862",\n          "description": "(Required) API key to connect to Datadog",\n          "type": "text",\n          "required": true,\n          "sensitive": true\n        }\n      ],\n      "events": [\n        "feature-created",\n        "feature-updated",\n        "feature-archived",\n        "feature-revived",\n        "feature-stale-on",\n        "feature-stale-off",\n        "feature-environment-enabled",\n        "feature-environment-disabled",\n        "feature-strategy-remove",\n        "feature-strategy-update",\n        "feature-strategy-add",\n        "feature-metadata-updated",\n        "feature-project-change",\n        "feature-variants-updated"\n      ],\n      "tagTypes": [\n        {\n          "name": "datadog",\n          "description": "All Datadog tags added to a specific feature are sent to datadog event stream.",\n          "icon": "D"\n        }\n      ]\n    }\n  ]\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,s.kt)(c.Z,{label:"401",value:"401",mdxType:"TabItem"},(0,s.kt)("div",null,(0,s.kt)("p",null,"Authorization information is missing or invalid. Provide a valid API token as the ",(0,s.kt)("inlineCode",{parentName:"p"},"authorization")," header, e.g. ",(0,s.kt)("inlineCode",{parentName:"p"},"authorization:*.*.my-admin-token"),".")),(0,s.kt)("div",null,(0,s.kt)(d.Z,{className:"openapi-tabs__mime",schemaType:"response",mdxType:"MimeTabs"},(0,s.kt)(c.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,s.kt)(m.Z,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,s.kt)(c.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)(p.Z,{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"9c40958a-daac-400e-98fb-3bb438567008",description:"The ID of the error instance"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"name",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"AuthenticationRequired",description:"The name of the error kind"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"message",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"You must log in to use Unleash. Your request had no authorization header, so we could not authorize you. Try logging in at /auth/simple/login.",description:"A description of what went wrong."},mdxType:"SchemaItem"})))),(0,s.kt)(c.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,s.kt)(l.Z,{responseExample:'{\n  "id": "9c40958a-daac-400e-98fb-3bb438567008",\n  "name": "AuthenticationRequired",\n  "message": "You must log in to use Unleash. Your request had no authorization header, so we could not authorize you. Try logging in at /auth/simple/login."\n}',language:"json",mdxType:"ResponseSamples"})))))))))))}k.isMDXComponent=!0}}]);